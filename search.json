[{"path":"https://genomicsmachinelearning.github.io/SpaMTP/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 SpaMTP authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/articles/Annotation_Refinement.html","id":"refinning-mz-metabolite-annotations-with-spamtp","dir":"Articles","previous_headings":"","what":"Refinning m/z Metabolite Annotations with SpaMTP","title":"SpaMTP: Refinning Metabolite Annotations","text":"tutorial highlights use SpaMTP refine m/z annotated multiple metabolites. SpaMTP implements 4 different ways, functions: CalculateAnnotationStatistics RefineLipids Pseudo_msms Compare_msms visit detail . Author: Andrew Causer","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/articles/Annotation_Refinement.html","id":"install-and-import-r-libraries","dir":"Articles","previous_headings":"Refinning m/z Metabolite Annotations with SpaMTP","what":"Install and Import R Libraries","title":"SpaMTP: Refinning Metabolite Annotations","text":"First need import required libraries analysis.","code":"## Install SpaMTP if not previously installed if (!require(\"SpaMTP\"))     devtools::install_github(\"GenomicsMachineLearning/SpaMTP\")  #General Libraries library(SpaMTP) library(Cardinal) library(Seurat) library(dplyr) library(tidyr)  #For plotting + DE plots library(ggplot2) library(EnhancedVolcano) library(viridis)"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/articles/Annotation_Refinement.html","id":"pathway-based-refinement-calculateannotationstatistics","dir":"Articles","previous_headings":"Refinning m/z Metabolite Annotations with SpaMTP","what":"1) Pathway-Based Refinement: CalculateAnnotationStatistics","title":"SpaMTP: Refinning Metabolite Annotations","text":"function uses correlations pathway expression (Metabolite , Gene Multi Omic based pathway information) refine metabolite annotation. Specifically, annotated metabolite, expression profiles known pathways associated metabolite calculated. Based spatial colocalisation relative pathways given m/z mass, metabolite ranked based Pearson correlation values number significant pathways associated metabolite. use public mouse liver dataset spotted chemicals standards demonstrate : SpaMTP Seurat object already processed, m/z annotated. Meaning 1303 annotated m/z values. dataset includes certain chemical compounds ‘spiked-’ known locations. plot :  plot highlights location known metabolite. However, due inherent issue mass spectrometry imaging data one m/z mass may associated multiple possible metabolites. example adenosine triphosphate ATP spiked-second set wells within liver (green). look annotation ATP, can see m/z-505.988470137 4 different annotations, one ATP. Plotting m/z value spatially, localises completely within ATP spiked-region.  confirms correct annotation mz-505.988470137 ‘ATP’. case spiked-chemicals. refine annotations based pathway correlation can run SpaMTP’s CalculateAnnotationStatistics: running CalculateAnnotationStatistics output dataframe containing likely annotation m/z value based correlations pathway expression. Lets subset output look spiked-metabolites: can see spiked-metabolite predicted metabolite highest significance case corresponded spike-. method gives user higher confidence annotations m/z value correct biologically significant. Note: large datasets function can take run, function CalculateSingleAnnotationStatistics can used instead calculate refined annotations single m/z value. Please visit documentation information.","code":"spotted <- readRDS(url(\"https://zenodo.org/records/17289187/files/spotted_Annotated_H_Cl_Adducts.RDS?download=1\")) spotted ## An object of class Seurat  ## 1303 features across 109390 samples within 1 assay  ## Active assay: Spatial (1303 features, 0 variable features) ##  1 layer present: counts ##  1 spatial field of view present: fov metabolite_colors <- list(\"ATP\" = \"azure\",\"ADP\" = \"green\",\"Adenosine\" = \"yellow\", \"Guanine\" = \"red\",\"Glutamic Acid\" = \"turquoise1\", \"Glutamine\" = \"chocolate1\",\"Glutathione\" = \"deeppink\",\"liver\" = \"black\")  ImageDimPlot(spotted, group.by = \"clusters\", cols = metabolite_colors, dark.background = F) SearchAnnotations(spotted, metabolite = \"Adenosine triphosphate\", search.exact = T) ImageDimPlot(spotted, group.by = \"clusters\", cols = setNames(   ifelse(names(metabolite_colors) == \"ATP\", \"azure\", \"darkgrey\"),names(metabolite_colors) ))+ ggtitle(\"ATP\")| ImageMZPlot(spotted, mzs = 505.9885) ## Step 1: Create a pathway assay - This can be done using only metabolites, or can be merged to include genes if applicable spotted <- CreatePathwayAssay(spotted, analyte_type = \"metabolites\", assay = \"Spatial\", new_assay = \"SPM_pathway\", verbose = T)  ## Step 2: Format Pathway Assay DefaultAssay(spotted) <- \"SPM_pathway\" spotted <- NormalizeData(spotted) spotted <- ScaleData(spotted)  ## Step 3: Run CalculateAnnotationStatistics output <- CalculateAnnotationStatistics(data = spotted, mz.assay = \"Spatial\",pathway.assay=\"SPM_pathway\", mz.slot = \"counts\", return.top = FALSE) output[c(1162,1053,501,626,126,117,251,113,248,637,638,835,836),]"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/articles/Annotation_Refinement.html","id":"lipid-nomenchlature-refinement","dir":"Articles","previous_headings":"Refinning m/z Metabolite Annotations with SpaMTP","what":"2) Lipid Nomenchlature Refinement","title":"SpaMTP: Refinning Metabolite Annotations","text":"described previously Spatial Metabolomics Analysis tutorial, many different kinds lipids can share molecular weight, may results m/z values possessing many possible annotations. SpaMTP function RefineLipids can used simplify lipid nomenclature common lipid categories classes, giving simplified annotations level SM datasets capable identifying. can count number metabolites assigned m/z refining lipid annotations. maximum reduction annotations 161 1. quite significant simplification can help processing large datasets. Lets visualise difference m/z value :  can see larger m/z values, correspond mostly lipids, display biggest differences following annotation refinement.","code":"### Runs lipid nomenclature simplification on annotations refined_lipid_annotations <- RefineLipids(spotted@assays$Spatial@meta.data, annotation.column = \"all_IsomerNames\", lipid_info = \"simple\") ## Count original number of annotations per m/z  refined_lipid_annotations <- refined_lipid_annotations %>%   mutate(base_count = sapply(strsplit(all_IsomerNames, \";\\\\s*\"), length))  ## Count number of annotations per m/z following lipid simplification refined_lipid_annotations <- refined_lipid_annotations %>%   mutate(     refined_count = ifelse(       is.na(Lipid.Maps.Category),       base_count,       sapply(strsplit(Lipid.Maps.Category, \";\\\\s*\"), length)     )   ) # reshape to long format df_long <- refined_lipid_annotations %>%   select(raw_mz, refined_count, base_count) %>%   pivot_longer(cols = c(refined_count, base_count),                names_to = \"Type\", values_to = \"Count\")  # plot ggplot(df_long, aes(x = raw_mz, y = Count, color = Type)) +   geom_point(size = 2, alpha = 0.7) +   geom_smooth(method = \"lm\", se = FALSE, size = 1.2) +   scale_color_manual(values = c(\"refined_count\" = \"red\",                                 \"base_count\" = \"blue\"),                      labels = c(\"Base annotations\", \"Refined annotations\")) +   labs(     x = expression(italic(\"m/z\")),     y = \"Number of annotations\",     color = \"\"   ) +   theme_minimal(base_size = 14) +   theme(     legend.position = \"top\",     panel.grid.minor = element_blank(),     axis.title = element_text(face = \"bold\")   )"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/articles/Annotation_Refinement.html","id":"pseudo-msms-based-refinement","dir":"Articles","previous_headings":"Refinning m/z Metabolite Annotations with SpaMTP","what":"3) Pseudo MS/MS-Based Refinement","title":"SpaMTP: Refinning Metabolite Annotations","text":"come!","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/articles/Annotation_Refinement.html","id":"refinement-with-paired-targeted-metabolic-data","dir":"Articles","previous_headings":"Refinning m/z Metabolite Annotations with SpaMTP","what":"4) Refinement with Paired Targeted Metabolic Data","title":"SpaMTP: Refinning Metabolite Annotations","text":"come!","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/articles/Big_Data.html","id":"handling-large-sm-datasets","dir":"Articles","previous_headings":"","what":"Handling Large SM Datasets","title":"SpaMTP: Handling Big Datasets","text":"SpaMTP suitable datasets sizes. However, extra large datasets may need special handling speed analysis process. demonstrate helpful functions processing large datasets use public mouse liver dataset spotted chemicals standards published . Author: Andrew Causer","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/articles/Big_Data.html","id":"import-r-libraries-and-load-data","dir":"Articles","previous_headings":"Handling Large SM Datasets","what":"Import R Libraries and Load Data","title":"SpaMTP: Handling Big Datasets","text":"First need import required libraries analysis. Next load data, can download load directly SpaMTP zenodo page. can see dataset 767,529 features 168,750 pixels. quite large dataset require alot memory process. However, likely don’t need analyse features pixels generate meaningful biological conclusion.","code":"## Install SpaMTP if not previously installed if (!require(\"SpaMTP\"))     devtools::install_github(\"GenomicsMachineLearning/SpaMTP\")  #General Libraries library(SpaMTP) library(Cardinal) library(Seurat) library(dplyr)  #For plotting + DE plots library(ggplot2) library(EnhancedVolcano) library(viridis) spotted_large <- Cardinal::readImzML(\"./Spotted/2020-12-05_ME_X190_L1_Spotted_20umss_375x450_33at_DAN_Neg\",resolution = 3, mass.range = c(100,1000), memory = T) spotted_large MSImagingExperiment with 767528 features and 168750 spectra  spectraData(1): intensity featureData(1): mz pixelData(3): x, y, run coord(2): x = 1...375, y = 1...450 runNames(1): 2020-12-05_ME_X190_L1_Spotted_20umss_375x450_33at_DAN_Neg experimentData(8): spectrumType, instrumentModel, ionSource, ..., scanPattern, scanType, lineScanDirection mass range: 100.0000 to 999.9959  centroided: NA"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/articles/Big_Data.html","id":"annotating-large-datasets","dir":"Articles","previous_headings":"Handling Large SM Datasets","what":"Annotating Large Datasets","title":"SpaMTP: Handling Big Datasets","text":"Using function AnnotateBigData can find m/z values successfully annotated perform remainder downstream analyses using . can now see successfully annotated 67,060 different m/z values reduce dataset size ~11.5x. Lets look annoated results: can use m/z values subset results generate SpaMTP Seurat object.","code":"## Get all the m/z values from our cardinal object mzs <- data.frame(Cardinal::featureData(spotted_large))$mz  ## Annotate each m/z value results <- AnnotateBigData(mzs, db = HMDB_db, ppm_error = 3, adducts = c(\"M-H\", \"M+Cl\"), polarity = \"negative\") dim(results)[1] [1] 67060 head(results, n = 5) ## Subset cardinal object spotted_small <- Cardinal::subset(spotted_large, mz %in% results$observed_mz)  ## Convert Cardinal object to SpaMTP object spotted_small <- CardinalToSeurat(spotted_small)"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/articles/Big_Data.html","id":"region-of-interest-selection","dir":"Articles","previous_headings":"Handling Large SM Datasets","what":"Region of Interest Selection","title":"SpaMTP: Handling Big Datasets","text":"Now filtered SpaMTP data object lets plot .  can see alot pixels outside tissue section clearly noise high intensity values. remove using filtering methods, purpose demonstrating built-ROI selection tool, can also use SpaMTP manually select region wish analyses. Lets run see example use :  example selection might look like:  Looking last 3 columns can see saved ROI selection area. Lets plot visually:  Now can simply subset dataset:","code":"ImageFeaturePlot(spotted_small, features = \"nCount_Spatial\", dark.background = F)& scale_fill_gradientn(colors = viridis::viridis(100), limits = c(0, 400000), na.value = viridis::viridis(100)[100]) spotted_small <- SelectROIs(spotted_small) head(spotted_small) %>% select(tail(names(.), 3)) ImageDimPlot(spotted_small, group.by = \"ROI_1\", dark.background = F) spotted_small <- subset(spotted_small, subset = ROI_1 == \"1\")  ImageFeaturePlot(spotted_small, features = \"nCount_Spatial\", dark.background = F)& scale_fill_gradientn(colors = viridis::viridis(100), limits = c(0, 400000), na.value = viridis::viridis(100)[100])"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/articles/Big_Data.html","id":"session-info","dir":"Articles","previous_headings":"Handling Large SM Datasets","what":"Session Info","title":"SpaMTP: Handling Big Datasets","text":"","code":"sessionInfo() ## R version 4.4.1 (2024-06-14) ## Platform: aarch64-apple-darwin20 ## Running under: macOS 15.5 ##  ## Matrix products: default ## BLAS:   /Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/lib/libRblas.0.dylib  ## LAPACK: /Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/lib/libRlapack.dylib;  LAPACK version 3.12.0 ##  ## locale: ## [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8 ##  ## time zone: Europe/Dublin ## tzcode source: internal ##  ## attached base packages: ## [1] stats4    stats     graphics  grDevices utils     datasets  methods   ## [8] base      ##  ## other attached packages: ##  [1] kableExtra_1.4.0       knitr_1.50             viridis_0.6.5          ##  [4] viridisLite_0.4.2      EnhancedVolcano_1.24.0 ggrepel_0.9.6          ##  [7] ggplot2_4.0.0          dplyr_1.1.4            Seurat_5.3.0           ## [10] SeuratObject_5.2.0     sp_2.2-0               Cardinal_3.8.3         ## [13] S4Vectors_0.44.0       ProtGenerics_1.38.0    BiocGenerics_0.52.0    ## [16] BiocParallel_1.40.2    SpaMTP_1.1.0           ##  ## loaded via a namespace (and not attached): ##   [1] RColorBrewer_1.1-3     rstudioapi_0.17.1      jsonlite_2.0.0         ##   [4] magrittr_2.0.4         spatstat.utils_3.2-0   farver_2.1.2           ##   [7] rmarkdown_2.29         fs_1.6.6               ragg_1.5.0             ##  [10] vctrs_0.6.5            ROCR_1.0-11            spatstat.explore_3.5-3 ##  [13] RCurl_1.98-1.17        htmltools_0.5.8.1      sass_0.4.10            ##  [16] sctransform_0.4.2      parallelly_1.45.1      KernSmooth_2.23-26     ##  [19] bslib_0.9.0            htmlwidgets_1.6.4      desc_1.4.3             ##  [22] ica_1.0-3              plyr_1.8.9             plotly_4.11.0          ##  [25] zoo_1.8-14             cachem_1.1.0           igraph_2.1.4           ##  [28] mime_0.13              lifecycle_1.0.4        pkgconfig_2.0.3        ##  [31] Matrix_1.7-4           R6_2.6.1               fastmap_1.2.0          ##  [34] fitdistrplus_1.2-4     future_1.67.0          shiny_1.11.1           ##  [37] digest_0.6.37          patchwork_1.3.2        tensor_1.5.1           ##  [40] RSpectra_0.16-2        irlba_2.3.5.1          textshaping_1.0.3      ##  [43] labeling_0.4.3         progressr_0.16.0       spatstat.sparse_3.1-0  ##  [46] httr_1.4.7             polyclip_1.10-7        abind_1.4-8            ##  [49] compiler_4.4.1         proxy_0.4-27           withr_3.0.2            ##  [52] S7_0.2.0               tiff_0.1-12            DBI_1.2.3              ##  [55] fastDummies_1.7.5      MASS_7.3-65            classInt_0.4-11        ##  [58] units_0.8-7            tools_4.4.1            lmtest_0.9-40          ##  [61] httpuv_1.6.16          future.apply_1.20.0    goftest_1.2-3          ##  [64] glue_1.8.0             nlme_3.1-168           EBImage_4.48.0         ##  [67] promises_1.3.3         sf_1.0-21              grid_4.4.1             ##  [70] Rtsne_0.17             cluster_2.1.8.1        reshape2_1.4.4         ##  [73] generics_0.1.4         gtable_0.3.6           spatstat.data_3.1-8    ##  [76] class_7.3-23           tidyr_1.3.1            data.table_1.17.8      ##  [79] xml2_1.4.0             spatstat.geom_3.6-0    RcppAnnoy_0.0.22       ##  [82] RANN_2.6.2             pillar_1.11.1          stringr_1.5.2          ##  [85] spam_2.11-1            RcppHNSW_0.6.0         limma_3.62.2           ##  [88] later_1.4.4            splines_4.4.1          lattice_0.22-7         ##  [91] survival_3.8-3         deldir_2.0-4           tidyselect_1.2.1       ##  [94] CardinalIO_1.4.0       locfit_1.5-9.12        miniUI_0.1.2           ##  [97] pbapply_1.7-4          gridExtra_2.3          matter_2.8.0           ## [100] svglite_2.2.1          scattermore_1.2        xfun_0.53              ## [103] Biobase_2.66.0         statmod_1.5.0          matrixStats_1.5.0      ## [106] fftwtools_0.9-11       stringi_1.8.7          lazyeval_0.2.2         ## [109] yaml_2.3.10            evaluate_1.0.5         codetools_0.2-20       ## [112] tibble_3.3.0           cli_3.6.5              ontologyIndex_2.12     ## [115] uwot_0.2.3             xtable_1.8-4           reticulate_1.43.0      ## [118] systemfonts_1.2.3      jquerylib_0.1.4        Rcpp_1.1.0             ## [121] globals_0.18.0         spatstat.random_3.4-2  zeallot_0.2.0          ## [124] png_0.1-8              spatstat.univar_3.1-4  parallel_4.4.1         ## [127] pkgdown_2.1.3          dotCall64_1.2          jpeg_0.1-11            ## [130] bitops_1.0-9           listenv_0.9.1          e1071_1.7-16           ## [133] scales_1.4.0           ggridges_0.5.7         purrr_1.1.0            ## [136] rlang_1.1.6            cowplot_1.2.0          shinyjs_2.1.0"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/articles/Mouse_Urinary_Bladder.html","id":"analsysing-spatial-metabolomic-data-with-spamtp","dir":"Articles","previous_headings":"","what":"Analsysing Spatial Metabolomic Data with SpaMTP","title":"SpaMTP: Spatial Metabolomics Analysis","text":"tutorial highlights utility SpaMTP analysing pixel level single-cell resolution spatial metabolomics (SM) data. Note: tutorial updated compatibility Cardinal V3.8. Using SpaMTP highlight: Loading Spatial Metabolomic (SM) Data Using Cardinal tools - Tissue Segmentation using SSC Automated Metabolite Annotation m/z Masses Simplifying Lipid Nomenclature Lipid Categories Classes Differential Expression Analysis Annotated Metabolites Metabolite Expression Visualisation Pathway Analysis Re-Clustering using PCA Seurat Finding Spatially Correlated Metabolites Author: Andrew Causer","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/articles/Mouse_Urinary_Bladder.html","id":"install-and-import-r-libraries","dir":"Articles","previous_headings":"Analsysing Spatial Metabolomic Data with SpaMTP","what":"Install and Import R Libraries","title":"SpaMTP: Spatial Metabolomics Analysis","text":"First need import required libraries analysis.","code":"## Install SpaMTP if not previously installed if (!require(\"SpaMTP\"))     devtools::install_github(\"GenomicsMachineLearning/SpaMTP\")  #General Libraries library(SpaMTP) library(Cardinal) library(Seurat) library(dplyr)  #For plotting + DE plots library(ggplot2) library(EnhancedVolcano) library(viridis)"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/articles/Mouse_Urinary_Bladder.html","id":"load-sm-data-using-spamtp","dir":"Articles","previous_headings":"Analsysing Spatial Metabolomic Data with SpaMTP","what":"Load SM Data using SpaMTP","title":"SpaMTP: Spatial Metabolomics Analysis","text":"three main ways load data SpaMTP. demonstrate use three different public datasets can download load directly SpaMTP zenodo page.","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/articles/Mouse_Urinary_Bladder.html","id":"converting-from-a-cardinal-object","dir":"Articles","previous_headings":"Analsysing Spatial Metabolomic Data with SpaMTP > Load SM Data using SpaMTP","what":"1. Converting From a Cardinal Object","title":"SpaMTP: Spatial Metabolomics Analysis","text":"first method convert already loaded Cardinal object directly SpaMTP object. allow users analyse pre-existing cardinal dataset using SpaMTP, also use pre-processing tools implemented packages. demonstrate load, process convert ‘PIGII_206’ pig fetus dataset. unprocessed cardinal object containing 4,959 spectra 10,200 m/z values ranging 150 1000 m/z. object can processed following Cardinal’s vignette. Following processing steps cleaned dataset contains 687 peaks. Using Cardinal can visualise one peaks (m/z 537) abundant pig liver.  addition pre-processing methods, can also run additional analyses Cardinal’s tissue segmentation spatial shrunken centroids (ssc). Following Cardinal’s vignette, use values : Spatial neighborhood radius = 2 Maximum number segments/clusters = 8 Sparsity thresholding parameter = 2,4,8,16,32,64  can see areas liver, heart, brain distinguished segments 4, 1, 5 respectively, presented original Cardinal vignette. Although majority functions within SpaMTP package used wrappers analysing modifying Seurat objects, functions designed assist SM analysis Cardinal. function one, allows add SCC results back spectral Cardinal Object, stored pixelData slot. finished analysis using Cardinal can use SpaMTP function CardinalToSeurat generate SpaMTP object processed data. can see like Cardinal object, converted SpaMTP object also contains 687 peaks 4,959 pixels. Furthermore, ssc results stored SpaMTP object metadata. Lets also generate plots compare:  can see feature ssc segment plots match SpaMTP Cardinal objects.","code":"# Load directly from file #pig206 <- readRDS(\"./Documents/pig206.RDS\")  # Load directly from URL pig206_url <- \"https://zenodo.org/records/17246555/files/pig206.RDS?download=1\" pig206 <- readRDS(file = url(pig206_url)) pig206 ## MSImagingExperiment with 10200 features and 4959 spectra  ## spectraData(1): intensity ## featureData(1): mz ## pixelData(3): x, y, run ## coord(2): x = 10...120, y = 1...66 ## runNames(1): PIGII_206 ## mass range:  150.0833 to 1000.0000  ## centroided: FALSE pig206 <- summarizeFeatures(pig206, c(Mean=\"mean\"))  pig206_peaks <- pig206 |>     normalize(method=\"tic\") |>     peakProcess(SNR=3, sampleSize=0.1,         tolerance=0.5, units=\"mz\") pig206_peaks ## MSImagingExperiment with 687 features and 4959 spectra  ## spectraData(1): intensity ## featureData(3): mz, count, freq ## pixelData(3): x, y, run ## coord(2): x = 10...120, y = 1...66 ## runNames(1): PIGII_206 ## metadata(1): processing_20251031013249 ## mass range: 150.2917 to 999.8333  ## centroided: TRUE image(pig206_peaks, mz=537.08) set.seed(1) pig206_ssc <- spatialShrunkenCentroids(pig206_peaks,     weights=\"adaptive\", r=2, k=8, s=2^(1:6)) col_palette = list(\"1\" = \"#5aa14f\",                    \"2\" = \"#4f79a6\",                    \"3\" = \"#e2585a\",                    \"4\" = \"#76b8b3\",                     \"5\" = \"#ebc948\",                     \"6\" = \"#f18e29\")  image(pig206_ssc, i=5,type=\"class\",col= unlist(unname(col_palette))) pig206_peaks <- add_ssc_annotation(pig206_peaks, pig206_ssc, resolution = \"r=2,k=8,s=32\") pig206_peaks ## MSImagingExperiment with 687 features and 4959 spectra  ## spectraData(1): intensity ## featureData(3): mz, count, freq ## pixelData(4): x, y, run, ssc ## coord(2): x = 10...120, y = 1...66 ## runNames(1): PIGII_206 ## metadata(1): processing_20251031013249 ## mass range: 150.2917 to 999.8333  ## centroided: TRUE pig206_spamtp <- CardinalToSeurat(pig206_peaks) pig206_spamtp ## An object of class Seurat  ## 687 features across 4959 samples within 1 assay  ## Active assay: Spatial (687 features, 0 variable features) ##  1 layer present: counts ##  1 spatial field of view present: fov head(pig206_spamtp@meta.data, n = 5) image(pig206_peaks, mz=537.08) title(\"Cardinal\", outer = TRUE) ImageMZPlot(pig206_spamtp, mzs = 537.106, size = 2.2, dark.background = F) + scale_x_reverse()+coord_flip()+scale_fill_gradientn(colours = viridis(10))+ ggtitle(\"SpaMTP\") image(pig206_ssc, i=5,type=\"class\",col= unlist(unname(col_palette))) title(\"Cardinal\", outer = TRUE) ImageDimPlot(pig206_spamtp, group.by = \"ssc\", size = 2.2, dark.background = F, cols = col_palette) + scale_x_reverse()+coord_flip() + ggtitle(\"SpaMTP\")"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/articles/Mouse_Urinary_Bladder.html","id":"load-data-directly","dir":"Articles","previous_headings":"Analsysing Spatial Metabolomic Data with SpaMTP > Load SM Data using SpaMTP","what":"2. Load Data Directly","title":"SpaMTP: Spatial Metabolomics Analysis","text":"SpaMTP also provides function loading data directly .ibd .imzML files. LoadSM SpaMTP function wrapper Cardinal’s readImzML() function. information function works, relative inputs accepts please head Cardinal’s documentation page. function also capabilities splitting data containing multiple runs, individual SpaMTP data FOV’s. use Human Renal Cell Carcinoma (RCC) public dataset demonstrate . corresponding .imzML files can downloaded directly SpaMTP zenodo page. dataset contains 10,200 m/z-values across 8 different runs split individual FOV’s. run contains cancer normal sample loaded metadata. Lets visualise run one plot:","code":"rcc_spamtp <- LoadSM(file = \"./rcc-files/rcc\", mass.range = c(150, 1000), multi.run = T) rcc_spamtp ## An object of class Seurat  ## 10200 features across 16000 samples within 1 assay  ## Active assay: Spatial (10200 features, 0 variable features) ##  1 layer present: counts ##  8 spatial fields of view present: fov.1 fov.2 fov.3 fov.4 fov.5 fov.6 fov.7 fov.8 ImageDimPlot(rcc_spamtp, group.by = \"diagnosis\", dark.background = F, fov = names(rcc_spamtp@images), size = 2,               cols = c(\"red\", \"blue\"),na.value= \"white\")"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/articles/Mouse_Urinary_Bladder.html","id":"load-intensity-matrix-files","dir":"Articles","previous_headings":"Analsysing Spatial Metabolomic Data with SpaMTP > Load SM Data using SpaMTP","what":"3. Load Intensity Matrix files","title":"SpaMTP: Spatial Metabolomics Analysis","text":"final method loading SM data SpaMTP object intensity matrix stored .csv file. different .ibd .imzML files used , layout dataset demonstrated : demonstrate use public mouse bladder SM data first published Römpp et al.(2010), used Cardinal V3 article. NOTE: data used processed data Cardinal’s V3 Vignette (2023). raw data , “Histology Mass Spectrometry: Label-Free Tissue Characterization Obtained High-Accuracy Bioanalytical Imaging”, can downloaded Project PXD001283. dataset used remainder tutorial. SpaMTP built Seurat Object, can use useful pre-established Seurat ggplot2 functions plot spatial distribution total number features (m/z’s) present per pixel.  addition can also add metadata tissue segmentation results ssc. segments generated following parameters specified Cardinal’s V3 Vignette (2023), ‘r= 2, k=10, s=24’ using ‘gausian’ weights. Lets visualise ssc segmentations added:  can see segmentation plot matches Cardinal’s previously published results. Published original paper Römpp et al.(2010) visualise three m/z values define organ structures within urinary bladder.  Based plots , clusters associated regions outside tissue. clear cluster 3 4 outside tissue can therefore removed. However, ensure dataset clean technical noise begin downstream analyses can perform data processing QC.","code":"# Load directly from file #bladder <- ReadSM_mtx(\"./Documents/bladder_csv.csv\", mz.prefix = \"mz-\", feature.start.column = 2)  # Load directly from URL bladder_url <- \"https://zenodo.org/records/17246684/files/bladder_csv.csv?download=1\" bladder <- ReadSM_mtx(mtx.file = bladder_url, mz.prefix = \"mz-\", feature.start.column = 2) bladder ## An object of class Seurat  ## 305 features across 34840 samples within 1 assay  ## Active assay: Spatial (305 features, 0 variable features) ##  1 layer present: counts ##  1 spatial field of view present: fov ImageFeaturePlot(bladder, features = \"nFeature_Spatial\", size = 1) + coord_flip() + scale_x_reverse() metadata_url <- \"https://zenodo.org/records/17246684/files/bladder_metadata.csv?download=1\" bladder_metadata <- read.csv(url(metadata_url), row.names = 1) head(bladder_metadata, n = 5) bladder@meta.data[colnames(bladder_metadata)]<- bladder_metadata  bladder$ssc <- factor(bladder$ssc) # Required format for some Seurat functions col_palette = list(\"1\" = \"#9FBEAC\",                     \"2\" = \"#C2B03B\",                    \"3\" = \"#F99D1D\",                    \"4\" = \"#008E87\",                     \"5\" = \"#0074B0\",                      \"6\" = \"#DE4D6C\",                     \"7\" = \"#F99D1D\",                    \"8\" = \"#DE4D6C\",                    \"9\" = \"#BF212E\")  ImageDimPlot(bladder, group.by = \"ssc\", cols = col_palette, dark.background = F, size = 2)+ coord_flip() + scale_x_reverse() ## Coordinate system already present. ## ℹ Adding new coordinate system, which will replace the existing one. ImageMZPlot(bladder, mzs = c(770.5104, 770.56, 741.5307), size = 1.5) & coord_flip() & scale_x_reverse() ROI <- subset(bladder, subset = ssc %in% c(\"3\", \"4\"), invert = T)"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/articles/Mouse_Urinary_Bladder.html","id":"sample-pre-processing-and-quality-control","dir":"Articles","previous_headings":"Analsysing Spatial Metabolomic Data with SpaMTP > Load SM Data using SpaMTP","what":"Sample Pre-Processing and Quality Control","title":"SpaMTP: Spatial Metabolomics Analysis","text":"Pre-processing quality control (QC) import steps pipeline performed prior downstream analysis. spatial metabolic data, various packages robust functions applications removing technical noise SM dataset, include Cardinal SCILS-LAB previously described. SpaMTP also provides general pre-processing functions data normalisation, scaling filtering.  Although data may normalised filtered, still may contains pixels outside tissue region (cluster 1). ensure remove technical noise can visualise QC metrics using SpaMTP. First look total number features total intensity per pixel segments:  Based can see cluster 1 follows different distribution compared clusters also likely outside tissue regions. Lets also remove cluster. Another metric assess relative intensity values m/z across sample. likely sign technical noise cases m/z values present excessively large intensities comparison rest dataset. can visualise comparing raw data normalised filtered dataset.  plots display intensity m/z summed across pixels per group. Based , majority m/z values processed data display intensities within similar distribution, across cluster, suggesting outlying m/z values. unprocessed raw data can seen contain m/z values excessively large intensities removed processing. Using function can also look distribution specific features across groups providing feature name. Lets try visualise total intensity “mz-740.471557617188” across cluster using box.plot function:  Based can see “mz = 740.471557617188” expressed clusters highest cluster 6. Similar can interchangeably convert data SpaMTP Cardinal objects, meaning pre-processing analysis tools either package can used point analysis pipeline. demonstrate use ConvertSeuratToCardinal function later tutorial. demonstrated data good quality can continue analysis.","code":"VlnPlot(ROI, features = c(\"nCount_Spatial\", \"nFeature_Spatial\"),group.by = \"ssc\",cols = col_palette)+ theme_minimal() ROI <- subset(ROI, subset = ssc == 1, invert = T) raw_bladder <- readRDS(url(\"https://zenodo.org/records/17246684/files/raw_bladder.RDS?download=1\"))   MZRidgePlot(seurat.obj = raw_bladder, group.by = \"ssc\", bins = 50, log.data = TRUE, cols = col_palette, verbose = F)+ theme_minimal() +theme(panel.grid = element_blank()) | MZRidgePlot(seurat.obj = ROI, group.by = \"ssc\", bins = 50, log.data = TRUE, cols = col_palette, verbose = F)+ theme_minimal() +theme(panel.grid = element_blank()) MZBoxPlot(seurat.obj = ROI,group.by = \"ssc\", mzs = \"mz-740.471557617188\", log.data = TRUE, show.points = F, top.cutoff = 0.05,bottom.cutoff = 0.05,cols = col_palette)"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/articles/Mouse_Urinary_Bladder.html","id":"metabolite-annotation-of-mz-masses","dir":"Articles","previous_headings":"Analsysing Spatial Metabolomic Data with SpaMTP","what":"Metabolite Annotation of m/z Masses","title":"SpaMTP: Spatial Metabolomics Analysis","text":"One major steps analysis metabolomics identification/annotation m/z masses relative common metabolite name. various public websites can used run , however, often complicated take R object annotate directly. SpaMTP user-friendly function assigns possible annotations m/z value based variables: db: Database query m/z masses -> options = “HMDB”, “LipidMaps”, “GNPS” “ChEBI” polarity: Polarity mode experiment run -> either “positive” “negative” adducts: Specify different adduct ions likely formed lost mass spectrometry imaging. Following annotation LIPID_MAPS database, 79 m/z masses successfully annotated! annotations stored feature meta.data slot within SpaMTP Object, lets take look: can see m/z value, along possible annotations, also observe information including database ID, adduct used annotate metabolite, common chemical formula, plus-minus ppm error observed mass reference mass annotated molecules reference dataset. addition storing m/z annotations feature meta.data slot, save.intermediates = TRUE set within AnnotateSM() function, intermediate data.frame stored @tools slot SpaMTP object. data.frame less compressed version annotation data.frame stored feature meta.data slot, used later pathway analysis. information visit hidden window :  Based results, can now perform serious analyses identify metabolites associated certain biological features/processes.","code":"bladder_annotated <- AnnotateSM(bladder, db = Lipidmaps_db, ppm_error = 15, adducts = \"M+K\", polarity = \"positive\") Filtering 'Lipidmaps_db' database by M+K adduct/s  Searching database against input m/z's to return annotaiton results  Adding annotations to Seurat Object ....   Returning Seurat object that include ONLY SUCCESSFULLY ANNOTATED m/z features bladder_annotated ## An object of class Seurat  ## 79 features across 34840 samples within 1 assay  ## Active assay: Spatial (79 features, 0 variable features) ##  1 layer present: counts ##  1 spatial field of view present: fov head(bladder_annotated[[\"Spatial\"]]@meta.data, n = 3) str(bladder_annotated@tools) #The stored dataframe is called db_3 ## List of 1 ##  $ db_3:'data.frame':    98 obs. of  12 variables: ##   ..$ ID          : int [1:98] 16 17 37 39 40 41 55 61 61 68 ... ##   ..$ Match       : logi [1:98] TRUE TRUE TRUE TRUE TRUE TRUE ... ##   ..$ observed_mz : num [1:98] 427 431 465 467 468 ... ##   ..$ Reference_mz: num [1:98] 427 431 465 467 468 ... ##   ..$ Error       : num [1:98] 3.86 1.41 8.73 1.16 13.2 ... ##   ..$ Adduct      : chr [1:98] \"M+K\" \"M+K\" \"M+K\" \"M+K\" ... ##   ..$ Formula     : chr [1:98] \"C15H18O2Br2\" \"C18H16O10\" \"C20H20O6Cl2\" \"C24H25O5Cl\" ... ##   ..$ Exactmass   : num [1:98] 388 392 426 428 429 ... ##   ..$ Isomers     : chr [1:98] \"LMPK02000053; LMPK02000054; LMPK02000055\" \"LMPK12113357\" \"LMPK13090053\" \"LMPK13080006\" ... ##   ..$ InchiKeys   : chr [1:98] \"ZAKKSVIAKVSQCR-SXATZZDESA-N; ZAKKSVIAKVSQCR-LKQQYTGOSA-N; ZAKKSVIAKVSQCR-UNHDMXBBSA-N\" \"STOZTZBHYTVXHP-UHFFFAOYSA-N\" \"JYBXDWXPXSTXCT-SOFGYWHQSA-N\" \"RQNMKGDKKQRCKL-HZOWPXDZSA-N\" ... ##   ..$ IsomerNames : chr [1:98] \"Laurenenyne A; Laurenenyne B; Katsuurenyne A\" \"5,7,3',4',5'-Pentahydroxy-3,6,8-trimethoxyflavone\" \"Aspergillusether D\" \"Emeguisin B\" ... ##   ..$ Isomers_IDs : chr [1:98] \"LIPIDMAPS:LMPK02000053; LIPIDMAPS:LMPK02000054; LIPIDMAPS:LMPK02000055\" \"LIPIDMAPS:LMPK12113357\" \"LIPIDMAPS:LMPK13090053\" \"LIPIDMAPS:LMPK13080006\" ..."},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/articles/Mouse_Urinary_Bladder.html","id":"simplifying-lipid-nomenclature-into-lipid-catagories-and-classes","dir":"Articles","previous_headings":"Analsysing Spatial Metabolomic Data with SpaMTP","what":"Simplifying Lipid Nomenclature into Lipid Catagories and Classes","title":"SpaMTP: Spatial Metabolomics Analysis","text":"lipids made many carbon molecules long chain many different kinds lipids share molecular weight. results annotations mass long, due numerous possible lipids matching m/z value. Lets use SpaMTP function simplify lipid nomenclature common lipid categories classes! gives simplified annotations level SM datasets capable identifying.  can see metabolites lipids, names returned NA, however annotated lipids simplified human readable format. key m/z masses observed annotated original publication listed table : Lets see m/z’s annotated using SpaMTP: plotting use subset ROI object.  can see annotations match published previously. Due limitations MSI based technologies, can exactly identify chemical structure molecule, meaning m/z values multiple lipid names/annotations.","code":"bladder_annotated@assays$Spatial@meta.data <- RefineLipids(bladder_annotated@assays$Spatial@meta.data, annotation.column = \"all_IsomerNames\", lipid_info = \"simple\")  refined_annotations <- bladder_annotated@assays$Spatial@meta.data # get the refined annotations from our feature meta.data slot cat(\"non-lipid metabolites ... \") head(refined_annotations, 1)   cat(\"refined lipid names ... \") refined_annotations[11,] key_mzs <- c(741.5307, 798.5410, 812.5566) key_mz_names <- c()  for (mz in key_mzs){     key_mz_names <- c(key_mz_names, FindNearestMZ(bladder_annotated, mz)) #Find the nearest m/z in our dataset to the mass provided }  matches <- refined_annotations[refined_annotations$mz_names %in% key_mz_names,][c(\"raw_mz\",\"Species.Name.Simple\")]  matches ROI <- subset(bladder_annotated, subset = ssc %in% c(\"2\", \"5\", \"6\")) ImageMZAnnotationPlot(ROI, metabolites = c(\"SM(34:1)\", \"PC(34:1)\"), size = 1, column.name = \"Species.Name.Simple\", plot.exact = F, dark.background = F, plot.pixel = T) & coord_flip() & scale_x_reverse()  & scale_colour_gradientn(colors = viridis(100))"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/articles/Mouse_Urinary_Bladder.html","id":"differential-expression-analysis-of-annotated-metabolites","dir":"Articles","previous_headings":"Analsysing Spatial Metabolomic Data with SpaMTP","what":"Differential Expression Analysis of Annotated Metabolites","title":"SpaMTP: Spatial Metabolomics Analysis","text":"One key step understanding biological processes determining genes, proteins metabolites demonstrate significantly different expression given populations cell types. Based analysis , urinary bladder identified 3 main tissue regions : regions identified also following references: 1, 2 Lets use SpaMTP’s FindAllDEMs() function identify differentially expressed m/z metabolites (DEMs) three tissue regions. function uses similar methods established genetic data, whereby pixels pseudo-bulked random pools assessed differential expression (limma. Lets observe top 10 DE metabolites cluster heatmap:  can also observe spatial expression patterns top DE metabolites.  can see expression metabolites matches spatial location three tissue regions quite well. Noted heatmap , many lipids identified DE. particular, two lipids interest identified original publication key metabolites differentiate muscle (cluster 5) urothelium (cluster 6). SM(34:1) PC(34:1) respectively. code performs differential expression analysis just muscle (cluster 5) urothelium (cluster 6) pixels, determine differential expression lipids can detected.  volcano plot , can see analysis correctly identified SM(34:1) -regulated cluster 5, PC(34:1) -regulated cluster 6. Lipids key metabolite expressed within urinary bladder. Lets take deeper look differentially expressed lipids groups respect main category class:  results displayed bar graph demonstrate number different types lipid categories differentially expressed cluster. Lipid categories simple/broad annotation lipid. example, GL stands glycerolipids, can represent lipids classes diglycerols triglycerols. Likewise, SP stands sphingolipids, include lipids classes sphingomyelins glycosphingolipids. information different lipid categories classes, please visit following links (1,2). Lets now look different lipid classes differentially expressed cluster.","code":"# Performs pooling, pseudo-bulking and edgeR Differential Expression Analysis cluster_DEMs <- FindAllDEMs(data = ROI, ident = \"ssc\", n = 3, logFC_threshold = 1,                              DE_output_dir =NULL, return.individual = FALSE,                              run_name = \"FindAllDEMs\", annotation.column = \"all_IsomerNames\" ) # DE results are returned in a data.frame Pooling one sample into 3 replicates...  Running limma DE Analysis for  FindAllDEMs  -> with samples [ 5, 2, 6 ]  Starting condition: 5  Starting condition: 2  Starting condition: 6 DEMsHeatmap(cluster_DEMs, only.pos = FALSE, order.by = \"logFC\",             plot_annotations_column = \"annotations\", nlabels.to.show = 1,              n = 10, save_to_path = NULL             ,plot.save.height = 10, plot.save.width = 15, annotation_colors = col_palette[c(\"2\",\"5\",\"6\")]) (ImageDimPlot(ROI, group.by = \"ssc\", split.by = \"ssc\", size = 2, cols = col_palette)/ ImageMZAnnotationPlot(ROI, metabolites = c(\"LacCer(d18:1/12:0)\",\"SM(d18:0/16:0)\",\"Bastimolide B\"), size = 2)) & coord_flip() & scale_x_reverse() ### Subsets the original dataset to only include cluster 5 and 6 ROI_x <- subset(ROI, subset = ssc %in% c(\"5\", \"6\"))  ### Performs differential expression analysis between the two groups cluster_DEMs_x <- FindAllDEMs(data = ROI_x, ident = \"ssc\", n = 5, logFC_threshold = 1,                             DE_output_dir =NULL, return.individual = FALSE,                              run_name = \"FindAllDEMs\", annotation.column = \"all_IsomerNames\" )  ### Runs lipid nomenclature simplification on the DEM results cluster_DEMs_x$DEMs <- RefineLipids(cluster_DEMs_x$DEMs, annotation.column = \"annotations\", lipid_info = \"simple\")  ### Subsets the DEM results to only get up regulated metabolites for cluster 5 and 6 urothelium <- cluster_DEMs_x$DEMs[cluster_DEMs_x$DEMs$cluster == \"6\",]  ### Sets up colouring for significant spots in volcano plot keyvals <- ifelse(     urothelium$logFC < 0  & urothelium$P.Value < 10e-4, 'royalblue',       ifelse(urothelium$logFC > 0 & urothelium$P.Value < 10e-4, 'red',         'black'))   keyvals[is.na(keyvals)] <- 'black'   names(keyvals)[keyvals == 'red'] <- 'Cluster 6'   names(keyvals)[keyvals == 'black'] <- 'Non-Sig'   names(keyvals)[keyvals == 'royalblue'] <- 'Cluster 5'  ### Changes the shape of the lipid annotations  of interest in volcano plot metabolites <- matches$Species.Name.Simple[1:2]  keyvals.shape <- ifelse(     urothelium$Species.Name.Simple == metabolites[1], 15,       ifelse(urothelium$Species.Name.Simple == metabolites[2], 17,         20))   keyvals.shape[is.na(keyvals.shape)] <- 20   names(keyvals.shape)[keyvals.shape == 20] <- 'Other'   names(keyvals.shape)[keyvals.shape == 15] <- metabolites[1]   names(keyvals.shape)[keyvals.shape == 17] <- metabolites[2]  ### Plots volcano plot with DEM results volc_plot <- EnhancedVolcano::EnhancedVolcano( urothelium,                                   selectLab = metabolites,                                    lab = urothelium$Species.Name.Simple,                                   #FCcutoff = 0,                                   colCustom = keyvals,                                   shapeCustom = keyvals.shape,                                   #cutoffLineType = 'blank',                                   pCutoff = 10e-4,                                   FCcutoff = NA,                                   pointSize = 6,                                   labSize = 5,                                   labCol = 'black',                                   labFace = 'bold',                                   colAlpha = 4/5,                                   x = 'logFC',                                   y = 'P.Value',                                    gridlines.major = FALSE,                                   gridlines.minor = FALSE) volc_plot ### Runs lipid nomenclature simplification on the DEM results generated between cluster 2, 5 and 6 cluster_DEMs$DEMs <- RefineLipids(cluster_DEMs$DEMs, annotation.column = \"annotations\", lipid_info = \"simple\") # lets look at the Differenitally expressed Lipids groups UP <- cluster_DEMs$DEMs[cluster_DEMs$DEMs$regulate == \"Up\",] # lets get the upregulated lipids for each cluster  # Compute counts of Lipid Maps Categories for 'Up' and 'Down' entries category_counts <- UP %>%   group_by(cluster, Lipid.Maps.Category) %>%   summarise(count = n()) %>%   ungroup()  category_counts <- category_counts %>%   mutate(Lipid.Maps.Category = ifelse(is.na(Lipid.Maps.Category), \"Non-Lipids\", Lipid.Maps.Category))   # Plot bar graph ggplot(category_counts, aes(x = Lipid.Maps.Category, y = count, fill = cluster)) +   geom_bar(stat = \"identity\", position = \"dodge\") +   labs(title = \"Relative Number of Up Regulated Lipids Grouped by Catagory\",        x = \"Lipid Maps Category\",        y = \"Count\") +   theme_classic() +   scale_fill_manual(values = col_palette) # Compute counts of Lipid Maps Categories for 'Up' and 'Down' entries category_counts <- UP %>%   group_by(cluster, Lipid.Maps.Main.Class) %>%   summarise(count = n()) %>%   ungroup()  category_counts <- category_counts %>%   mutate(Lipid.Maps.Category = ifelse(is.na(Lipid.Maps.Main.Class), \"Non-Lipids\", Lipid.Maps.Main.Class))   # Plot bar graph ggplot(category_counts, aes(x = Lipid.Maps.Main.Class, y = count, fill = cluster)) +   geom_bar(stat = \"identity\", position = \"dodge\") +   labs(title = \"Relative Number of Up Regulated Lipids Grouped by Classes\",        x = \"Lipid Maps Category\",        y = \"Count\") +   theme_classic() +   scale_fill_manual(values = col_palette)"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/articles/Mouse_Urinary_Bladder.html","id":"metabolite-expression-visualisation","dir":"Articles","previous_headings":"Analsysing Spatial Metabolomic Data with SpaMTP","what":"Metabolite Expression Visualisation","title":"SpaMTP: Spatial Metabolomics Analysis","text":"Based analysis performed , various ways can visualise data spatially. SpaMTP large range methods visualise data including binning common metabolites, 3D plots displaying metabolite/gene expression . , demonstrate key plotting methods. First, using DE lipid results , can plot combined expression glycerophospholipids (GP) expressed urothelium cells (cluster 6).  can see clearly combined expression GP lipids highly expressed urothelium cells. Next, can observe expression two key lipids (described ) 3D plot: Based analysis lipid ‘PC(30:2)’ enriched uroepithelum cluster (cluster 6). lipid mentioned original paper, may biologically relevant uroepithelum. check can generate key visualisations:  SpaMTP also includes useful density plot function generates HTML allows user simultaneously visualise m/z peak ’s relative metabolite annotation spatially. Users access mass intensity plot can select m/z peak, plotted possible metabolite annotations listed. Lets demonstrate , try visualising “mz-740.471557617188” matches plot ‘PC(30:2)’ :","code":"### Identified the m/z values that are GP lipids up expressed in cluster 6 mz <- na.omit(UP[c(UP$cluster == \"6\"& UP$Lipid.Maps.Category == \"GP\"),]$gene)  ### Adds the binned expression value of all of these lipids into a column in the SpaMTP object's @meta.data slot ROI <- BinMetabolites(ROI, mz, slot = \"counts\", bin_name = \"GPs\") head(ROI, n = 3) ImageFeaturePlot(ROI, features = c(\"GPs\"), size = 2, dark.background = F) & coord_flip() & scale_x_reverse() ### Identified the m/z values that are to be plot mzs <- unlist(lapply(c(798.5411, 741.5306), function(x) FindNearestMZ(data = ROI, target_mz = x)))  Plot3DFeature(ROI, features = mzs, assays = \"Spatial\", between.layer.height = 100, names = c(\"PC(34:1)\",\"SM(34:1)\"), plot.height = 400, plot.width = 700) ImageMZAnnotationPlot(bladder_annotated, metabolites = \"PC(30:2)\", column.name = \"Species.Name.Simple\", size = 2) & coord_flip() & scale_x_reverse() DensityMap(object = ROI, assay = \"Spatial\", slot = \"counts\", folder = \"vignette_data_files/Mouse_Urinary_Bladder/\")"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/articles/Mouse_Urinary_Bladder.html","id":"pathway-analysis","dir":"Articles","previous_headings":"Analsysing Spatial Metabolomic Data with SpaMTP","what":"Pathway Analysis","title":"SpaMTP: Spatial Metabolomics Analysis","text":"order understand biological processes complex diseases deeper level, often look biological pathways whole rather expression just individual metabolites/genes. SpaMTP pathway analysis uses reference dataset contains various biological pathways (.e. KEGG RAMP_DB) determine significant changes biological, cellular molecular processes. first pathway analysis method uses Fishers Exact Test identify significant differentially expressed pathways based presence specified features. Users can provide list metabolites metabolites genes, identified DE analysis. method identify significant pathways based relative proportion features matching list provided present within pathway. code performing FishersExactTest Pathway analysis metabolites significantly expressed urothelium (cluster 6): Lets now run FishersPathwayTest can also run FisherPathwayTest using just m/z values. Lets try see results differ. time use Chebi_db, Lipidmaps_db HMDB_db annotate m/z values, use possible positive adducts. (Note: mz values stored data.frame column called gene).  Now, lets visualise results.first plot results generated based provided metabolite ID’s.  can also plot results generated running Fishers Exact Test using m/z values. allow us plot expression pathway spatially!  second form pathway analysis identifies differentially expressed pathways per group/cluster based relative expression metabolites /genes. Using similar approach GSEA features ranked based log fold change groups, relative enrichment scores features used identify significant pathways differentially expressed group. code uses “ssc” clustering pseudo-bulking DE results identify significant pathways per cluster: Based , can see one significant differentially expressed pathway. annotated sample based M+K analytes, using LIPIDMAPS database. increase number possible pathways detected can broaden annotation range include M+H M+K analytes HMDB, LIPIDMAPS ChEBI databases re-run analysis. can see now many differentially expressed pathways! Lets plot results:  plot highlights cluster 5 (bladder muscle) enriched Biochemical pathways. Alternatively, urothelium (cluster 6) shown regulate numerous pathways including Sphingolipid metabolism. matches previous research suggesting metabolism sphingolipids mainly associated muscle cells badder. results may tell entire story however, ‘SSC’ clustering results capture every region tissue according original publication. specific area bladder urothelium called ‘lamina propria’ currently unidentifiable based ‘SSC’ clustering result (also mentioned original paper).","code":"## Subsets to include only UP-regulated m/z values in cluster 6 (relative to cluster 2 and 5) cluster_6 <- UP[UP$cluster == \"6\",]   ## Based on these mz values we can get their corresponding annotations which are in the database ID format (stored in `$all_Isomer_IDs`) metabolite_ids <- ROI[[\"Spatial\"]]@meta.data[ROI[[\"Spatial\"]]@meta.data$all_IsomerNames %in% cluster_6$annotations,]$all_Isomers_IDs  ## We can then unlist them to get all the unique possible annotations  metabolite_ids <- unique(unlist(lapply(metabolite_ids, function(x){strsplit(x, \"; \")[[1]]})))  ### NOTE: Rather then matching the annotation results back to the metabolite annotations, DE can be run changing the 'annotation.column' = \"all_Isomer_IDs` cluster_6_pathways <- FishersPathwayAnalysis(list(\"metabolites\" = metabolite_ids),                             max_path_size = 500,                             alternative = \"greater\",                             min_path_size = 5,                             pathway_all_info = T,                             pval_cutoff = 0.05,                             verbose = TRUE) Fisher Testing ...... Loading files ...... Loading files finished! Expanding database to extract all potential metabolites Parsing the information of given analytes class Begin metabolic pathway analysis ...... Merging datasets Running test Calculating p value...... P value obtained Done cluster_6_pathways[1:4,] cluster_6_mz_pathways <- FishersPathwayAnalysis(list(\"mzs\" = cluster_6$gene),                             min_path_size = 5,                             max_path_size = 500,                                 alternative = \"greater\",                             pathway_all_info = T,                             pval_cutoff = 1,                             verbose = TRUE) cluster_6_mz_pathways[1:4,] VisualisePathways(ROI,pathway_df = cluster_6_pathways,p_val_threshold = 0.1,assay = \"Spatial\",slot = \"counts\") VisualisePathways(bladder_annotated,pathway_df = cluster_6_mz_pathways,p_val_threshold = 0.1,assay = \"Spatial\",slot = \"counts\") DE_pathways <- FindRegionalPathways(SpaMTP = ROI,                                 ident = \"ssc\",                                 DE.list = list(cluster_DEMs$DEMs),                                 analyte_types = c(\"metabolites\"),                                 SM_assay = \"Spatial\",                                 ST_assay = NULL) DE_pathways ## Get Data ROI_pathays <- subset(bladder, subset = ssc %in% c(\"2\", \"5\", \"6\"))  ## Re-annotate ROI_pathays <- AnnotateSM(ROI_pathays, db = rbind(Chebi_db,Lipidmaps_db,HMDB_db), ppm_error = 15, polarity = \"positive\", adducts = c(\"M+H\",\"M+K\"))   ## Re-run DE analysis DE <- FindAllDEMs(data = ROI_pathays, ident = \"ssc\", n = 5, logFC_threshold = 1,                              DE_output_dir =NULL, return.individual = FALSE,                              run_name = \"FindAllDEMs\", annotation.column = \"all_IsomerNames\")    DE_pathways <- FindRegionalPathways(SpaMTP = ROI_pathays,                                 ident = \"ssc\",                                 DE.list = list(DE$DEMs),                                 analyte_types = c(\"metabolites\"),                                 SM_assay = \"Spatial\",                                 ST_assay = NULL) DE_pathways PlotRegionalPathways(regpathway = DE_pathways)"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/articles/Mouse_Urinary_Bladder.html","id":"clustering-using-pca-and-seurat","dir":"Articles","previous_headings":"Analsysing Spatial Metabolomic Data with SpaMTP","what":"Clustering using PCA and Seurat","title":"SpaMTP: Spatial Metabolomics Analysis","text":"SpaMTP built foundations Seurat Object, allows user still use many useful Seurat functions spatial metabolomic data using SpaMTP. , demonstrate use metabolite-based PCA results SpaMTP, along Seurat’s clustering functions, identify rare cell type known (lamina propria). First run clustering: Now, lets plot results:  Comparing results SSC segmentation can see clustering can still detect urinary bladder muscle (cluster 0/1), urothelium (cluster 2/3) adventitia (cluster  4). addition, able detect region matches similar location lamina propria (cluster 5) identified original publication.","code":"ROI <- RunMetabolicPCA(ROI, assay = \"Spatial\", slot = \"counts\") ROI <- FindNeighbors(ROI, dims = 1:30, verbose = FALSE) # use the SpaMTP object generated from PCA Pathway Analysis ROI <- RunUMAP(ROI, dims = 1:30, verbose = FALSE) ROI <- FindClusters(ROI, resolution = 0.3, cluster.name = \"clusters\", verbose = FALSE) ## Custom palette for SpaMTP/Seurat Clustering SpaMTP_palette = list(\"0\" = \"#0074B0\",                        \"1\" = \"#008E87\",                        \"2\" = \"#DE4D6C\",                       \"3\" = \"#BF212E\",                        \"4\" = \"#C2B03B\" ,                       \"5\" = \"#92f09a\",                       \"6\" = \"#9FBEAC\")  DimPlot(ROI, group.by = \"clusters\", cols = SpaMTP_palette, pt.size = 2) | ImageDimPlot(ROI, size = 2, group.by = \"clusters\", cols = SpaMTP_palette)  + coord_flip() + scale_x_reverse()"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/articles/Mouse_Urinary_Bladder.html","id":"finding-spatially-correlated-metabolites","dir":"Articles","previous_headings":"Analsysing Spatial Metabolomic Data with SpaMTP","what":"Finding Spatially Correlated Metabolites","title":"SpaMTP: Spatial Metabolomics Analysis","text":"added benefit using spatial technologies rather single-cell/bulk methods retainment spatial context. allows us analyse trends across whole tissue section otherwise lost bulk analyses. original publication defined m/z = 743.5482 lamina propria. Lets use SpaMTP’s feature co-localisation function check top metabolites spatially correlate cluster 5! interested lamina propria, lets focus top correlated metabolites cluster 5:  can see top hit m/z = 734.5467, described Cardinal’s paper peak defining lamina propria. can check looking spatial expression m/z:  addition finding correlated m/z’s based spatial location, can also identify metabolites demonstrate strong spatial pattern. done using Moran’s scores determine spatially variable features.","code":"correlated_features <- FindCorrelatedFeatures(ROI, ident = \"clusters\", SM.assay = \"Spatial\", nfeatures = 6) #find the spatial correlation between each cluster and their relative metabolites df <- correlated_features[correlated_features$ident == \"5\",] # subsets to only include results from cluster 5 df$mz_name <- paste0(\"mz-\",round(df$mz, digits = 6)) # simplifies the m/z names for the plot  ## Plots the top 10 results ggplot(df, aes(x = -rank, y = correlation)) + geom_bar(stat = \"identity\") + geom_text(aes(label = mz_name), vjust = -0.5, size = 3, color = \"black\") + coord_flip() + theme_classic() ## Formats Plots  plots <- list() for (i in c(\"0\", \"2\", \"3\", \"4\", \"5\")){     suppressWarnings(clst <- subset(ROI, subset = clusters %in% i))     plots[[i]] <- ImageDimPlot(clst, group.by = \"clusters\", cols = SpaMTP_palette, size = 1.5) } plots[[\"mz\"]] <- ImageFeaturePlot(ROI, features = 'mz-743.546752929688', size = 1.2) & scale_fill_gradientn(colors = viridis::turbo(100))    ## Plots data patchwork::wrap_plots(plots, ncol = 3, nrow = 2)& coord_flip() & scale_x_reverse() ROI <- FindSpatiallyVariableMetabolites(ROI, assay = \"Spatial\", image = \"fov\") # Finds Spatially Strong m/z's  ImageFeaturePlot(ROI, features = GetSpatiallyVariableMetabolites(ROI, assay = \"Spatial\", n = 6), size = 1)  & coord_flip() & scale_x_reverse()"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/articles/Mouse_Urinary_Bladder.html","id":"switching-between-spamtp-and-cardinal-objects","dir":"Articles","previous_headings":"Analsysing Spatial Metabolomic Data with SpaMTP","what":"Switching between SpaMTP and Cardinal Objects","title":"SpaMTP: Spatial Metabolomics Analysis","text":"Similar can interchangeably convert data SpaMTP Cardinal objects, meaning pre-processing analysis tools either package can used point analysis pipeline. example, can convert SpaMTP object Cardinal generate figure overlaying key m/z values. Lets first convert data: can see Object layout correct 79 annotated m/z values seurat metadata also stored pixelData slot. Next can generate plot using Cardinal:  can see based ion image overlay plot three selected m/z values correspond quite significantly Seurat based clustering. 743.5482 clearly maps cluster 5 (green), whereas 798.5410 corresponds cluster 2 3 (red).","code":"bladder_cardinal <- ConvertSeuratToCardinal(data = ROI, assay = \"Spatial\", slot = \"counts\") Gathering Intensity, m/z values and metadata from Seurat Object ...  Converting intensity matrix and Generating Cardinal Object ... bladder_cardinal ## MSImagingExperiment with 79 features and 21164 spectra  ## spectraData(1): intensity ## featureData(1): mz ## pixelData(13): x, y, run, ..., Seurat_metadata.GPs, Seurat_metadata.clusters, Seurat_metadata.seurat_clusters ## coord(2): x = 9...247, y = 11...134 ## runNames(1): run0 ## mass range: 426.9289 to 970.1479  ## centroided: NA image(bladder_cardinal, mz=c(798.5410, 741.5307, 743.5482),         main=\"Mouse urinary bladder\",         col=c(\"red\", \"lightblue\", \"green\"),         contrast.enhance=\"suppress\",         smooth.image=\"adaptive\",         normalize.image=\"linear\",         superpose=TRUE) image(bladder_cardinal, \"Seurat_metadata.seurat_clusters\", col = unlist(unname(SpaMTP_palette)))"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/articles/Mouse_Urinary_Bladder.html","id":"additional-pathway-analysis","dir":"Articles","previous_headings":"Analsysing Spatial Metabolomic Data with SpaMTP","what":"Additional Pathway Analysis","title":"SpaMTP: Spatial Metabolomics Analysis","text":"can also run pathway analysis new clustering results. Lets now, time using Seurat’s FindAllMarker() function calculating DE metabolites, highlighting SpaMTP’s flexibility. see FindAllMarker() requires normalised data. SpaMTP NormalizeSMData() function allows TIC (Total Ion Current) normalisation. info form normalisation, please read Jauhiainen et.al (2014). , visualise top 5 pathways differentially expressed clusters:  can also plots key pathways interest also upregulated dataset.  Based findings, observe lamina propria (cluster 5) regulation metabolites associated sensory perception pathways. matches biology, layer bladder contains sensory neurons. large range additional applications SpaMTP can used , , multi-modality analysis using spatial transcriptomics spatial metabolomics. Check SpaMTP github documentation site .","code":"## Annotate ROI with additional datasets ROI <- AnnotateSM(ROI, db = rbind(Chebi_db,Lipidmaps_db, HMDB_db), polarity = \"positive\")  ## Performs TIC normalisation ROI <- NormalizeSMData(ROI)  ## Run FindAllMarkers() on clustering results Idents(ROI) <- \"clusters\" DE <- FindAllMarkers(ROI, assay = \"Spatial\")  ## Runs Pathway Analysis between clusters DE_pathways <- FindRegionalPathways(SpaMTP = ROI,                                 ident = \"clusters\",                                 DE.list = list(DE),                                 analyte_types = c(\"metabolites\"),                                 SM_assay = \"Spatial\",                                 ST_assay = NULL) PlotRegionalPathways(regpathway = DE_pathways, num_display = 4) key_pathways <- c(\"Biochemical pathways: part I\",\"G alpha (i) signalling events\",\"Metabolism of carbohydrates\",\"Sphingolipid metabolism: integrated pathway\",                   \"Sensory perception of sweet, bitter, and umami (glutamate) taste\", \"Sensory perception of taste\",                   \"G alpha (i) signaling events\")  PlotRegionalPathways(regpathway = DE_pathways, selected_pathways = key_pathways)"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/articles/Mouse_Urinary_Bladder.html","id":"session-info","dir":"Articles","previous_headings":"Analsysing Spatial Metabolomic Data with SpaMTP","what":"Session Info","title":"SpaMTP: Spatial Metabolomics Analysis","text":"","code":"sessionInfo() ## R version 4.4.1 (2024-06-14) ## Platform: aarch64-apple-darwin20 ## Running under: macOS 15.5 ##  ## Matrix products: default ## BLAS:   /Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/lib/libRblas.0.dylib  ## LAPACK: /Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/lib/libRlapack.dylib;  LAPACK version 3.12.0 ##  ## locale: ## [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8 ##  ## time zone: Europe/Dublin ## tzcode source: internal ##  ## attached base packages: ## [1] stats4    stats     graphics  grDevices utils     datasets  methods   ## [8] base      ##  ## other attached packages: ##  [1] future_1.67.0          htmltools_0.5.8.1      viridis_0.6.5          ##  [4] viridisLite_0.4.2      EnhancedVolcano_1.24.0 ggrepel_0.9.6          ##  [7] ggplot2_4.0.0          dplyr_1.1.4            Seurat_5.3.0           ## [10] SeuratObject_5.2.0     sp_2.2-0               Cardinal_3.8.3         ## [13] S4Vectors_0.44.0       ProtGenerics_1.38.0    BiocGenerics_0.52.0    ## [16] BiocParallel_1.40.2    SpaMTP_1.1.0           ##  ## loaded via a namespace (and not attached): ##   [1] fs_1.6.6                    matrixStats_1.5.0           ##   [3] spatstat.sparse_3.1-0       bitops_1.0-9                ##   [5] sf_1.0-21                   EBImage_4.48.0              ##   [7] httr_1.4.7                  RColorBrewer_1.1-3          ##   [9] tools_4.4.1                 sctransform_0.4.2           ##  [11] R6_2.6.1                    lazyeval_0.2.2              ##  [13] uwot_0.2.3                  withr_3.0.2                 ##  [15] gridExtra_2.3               progressr_0.16.0            ##  [17] cli_3.6.5                   Biobase_2.66.0              ##  [19] textshaping_1.0.3           spatstat.explore_3.5-3      ##  [21] fastDummies_1.7.5           shinyjs_2.1.0               ##  [23] labeling_0.4.3              sass_0.4.10                 ##  [25] S7_0.2.0                    spatstat.data_3.1-8         ##  [27] proxy_0.4-27                ggridges_0.5.7              ##  [29] pbapply_1.7-4               pkgdown_2.1.3               ##  [31] systemfonts_1.2.3           svglite_2.2.1               ##  [33] scater_1.34.1               parallelly_1.45.1           ##  [35] Rfast2_0.1.5.4              CardinalIO_1.4.0            ##  [37] limma_3.62.2                rstudioapi_0.17.1           ##  [39] generics_0.1.4              ica_1.0-3                   ##  [41] spatstat.random_3.4-2       crosstalk_1.2.2             ##  [43] Matrix_1.7-4                ggbeeswarm_0.7.2            ##  [45] abind_1.4-8                 lifecycle_1.0.4             ##  [47] yaml_2.3.10                 edgeR_4.4.2                 ##  [49] SummarizedExperiment_1.36.0 SparseArray_1.6.2           ##  [51] Rtsne_0.17                  grid_4.4.1                  ##  [53] promises_1.3.3              crayon_1.5.3                ##  [55] miniUI_0.1.2                lattice_0.22-7              ##  [57] beachmat_2.22.0             cowplot_1.2.0               ##  [59] zeallot_0.2.0               pillar_1.11.1               ##  [61] knitr_1.50                  fgsea_1.32.4                ##  [63] GenomicRanges_1.58.0        future.apply_1.20.0         ##  [65] codetools_0.2-20            Rnanoflann_0.0.3            ##  [67] fastmatch_1.1-6             glue_1.8.0                  ##  [69] spatstat.univar_3.1-4       data.table_1.17.8           ##  [71] vctrs_0.6.5                 png_0.1-8                   ##  [73] spam_2.11-1                 gtable_0.3.6                ##  [75] zigg_0.0.2                  cachem_1.1.0                ##  [77] xfun_0.53                   S4Arrays_1.6.0              ##  [79] mime_0.13                   Rfast_2.1.5.1               ##  [81] survival_3.8-3              SingleCellExperiment_1.28.1 ##  [83] pheatmap_1.0.13             units_0.8-7                 ##  [85] statmod_1.5.0               fitdistrplus_1.2-4          ##  [87] ROCR_1.0-11                 nlme_3.1-168                ##  [89] matter_2.8.0                RcppAnnoy_0.0.22            ##  [91] GenomeInfoDb_1.42.3         bslib_0.9.0                 ##  [93] irlba_2.3.5.1               vipor_0.4.7                 ##  [95] KernSmooth_2.23-26          DBI_1.2.3                   ##  [97] ggrastr_1.0.2               tidyselect_1.2.1            ##  [99] compiler_4.4.1              ontologyIndex_2.12          ## [101] BiocNeighbors_2.0.1         xml2_1.4.0                  ## [103] desc_1.4.3                  ggdendro_0.2.0              ## [105] DelayedArray_0.32.0         plotly_4.11.0               ## [107] scales_1.4.0                classInt_0.4-11             ## [109] lmtest_0.9-40               tiff_0.1-12                 ## [111] stringr_1.5.2               digest_0.6.37               ## [113] goftest_1.2-3               fftwtools_0.9-11            ## [115] spatstat.utils_3.2-0        rmarkdown_2.29              ## [117] XVector_0.46.0              pkgconfig_2.0.3             ## [119] jpeg_0.1-11                 MatrixGenerics_1.18.1       ## [121] fastmap_1.2.0               rlang_1.1.6                 ## [123] htmlwidgets_1.6.4           UCSC.utils_1.2.0            ## [125] shiny_1.11.1                farver_2.1.2                ## [127] jquerylib_0.1.4             zoo_1.8-14                  ## [129] jsonlite_2.0.0              BiocSingular_1.22.0         ## [131] RCurl_1.98-1.17             magrittr_2.0.4              ## [133] kableExtra_1.4.0            scuttle_1.16.0              ## [135] GenomeInfoDbData_1.2.13     dotCall64_1.2               ## [137] patchwork_1.3.2             Rcpp_1.1.0                  ## [139] ggnewscale_0.5.2            reticulate_1.43.0           ## [141] stringi_1.8.7               zlibbioc_1.52.0             ## [143] MASS_7.3-65                 plyr_1.8.9                  ## [145] rgoslin_1.10.0              parallel_4.4.1              ## [147] listenv_0.9.1               deldir_2.0-4                ## [149] splines_4.4.1               tensor_1.5.1                ## [151] locfit_1.5-9.12             igraph_2.1.4                ## [153] spatstat.geom_3.6-0         RcppHNSW_0.6.0              ## [155] reshape2_1.4.4              ScaledMatrix_1.14.0         ## [157] evaluate_1.0.5              RcppParallel_5.1.11-1       ## [159] httpuv_1.6.16               RANN_2.6.2                  ## [161] tidyr_1.3.1                 purrr_1.1.0                 ## [163] polyclip_1.10-7             scattermore_1.2             ## [165] rsvd_1.0.5                  xtable_1.8-4                ## [167] e1071_1.7-16                RSpectra_0.16-2             ## [169] later_1.4.4                 class_7.3-23                ## [171] ragg_1.5.0                  tibble_3.3.0                ## [173] beeswarm_0.4.0              IRanges_2.40.1              ## [175] cluster_2.1.8.1             globals_0.18.0"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/articles/Multi-Omic_Mouse_Brain.html","id":"multi-omics-mouse-brain-vignette","dir":"Articles","previous_headings":"","what":"Multi-Omics Mouse Brain Vignette","title":"SpaMTP: Spatial Multi-Omics Analysis","text":"tutorial highlights utility SpaMTP multi-omic data. vignette use mouse brain data, Spatial Transcriptomics (Visium), ST, Spatial Metabolomics (MALDI-MSI), SM, generated tissue section. data publicly available Vicari et al data objects used vignette available SpaMTP zenodo page. Using SpaMTP highlight: Loading SM Data Manually Aligning SM ST datasets Mapping Aligned SM data ST Spot Level Multi-Modal Data Integration SM ST Data Multi-Omic Data Visualisation Co-localisation Metabolites Genes Multi-Modality Pathway Analysis Author: Andrew Causer","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/articles/Multi-Omic_Mouse_Brain.html","id":"load-data","dir":"Articles","previous_headings":"Multi-Omics Mouse Brain Vignette","what":"Load Data","title":"SpaMTP: Spatial Multi-Omics Analysis","text":", load Visium MALDI-MSI data! Visium data contained 10X Genomic’s standard format. MALDI-MSI data matrix format, one table contains x y coordinates, also intensity values m/z value.","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/articles/Multi-Omic_Mouse_Brain.html","id":"install-and-import-r-libraries","dir":"Articles","previous_headings":"Multi-Omics Mouse Brain Vignette > Load Data","what":"Install and Import R Libraries","title":"SpaMTP: Spatial Multi-Omics Analysis","text":"First, need import required libraries analysis:","code":"## Install SpaMTP if not previously installed if (!require(\"SpaMTP\"))     devtools::install_github(\"GenomicsMachineLearning/SpaMTP\")                               #General Libraries library(SpaMTP) library(Cardinal) library(Seurat) library(dplyr)  #For plotting + DE plots library(ggplot2) library(EnhancedVolcano) library(mclust) library(patchwork)  ## For reproducability set.seed(888)"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/articles/Multi-Omic_Mouse_Brain.html","id":"load-sm-data","dir":"Articles","previous_headings":"Multi-Omics Mouse Brain Vignette > Load Data","what":"Load SM Data","title":"SpaMTP: Spatial Multi-Omics Analysis","text":"mentioned , format SM data mtx format. different .ibd .imzML files used Spatial Metabolomics Analysis: Mouse Bladder Vignette. layout dataset demonstrated : Based , can read .csv file contains intensity pixel coordinate values. Great! Now lets explore sample. First, see layout SpaMTP Seurat Object: can see 1,538 different m/z masses across 4,914 pixels. Lets look metadata! can see pixel names combination x y coordinates. also two data columns, nCount_Spatial nFeature_Spatial, generated loading data. Respectively, represent total intensity across m/z per pixel, number different m/z values intensity > 0 per pixel. Lets look sample spatially. just visualise number m/z’s per pixel.  pixels contain SM data, thus remove first starting analysis.  also change orig.ident sample name later reference:","code":"# Load directly from file #msi <- ReadSM_mtx(\"./V11L12-109_B1.Visium.FMP.220826_smamsi.csv\")  # Load directly from URL msi_url <- \"https://zenodo.org/records/17246900/files/V11L12-109_B1.Visium.FMP.220826_smamsi.csv?download=1\" msi <- ReadSM_mtx(mtx.file = msi_url) Spliting matrix data from column 1 onwards ....   Adding Pixel Metadata ....  Creating Centroids for Spatial Seurat Object .... msi ## An object of class Seurat  ## 1538 features across 4914 samples within 1 assay  ## Active assay: Spatial (1538 features, 0 variable features) ##  1 layer present: counts ##  1 spatial field of view present: fov head(msi@meta.data) ImageFeaturePlot(msi, \"nFeature_Spatial\", size = 2, dark.background = FALSE) ## Warning: `aes_string()` was deprecated in ggplot2 3.0.0. ## ℹ Please use tidy evaluation idioms with `aes()`. ## ℹ See also `vignette(\"ggplot2-in-packages\")` for more information. ## ℹ The deprecated feature was likely used in the Seurat package. ##   Please report the issue at <https://github.com/satijalab/seurat/issues>. ## This warning is displayed once every 8 hours. ## Call `lifecycle::last_lifecycle_warnings()` to see where this warning was ## generated. msi <- subset(msi, subset = nCount_Spatial > 0)  ImageFeaturePlot(msi, \"nCount_Spatial\", size = 1.3, dark.background = FALSE) | ImageFeaturePlot(msi, \"nFeature_Spatial\", size = 1.3, dark.background = FALSE) msi@meta.data$orig.ident <- \"msi_sample1\""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/articles/Multi-Omic_Mouse_Brain.html","id":"load-st-data","dir":"Articles","previous_headings":"Multi-Omics Mouse Brain Vignette > Load Data","what":"Load ST Data","title":"SpaMTP: Spatial Multi-Omics Analysis","text":"Now successfully loaded SM data, lets load ST Visium data. data can loaded using Seurat’s Load10X_Spatial() function. ST data 32,285 genes 3,120 spots. Next, visualise sample compare MSI image .  addition, can load metadata associated tissue morphology generated authors original publication. mentioned previously, data analysing Parkinson’s mouse model, dopamine neurons one brain hemisphere lesioned. metadata loaded contains information surrounding tissue structures lesion site. Now, lets load metadata add Visium Seurat object. Now, can plot results. can use information later tissue alignment removing poor quality spots sitting outside tissue section.","code":"vis <- Load10X_Spatial(\"vignette_data_files/Mouse_Brain/ST_data/outs/\") vis ## An object of class Seurat  ## 32285 features across 3120 samples within 1 assay  ## Active assay: Spatial (32285 features, 0 variable features) ##  1 layer present: counts ##  1 spatial field of view present: slice1 SpatialFeaturePlot(vis, features = c(\"nCount_Spatial\", \"nFeature_Spatial\"), pt.size.factor = 2) ## Read in metadata files lesion <- read.csv(\"./outs/lesion.csv\", row.names = 1) region <- read.csv(\"./outs/region.csv\", row.names = 1) region_loupe <- read.csv(\"./outs/RegionLoupe.csv\", row.names = 1)  ## Combine into one dataframe annotations <- cbind(lesion,region,region_loupe)  ## Add data to metadata slot vis@meta.data[colnames(annotations)] <- annotations[colnames(annotations)] vis@meta.data <- vis@meta.data %>% mutate(annotations = ifelse(RegionLoupe %in% c(\"CP\", \"ACB\"), paste0(RegionLoupe, \"_\", lesion), RegionLoupe)) head(vis) SpatialDimPlot(vis, group.by = c(\"lesion\",\"region\", \"RegionLoupe\"))"},{"path":[]},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/articles/Multi-Omic_Mouse_Brain.html","id":"annotate-mz-masses","dir":"Articles","previous_headings":"Multi-Omics Mouse Brain Vignette > Data preprocessing","what":"Annotate m/z masses","title":"SpaMTP: Spatial Multi-Omics Analysis","text":"Now successfully loaded ST SM data, can now run general pre-processing remove poor quality spots/pixel genes/metabolites. case, matrix run FMP10 matrix, meaning masses metabolites additional mass added weight, thus require specialised annotation database ensure annotations correct additional mass. SpaMTP inbuilt function annotating metabolites FMP10 matrices called AddFMP10Annotations(). function also allows addition custom/additional metabolites aren’t annotated current dataset. Parkinson’s heavily associated dopamine regulation, thus also use add.custom.annotations parameter include annotation molecule. First, need load additional data.frame containing custom annotations: Next, can add custom annotations FMP10 database annotate dataset: specific list annotations, regardless matrix used generate data, can add custom annotations using AddCustomMZAnnotations() function. function requires data.frame containing two columns named mass annotation. can see differs using inbuilt FMP10 database: functions add annotations SpaMTP object’s feature meta.data slot. can see : can see based FMP10-tagged value, able annotated m/z values respective metabolites. Dopamine plays critical part Parkinson’s disease, lets visualise annotation spatially!  strong localisation dopamine non-lesioned hemisphere.","code":"fmp10_metabolites <- read.csv(url(\"https://zenodo.org/records/17246900/files/Public_data_FMP10_Annotations.csv?download=1\"), row.names = 1) fmp10_metabolites msi_annotated <- AddFMP10Annotations(msi, add.custom.annotation = fmp10_metabolites,  assay = \"Spatial\", return.only.annotated = F) custom_panel <- fmp10_metabolites[c(\"mass\", \"annotation\")] custom_panel msi_custom_annotated <- AddCustomMZAnnotations(msi, custom_panel) msi_annotated[[\"Spatial\"]]@meta.data[413:414,] msi_custom_annotated[[\"Spatial\"]]@meta.data[413:414,] ImageMZAnnotationPlot(msi_annotated, \"Dopamine (double derivatized)\", slot = \"counts\", dark.background = FALSE, size = 1.5)"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/articles/Multi-Omic_Mouse_Brain.html","id":"align-multi-omic-technologies","dir":"Articles","previous_headings":"Multi-Omics Mouse Brain Vignette","what":"Align Multi-Omic Technologies","title":"SpaMTP: Spatial Multi-Omics Analysis","text":"Although two -omic datasets sample, coordinates aligned current format. can see first plot .   achieve multi-omic alignment, must perform 2 steps: 1. Align Coordinates: , manually adjust coordinates SM data match H&E image Visium data using Shiny app generated ManualAlignImages() can change data plotted/visualised assist correct alignment output SM SpaMTP Seurat Class Object transformed coordinates (transformed via affine transformation) 2. Map Omic Data Common Spots: final step map bin SM data ST spot using MapSpatialOmics() step works finding SM data points within radius ST spot assigning respective data Increasing SM resolution function can improve mapping reducing distance pixel spot centroids. Lets run functions sample:  Running code activate interactive shiny app users can align two datasets. example can also visualised . Lets observe change coordinates, comparing original x y coordinates stored meta.data updated pixel coordinates stored @image$fov slot: can see values -scaled matched visium coordinates.  can also check SM coordinates haven’t distorted plotting m/z value. Let’s compare vs .  Great, now confident SM ST data aligned coordinates, can map pixel relative m/z intensity values corresponding ST spot. selected overlap threshold 30%, meaning pixel mapped spot atleast 30% total area must overlapping corresponding visium spot. NOTE: check version SeuratObject, => 5.2.0 must update SpaMTP Seurat Object first running MapSpatialOmics. case need run UpdateSeuratObject. Lets visualise mapping went compare original SM data object:  can see expression Dopamine (mz-674.28) displays pattern spatially Visium mapped object, compared original MSI-data object. data almost ready downstream analyses. However, based provided annotations displayed , remove spots annotated anatomical region (meaning located outside tissue).  can now see removed spots associated outer border tissue. example, bottom portion section fold H&E thus technical noise, meaning spots need removed.","code":"df1 <- GetTissueCoordinates(vis) df1$sample <- \"RNA\"      df2 <- GetTissueCoordinates(msi_annotated) df2[,\"sample\"] <- \"MSI\"  p1 <- ggplot(df1, aes(x, y,color = sample)) + theme_classic() + geom_point(size = 0.5)  + scale_color_manual(values = \"blue\") p2 <- ggplot(df2, aes(x, y,color = sample)) + theme_classic() + geom_point(size = 0.5) +  scale_color_manual(values = \"red\")  p1|p2 msi_transformed <- AlignSpatialOmics(sm.data = msi_annotated, st.data = vis) Loading required package: shiny  Show in New Window  Listening on http://0.0.0.0:4698  Sample: 2   1.21 4.587997e-18 73.5047   4.587997e-18 -1.21 580.6509   0 0 1 head(msi_transformed) head(GetTissueCoordinates(msi_transformed)) CheckAlignment(msi_transformed, vis, image.res = NULL, size = 0.8) ImageMZPlot(msi_annotated, mzs = 674.28, size = 2, slot = \"counts\") |    ImageMZPlot(msi_transformed, mzs = 674.28, size = 2, slot = \"counts\") packageVersion(\"SeuratObject\") ## [1] '5.2.0' msi_transformed <- UpdateSeuratObject(msi_transformed) combined.data <- MapSpatialOmics(SM.data = msi_transformed, ST.data = vis, overlap.threshold = 0.3, annotations = TRUE, ST.scale.factor = NULL) Running `MapSpatialOmics` in lowres mode! This is normally used for bin/spot-based spatial data (Visium)...  Inputs of `ST.scale.factor`, `overlap.threshold` and `merge.unique.metadata` are required for lowres mode, please ensure they are included ...  No pixel width was provided, calculating meadian SM pixel width ...  SM pixel width used for mapping = 569.514635563575...  Generating polygon from SM pixel coordinates ...  Generating polygon from ST spot coordinates ...  Assigning SM polygons to overlapping ST polygons ...  Generating new Spatial Multi-Omic SpaMTP Seurat Object ...  Averaging SM intensity values per ST spot ...  Adding SM metadata to the new SpaMTP Seurat Object ...  Adding metabolite annotation metadata to the new SpaMTP Seurat Object ... ImageMZPlot(msi_transformed, mzs = 674.28, size = 2, slot = \"counts\") |    SpatialMZPlot(combined.data, mzs = 674.28, assay = \"SPM\", slot = \"counts\", pt.size.factor = 2.2) combined.data <- subset(combined.data, subset = RegionLoupe == \"\", invert = T) SpatialDimPlot(combined.data, group.by = c(\"lesion\", \"RegionLoupe\"), pt.size.factor = 2)"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/articles/Multi-Omic_Mouse_Brain.html","id":"clusteringdownstream-analysis","dir":"Articles","previous_headings":"Multi-Omics Mouse Brain Vignette","what":"Clustering/Downstream Analysis","title":"SpaMTP: Spatial Multi-Omics Analysis","text":"Now spatial datasets cleaned fully aligned, can perform downstream analyses determine cell types, differentially expressed genes metabolites, also upregulated metabolic pathways.","code":"annotation_palette <- list(\"ACB_intact\" = \"#faa957\", \"ACB_lesioned\" = \"#d16d08\", \"aco\" = \"#592e8b\",\"cc\" = \"#c29fcb\", \"CP_intact\" = \"#b3dff2\" ,\"CP_lesioned\" = \"#348bc2\",\"CTX\" = \"#aedea0\",\"LSX\" = \"#f37985\", \"MSC\" = \"#e34045\", \"OT\" = \"#ad9ea0\",\"VL\" = \"#ff59ee\")    # Non-Spatial Palettes  SM_palette <- list(\"0\" = \"#9dce71\", \"1\" = \"#009648\", \"2\" = \"#348bc2\", \"3\" = \"#b3dff2\", \"4\" = \"#c29fcb\")  ST_palette <- list(\"0\" = \"#348bc2\", \"1\" = \"#009648\", \"2\" = \"#f37985\",\"3\" = \"#fcf283\", \"4\" = \"#0067a8\" , \"5\" = \"#9dce71\", \"6\" = \"#c29fcb\", \"7\" = \"#592e8b\",\"8\" = \"#e81d25\",\"9\" = \"#ff59ee\",\"10\" = \"#ad9ea0\")    # Spatial Palettes   intergrated_palette <- list(\"0\" = \"#9dce71\", \"1\" = \"#338bc3\", \"2\" = \"#b4dff1\",\"3\" = \"#e62127\", \"4\" = \"#f37985\" , \"5\" = \"#009648\", \"6\" = \"#c2a0cb\", \"7\" = \"#b0d8a0\",\"8\" = \"#d16e28\",\"9\" = \"#592e8a\",\"10\" = \"#faaa59\", \"11\" = \"#fcf286\")  spatial_SM_palette <- list(\"1\" = \"#b4dff1\", \"2\" = \"#fcf286\", \"3\" = \"#009648\", \"4\" = \"#b0d8a0\", \"5\" = \"#faaa59\", \"6\"= \"#f37985\", \"7\" = \"#338bc3\",\"8\"= \"#338bc3\", \"9\"= \"#cc6dab\", \"10\"=\"#c2a0cb\", \"11\"=\"#592e8a\")  spatial_ST_palette  <- list(\"1\" = \"#cc6dab\", \"2\" = \"#c2a0cb\",  \"3\" = \"#f37985\" ,\"4\" = \"#9dce71\", \"5\" = \"#b4dff1\", \"6\" = \"#e62127\", \"7\" = \"#338bc3\",\"8\" = \"#009648\",\"9\" = \"#0068a8\",\"10\" = \"#fcf286\",\"11\" = \"#592e8a\")"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/articles/Multi-Omic_Mouse_Brain.html","id":"seurat-based-clustering","dir":"Articles","previous_headings":"Multi-Omics Mouse Brain Vignette > Clustering/Downstream Analysis","what":"Seurat-Based Clustering","title":"SpaMTP: Spatial Multi-Omics Analysis","text":"previously demonstrated Spatial Metabolomics Analysis Vignette, can use functions already implemented Seurat performing unsupervised clustering ST data, also metabolic data.","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/articles/Multi-Omic_Mouse_Brain.html","id":"cluster-st-data","dir":"Articles","previous_headings":"Multi-Omics Mouse Brain Vignette > Clustering/Downstream Analysis > Seurat-Based Clustering","what":"Cluster ST data","title":"SpaMTP: Spatial Multi-Omics Analysis","text":"First, run clustering ST data. Based two different modalities, mRNA data perform much better defining different cell types/structures within tissue sample. expect clustering able detect cell types/regions, striatum.  clustering results demonstrate clear groups cells. Lets compare provided annotations:  Looking results, can see clustering using genetic information can determine clear morphological brain regions within Striatum, including caudoputamen (CP) nucleus accumbens (ACB). However, clustering using genetic information identify lesioned regions Striatum, Striatum cells left hemisphere produce significantly higher levels Dopamine. Looking top 5 -expressed genes cluster 0, can see key genes define Striatum. plot :  Identified original publication, gene, ‘Pcp4’, highlighted differentially expressed -tact vs lesioned Striatum. gene expression alone differentiate lesion vs non-lesioned cells gene observed top differentially expressed genes. need look metabolic data identify gene.","code":"DefaultAssay(combined.data) <- \"SPT\"  ## Run ST clustering  combined.data <- NormalizeData(combined.data, verbose = FALSE) combined.data <- FindVariableFeatures(combined.data, verbose = FALSE) combined.data <- ScaleData(combined.data, verbose = FALSE) combined.data <- RunPCA(combined.data, npcs = 30, reduction.name = \"spt.pca\", verbose = FALSE) combined.data <- FindNeighbors(combined.data, dims = 1:30, reduction = \"spt.pca\", verbose = FALSE) combined.data <- RunUMAP(combined.data, dims = 1:30, reduction = \"spt.pca\", reduction.name = \"spt.umap\", verbose = FALSE) combined.data <- FindClusters(combined.data, resolution = 0.5, cluster.name = \"ST_clusters\", verbose = FALSE) DimPlot(combined.data, group.by = \"ST_clusters\", reduction = \"spt.umap\", cols = ST_palette) |    SpatialDimPlot(combined.data, group.by = \"ST_clusters\", pt.size.factor = 2.1, cols = ST_palette) striatum <- subset(combined.data, subset = region == \"striatum\")  SpatialDimPlot(striatum, group.by = \"ST_clusters\", label = F, pt.size.factor = 2.4, cols = ST_palette) |    SpatialDimPlot(striatum, group.by = \"annotations\", label = F, pt.size.factor = 2.4, cols = annotation_palette) Idents(combined.data) <- \"ST_clusters\"  DE <- FindAllMarkers(combined.data, only.pos = T) ## prints top 5 genes for cluster 0 == Striatum head(DE[DE$cluster == 0,] , n =5 ) SpatialFeaturePlot(combined.data, features = c(\"Ppp1r1b\", \"Gpr88\", \"Rgs9\"), pt.size.factor = 2)"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/articles/Multi-Omic_Mouse_Brain.html","id":"cluster-sm-data","dir":"Articles","previous_headings":"Multi-Omics Mouse Brain Vignette > Clustering/Downstream Analysis > Seurat-Based Clustering","what":"Cluster SM data","title":"SpaMTP: Spatial Multi-Omics Analysis","text":"Clustering based metabolic information likely reveal different information compared transcriptomic approach. SM clustering reveal activity functioning different cell types. Lets see clustering differs:  Looking clustering results can clearly see (cluster 3) defines cells intact Striatum still produce dopamine. addition, spatial distribution cluster 3 matches expression pattern dopamine displayed :","code":"DefaultAssay(combined.data) <- \"SPM\"  ## Run SM clustering  combined.data <- NormalizeData(combined.data, assay = \"SPM\") combined.data <- FindVariableFeatures(combined.data, verbose = FALSE) combined.data <- ScaleData(combined.data, verbose = FALSE) combined.data <- RunPCA(combined.data, npcs = 30, reduction.name = \"spm.pca\", verbose = FALSE) combined.data <- FindNeighbors(combined.data, dims = 1:15, reduction = \"spm.pca\", verbose = FALSE) combined.data <- RunUMAP(combined.data, dims = 1:15, reduction = \"spm.pca\", reduction.name = \"spm.umap\", verbose = FALSE) combined.data <- FindClusters(combined.data, resolution = 0.5,  cluster.name = \"SM_clusters\", verbose = FALSE) DimPlot(combined.data, group.by = \"SM_clusters\", reduction = \"spm.umap\", cols = SM_palette) |   SpatialDimPlot(combined.data, group.by = \"SM_clusters\", pt.size.factor = 2.1, cols = SM_palette) |    SpatialDimPlot(combined.data, group.by = \"lesion\", pt.size.factor = 2.1) dopamine_mzs <- SearchAnnotations(combined.data, \"Dopamine\", assay = \"SPM\") combined.data <- BinMetabolites(combined.data, mzs = dopamine_mzs$mz_names, slot = \"counts\", assay = \"SPM\",  bin_name = \"Dopamine\")  SpatialFeaturePlot(combined.data, features = \"Dopamine\", pt.size.factor = 2.1) + theme(legend.position = \"right\")"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/articles/Multi-Omic_Mouse_Brain.html","id":"spatially-informed-clustering","dir":"Articles","previous_headings":"Multi-Omics Mouse Brain Vignette > Clustering/Downstream Analysis","what":"Spatially-Informed Clustering","title":"SpaMTP: Spatial Multi-Omics Analysis","text":"Seurat based clustering methods provide fast robust method identifying common groups cells/spots based purely expression/itensity profiles. However, seen clustering plots , method can contain noise. SpaMTP implemented method clustering based python package GraphPCA uses spatial nearest-neighbours graph inform dimensionality reduction k-means clustering. Lets perform spatial clsutering ST SM data using RunSpatialGraphPCA GetKmeanClusters . comparing results, GraphPCA-based clustering much clearer defined regions less random noise. regions also clearly match biological regions states lesion intact striatum highlighted cluster 1 (light blue) cluster 7/8 (dark blue) respectively.","code":"## Using GraphPCA to add spatial Infomation  ## Run SM clustering  combined.data <- RunSpatialGraphPCA(data = combined.data, n_components = 30, assay = \"SPM\", platform = \"Visium\") combined.data <- GetKmeanClusters(combined.data, cluster.name = \"gpca_SPM\", clusters = 11)  ## Run ST clustering  combined.data <- RunSpatialGraphPCA(data = combined.data, n_components = 30, assay = \"SPT\", platform = \"Visium\", reduction_name = \"SpatialPCAT\", graph_name = \"SpatialKNNt\") combined.data <- GetKmeanClusters(combined.data, cluster.name = \"gpca_SPT\", clusters = 11 ,reduction = \"SpatialPCAT\") # Non-Spatial Plots p1 <- SpatialDimPlot(combined.data, group.by = \"ST_clusters\", cols = ST_palette, pt.size.factor =2.5, image.alpha = 0.8) p2 <- SpatialDimPlot(combined.data, group.by = \"SM_clusters\", cols = SM_palette, pt.size.factor =2.5, image.alpha = 0.8)  #Spatial Plots p3 <- SpatialDimPlot(combined.data, group.by = \"gpca_SPT\", cols = spatial_ST_palette, pt.size.factor =2.5, image.alpha = 0.8) p4 <- SpatialDimPlot(combined.data, group.by = \"gpca_SPM\", cols = spatial_SM_palette, pt.size.factor =2.5, image.alpha = 0.8)   (p1|p2)/(p3|p4)"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/articles/Multi-Omic_Mouse_Brain.html","id":"multi-modal-integrative-analysis","dir":"Articles","previous_headings":"Multi-Omics Mouse Brain Vignette","what":"Multi-Modal Integrative Analysis","title":"SpaMTP: Spatial Multi-Omics Analysis","text":"explained , transcriptomic metabolic data reveal define different aspects tissue. Based , multi-modal integration can used combine features one analysis. integrate spatial transcriptomic metabolomic data together get refined detailed clustering result. SpaMTP MultiOmicIntegration function allows automated manual specification weights modality generating integrated clusters. use pca embeddings generated spatially-informed GraphPCA dimentionality reduction equal modality weights ST = 0.5, SM = 0.5.  Looking results , can see integrative analysis identifies difference lesioned -tact striatum cells (cluster 1 cluster 2 respectively). difference also reflected UMAP. can also compare difference ST , SM integrated clustering:  Visually, integrated clustering highly correlates defined annotations. check statistically can quickly calculate Adjusted Rand Index (ARI) score cluster comparted annotation ground truth. Based results can see integrated clustering highest ARI score, meaning clustering similar ground truth.","code":"integrated.data <- MultiOmicIntegration(combined.data,return.intermediate = T, weight.list = list(0.5,0.5),                                         reduction.list =  list(\"SpatialPCA\", \"SpatialPCAT\"), dims.list = list(1:30, 1:30)) integrated.data <- RunUMAP(integrated.data, nn.name = \"weighted.nn\", reduction.name = \"wnn.umap\", reduction.key = \"wnnUMAP_\",verbose = FALSE) integrated.data <- FindClusters(integrated.data, graph.name = \"wsnn\", algorithm = 3, resolution = 0.6,  cluster.name = \"integrated_clusters\", verbose = FALSE) DimPlot(integrated.data, group.by = \"integrated_clusters\",  reduction = 'wnn.umap', label = F, cols = intergrated_palette, pt.size = 1.5) |    SpatialDimPlot(integrated.data, group.by = \"integrated_clusters\",  label = F, pt.size.factor = 2.2, cols = intergrated_palette, image.alpha =  1) (SpatialDimPlot(integrated.data, group.by = \"annotations\", pt.size.factor = 2.5, cols = annotation_palette, image.alpha = 0.8)|  SpatialDimPlot(integrated.data, group.by = \"gpca_SPM\", pt.size.factor = 2.5, cols = spatial_SM_palette, image.alpha = 0.8))/ (SpatialDimPlot(integrated.data, group.by = \"gpca_SPT\", pt.size.factor = 2.5, cols = spatial_ST_palette, image.alpha = 0.8)|    SpatialDimPlot(integrated.data, group.by = \"integrated_clusters\",  label = F, pt.size.factor = 2.5, cols = intergrated_palette, image.alpha = 0.8)) # Define clustering columns clustering_columns <- c(\"ST_clusters\", \"SM_clusters\", \"gpca_SPM\", \"gpca_SPT\", \"integrated_clusters\")  # Extract metadata meta <- integrated.data@meta.data  # Ground truth ground_truth <- as.factor(meta$annotations)  # Compute scores results <- data.frame(cluster = clustering_columns,ARI = NA)  for (i in seq_along(clustering_columns)) {   pred <- as.factor(meta[[clustering_columns[i]]])      # Ensure matching non-NA values   valid <- !is.na(ground_truth) & !is.na(pred)      results$ARI[i] <- adjustedRandIndex(ground_truth[valid], pred[valid])  }  print(results)"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/articles/Multi-Omic_Mouse_Brain.html","id":"differential-metabolite-and-gene-expression-analysis","dir":"Articles","previous_headings":"Multi-Omics Mouse Brain Vignette > Multi-Modal Integrative Analysis","what":"Differential Metabolite and Gene Expression Analysis","title":"SpaMTP: Spatial Multi-Omics Analysis","text":"Based , can look metabolites genes differentially expressed clusters. First, identify clusters display -regulation dopamine:  Analysing DE results, can see dopamine (single double FMP10-derivatized) expressed cluster 2. Now look gene expression differences cluster 2 vs clusters within Striatum: Supporting findings orginal publication, can see “Pcp4” -regulated cluster 2 (-tact striatum cells).","code":"# Performs pooling, pseudo-bulking and EdgeR Differential Expression Analysis cluster_DEMs <- FindAllDEMs(data = integrated.data, ident = \"integrated_clusters\", n = 3, logFC_threshold = 1.2,                              DE_output_dir =NULL, return.individual = FALSE, assay = \"SPM\",                             run_name = \"FindAllDEMs\", annotation.column = \"all_IsomerNames\" ) # DE results are returned in a data.frame Pooling one sample into 3 replicates... Running edgeR DE Analysis for  FindAllDEMs  -> with samples [ 3, 1, 2, 4, 7, 5, 6, 9, 0, 8, 10, 11 ] Starting condition: 3 Starting condition: 1 Starting condition: 2 Starting condition: 4 Starting condition: 7 Starting condition: 5 Starting condition: 6 Starting condition: 9 Starting condition: 0 Starting condition: 8 Starting condition: 10 Starting condition: 11 results <- cluster_DEMs$DEMs[cluster_DEMs$DEMs$cluster == \"2\",]  metabolites <- c(\"Dopamine (double derivatized)\", \"Dopamine (single derivatized)\")  ### Sets up colouring for significant spots in volcano plot keyvals <- ifelse(     results$annotations %in% metabolites, \"orange\", ifelse(     results$logFC < -1.2  & results$P.Value < 50e-4, 'royalblue',       ifelse(results$logFC > 1.2 & results$P.Value < 50e-4, 'red',         'black')))   keyvals[is.na(keyvals)] <- 'black'   names(keyvals)[keyvals == 'red'] <- 'Cluster 2 - UP'   names(keyvals)[keyvals == 'black'] <- 'Non-Sig'   names(keyvals)[keyvals == 'orange'] <- 'Dopamine'   names(keyvals)[keyvals == \"royalblue\"] <- \"Cluster 2 - Down\"   ### Plots volcano plot with DEM results volc_plot <- EnhancedVolcano::EnhancedVolcano( results,                                   selectLab = c(\"\"),                                    lab = results$annotations,                                   colCustom = keyvals,                                   pCutoff = 50e-4,                                   FCcutoff = 1.2,                                   pointSize = 3,                                   colAlpha = 1,                                   x = 'logFC',                                   y = 'P.Value',                                    gridlines.major = FALSE,                                   gridlines.minor = FALSE)   volc_plot ## subset data to only contain the striatum Idents(integrated.data) <- \"integrated_clusters\" striatum <- subset(integrated.data, subset = region == \"striatum\")  ## Find Differentially Expressed Genes DefaultAssay(striatum) <- \"SPT\" striatum_DEGs <- FindAllMarkers(striatum, only.pos = T) head(striatum_DEGs[striatum_DEGs$cluster == \"2\",], n = 4) SpatialFeaturePlot(integrated.data, features = \"Pcp4\", pt.size.factor = 2)"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/articles/Multi-Omic_Mouse_Brain.html","id":"multi-omic-data-visualisation","dir":"Articles","previous_headings":"Multi-Omics Mouse Brain Vignette","what":"Multi-Omic Data Visualisation","title":"SpaMTP: Spatial Multi-Omics Analysis","text":"Based analysis, can visualise gene metabolite interest 3D plot (“Pcp4” “Dopamine”).","code":"Plot3DFeature(combined.data,                features = c(\"Pcp4\", \"mz-674.2805\"),                assays = c(\"SPT\", \"SPM\"),                between.layer.height = 10000,                show.image = \"slice1\",                plot.height = 400,                plot.width = 700,                downscale.image = 2)"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/articles/Multi-Omic_Mouse_Brain.html","id":"multi-modality-pathway-analysis","dir":"Articles","previous_headings":"Multi-Omics Mouse Brain Vignette","what":"Multi-Modality Pathway Analysis","title":"SpaMTP: Spatial Multi-Omics Analysis","text":"vignette demonstrate two different methods multi-omic pathway analysis. first region cluster based pathway analysis previously described Spatial Metabolomics Analysis: Mouse Bladder Vignette. second method uses entire expression matrix cell.","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/articles/Multi-Omic_Mouse_Brain.html","id":"cluster-based-pathway-analysis","dir":"Articles","previous_headings":"Multi-Omics Mouse Brain Vignette > Multi-Modality Pathway Analysis","what":"Cluster-based Pathway Analysis","title":"SpaMTP: Spatial Multi-Omics Analysis","text":"Now identified metabolic transcriptional differences lesioned intact striatum regions, can now assess activity region performing multi-modal pathway analysis using genes metabolites. Another novel feature SpaMTP curated FMP10 annotation database allows users run pathway analysis FMP10 data. identify pathways based genes metabolites significantly altered striatum regions.  Due nature FMP10 matrix, often handful metabolites annotated meaning metabolites within various pathwasy captured. resolve run multi-modality pathway analysis using paired Visium MALDI DHB-matrix dataset. data already processed code hidden :  data object contains intact lesioned striatum regions comparing multi-modal DHB matrix sample.  Lets run DE find regional pathways FindRegionalPathways() combined data object. select important pathways associated Parkinson’s disease plot  One significant pathways associated lesioned region ‘Dopamine beta-hydroxylase deficiency’. can use SpaMTP’s network plotting function visualuse network pathway, along relative differentially expressed elements make activity pathway. Lets look: One key metabolite previously mentioned original publication (R)-S-adenosyl-L-methionine zwitterion. metabolite previously associated Parkinson’s disease using SpaMTP, able detect expression within lesioned striatum. now visualise expression metabolite spatially:  can see much expression metabolite within lesioned hemisphere. Finally, can combine expression metabolites see exact region pathway active.","code":"# Generate differential abundance and expression results for integrated clustering Idents(striatum) <- \"integrated_clusters\" deg =  FindAllMarkers(striatum,  assay = \"SPT\",only.pos =F) dem =  FindAllMarkers(striatum , assay = \"SPM\", only.pos =F)  DE.list = list(\"genes\" = deg,\"metabolites\" = dem)  ## Run multi-modal pathway analysis regpathway = FindRegionalPathways(   striatum,   analyte_types = c(\"genes\", \"metabolites\"),   SM_slot = \"counts\", ST_slot = \"counts\",   ident = \"integrated_clusters\",   DE.list = DE.list )  ## Select some key pathways to plot selected_pathways <- c(\"Epinephrine Action Pathway\",                         \"GABA receptor activation\",                         \"GABA receptor signaling\",                        \"GABAergic synapse\",                        \"Neuroinflammation and glutamatergic signaling\",                        \"Nicotine effect on dopaminergic neurons\",                        \"G alpha (i) signalling events\",                        \"Neuronal System\",                        \"Transmission across Chemical Synapses\",                        \"VEGFA-VEGFR2 signaling\",                        \"Apoptosis\") PlotRegionalPathways(regpathway = regpathway,selected_pathways = selected_pathways) ### Data was generated and mapped following same steps used above.  ### Raw files and metadata for DHB dataset and Visium can be downloaded here. The sample used was V11L12-038_B1: https://figshare.scilifelab.se/articles/dataset/Spatial_Multimodal_analysis_SMA_-_Mass_Spectrometry_Imaging_MSI_/22770161  ### Dataset alignment was achieved using the following parameters ### ### Rotation Angle: -0.7 ### Move X Axis: 59 ### Move Y Axis: -102 ### Blue Axis Angle: -45 ### Blue Axis Stretch: 1.22 ### Red Axis Angle: -45 ### Red Axis Stretch: 1.12 ### Mirror Y Axis: TRUE   ## Using Aligned and Mapped data: # data(combined.dhb.data)  ## Annotate metabolites against databases #db = rbind(HMDB_db, Chebi_db) #combined.dhb.data = AnnotateSM(combined.dhb.data,assay = \"SPM\", db = db, polarity = \"positive\")  ## Normalise ST and SM data  #combined.dhb.data <- NormalizeData(combined.dhb.data, assay = \"SPT\") #combined.dhb.data <- NormalizeSMData(combined.dhb.data, assay = \"SPM\")   ## Cluster SM data  #DefaultAssay(combined.dhb.data) <- \"SPM\" #combined.dhb.data <- FindVariableFeatures(combined.dhb.data, verbose = FALSE) # combined.dhb.data <- ScaleData(combined.dhb.data, verbose = FALSE) # combined.dhb.data <- RunPCA(combined.dhb.data, npcs = 30, reduction.name = \"spm.pca\", verbose = FALSE) # combined.dhb.data <- FindNeighbors(combined.dhb.data, dims = 1:30, reduction = \"spm.pca\", verbose = FALSE) # combined.dhb.data <- RunUMAP(combined.dhb.data, dims = 1:30, reduction = \"spm.pca\", reduction.name = \"spm.umap\", verbose = FALSE) # combined.dhb.data <- FindClusters(combined.dhb.data, resolution = 0.5,  cluster.name = \"SM_clusters\", verbose = FALSE)  ## Isolate the Lesioned vs Intact Striatums #combined.dhb.data@meta.data <- combined.dhb.data@meta.data %>%  #                                  dplyr::mutate(striatum =  #                                                  ifelse((SM_clusters %in% c(\"0\")),  #                                                         lesion, \"Other\"))  ## Subset to only lesioned and intact striatum #striatum.dhb.data <- subset(combined.dhb.data, subset = striatum != \"Other\") striatum.dhb.data <- readRDS(url(\"https://zenodo.org/records/17246900/files/striatum.dhb.data.RDS?download=1\"))  SpatialDimPlot(striatum.dhb.data, group.by = \"striatum\",pt.size.factor = 2) ## Run DE analysis for transcriptomics and metabolomics Idents(striatum.dhb.data) <- \"striatum\" deg =  FindAllMarkers(striatum.dhb.data , test.use = \"wilcox_limma\", assay = \"SPT\",only.pos =F) dem =  FindAllMarkers(striatum.dhb.data , assay = \"SPM\", only.pos =F)  DE.list = list(\"genes\" = deg,\"metabolites\" = dem)  ## Run multi-modal pathway analysis regpathway = FindRegionalPathways(   striatum.dhb.data,   analyte_types = c(\"genes\", \"metabolites\"),   SM_slot = \"counts\", ST_slot = \"counts\",   ident = \"striatum\",   DE.list = DE.list ) selected_pathways = c(   \"Dopamine beta-hydroxylase deficiency\",   \"Tryptophan metabolism\",   \"Dopamine metabolism\",   \"sphingolipid metabolism pathway\",   \"Sphingolipid metabolism: integrated pathway\",   \"Spermidine and Spermine Biosynthesis\",   \"Pyruvate metabolism\",   \"Fatty acid metabolism\" )  PlotRegionalPathways(regpathway = regpathway,selected_pathways = selected_pathways) PathwayNetworkPlots(striatum.dhb.data,ident = \"striatum\", regpathway =  regpathway, DE.list = list(\"genes\" = deg, \"metabolites\" = dem), selected_pathways = selected_pathways, path = \"vignette_data_files/Mouse_Brain/DHB_data\") Assuming DE.list[1] contains genes results ....  Assuming DE.list[2] contains metabolites results ....      Query necessary data and establish pathway database Query db for addtional matching Constructing DE dataframes....  File successfully written to vignette_data_files/Mouse_Brain/DHB_data/striatum_2024_10_22_12_23_05_AEST.html SpatialMZPlot(striatum.dhb.data, mz= 400.14659,plusminus = 0.05, assay = \"SPM\", pt.size.factor = 2.5, slot = \"data\") + theme(legend.position = \"right\") ## Get key mz values from network plot mzs <- c(215.015, 321.08627, 400.14659)  mzs <- unlist(lapply(mzs, function(x){ FindNearestMZ(striatum.dhb.data, target_mz = x, assay = \"SPM\")}))  striatum.dhb.data <- BinMetabolites(striatum.dhb.data, mzs, slot = \"data\", bin_name = \"Dopamine_pathway\", assay = \"SPM\") SpatialFeaturePlot(striatum.dhb.data, features = \"Dopamine_pathway\", pt.size.factor = 2.5) & theme(legend.position = \"right\")"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/articles/Multi-Omic_Mouse_Brain.html","id":"geseca-based-pathway-analysis","dir":"Articles","previous_headings":"Multi-Omics Mouse Brain Vignette > Multi-Modality Pathway Analysis","what":"GESECA-Based Pathway Analysis","title":"SpaMTP: Spatial Multi-Omics Analysis","text":"alternative method pathway analysis using RunRAMPgeseca function. function based gene set co-regulation analysis tool originally implemented spatial transcriptomic analysis. Breifly, function take expression matrix, rows columns correspond m/z pixels respectively, list metabolite pathway sets. different FishersPathwayAnalysis FindRegionalPathways functions based list/ranked list metabolites, instead uses intensity values metabolites regardless wether significantly differentially expressed. process involves steps: Generate SpaMTP Seurat Object assay features renaimed RAMP_ID names Running reverse PCA newly generate matrix calculate dimentionality reduced expression matrix (E). Run RunRAMPgeseca calculate significantly regulated pathways. First run approach ST SM data individually. Lets start ST data: can visualise top 6 significant pathways: Lets plot :  can see pathways share similar expression, particularly low levels corpus callosum. Lets SM data: can see top pathways based metabolic data different transcriptomic analysis. case Parkinson’s mouse brain dataset, interested pathways related dopamine. Lets compare expression pathways based metabolic transcriptomic data: pathways significant two modalities. can also spatially visualise pathways, lets pick 3 view:   clear differences two modalities, likely due incomplete feature lists pathway using one modality. solve can run multi-modal pathway analysis using data generated . can see 7 selected pathways associated dopamine display significantly co-regulation regions across sample. Lets now visualise expression pathways spatially:  Spatially pathways show differential expression lesioned intact striatum regions.","code":"## Generate pathway assay from ST data only integrated.data <-CreatePathwayAssay(integrated.data, analyte_type = \"genes\", assay = \"SPT\", new_assay = \"SPT_pathway\")  ## Format the new pathway assay correctly for running PCA DefaultAssay(integrated.data) <- \"SPT_pathway\" integrated.data <- NormalizeData(integrated.data) integrated.data <- ScaleData(integrated.data) integrated.data <- FindVariableFeatures(integrated.data, nfeatures = 3000)  ## Calculate reverse PCA integrated.data <- RunPCA(integrated.data, assay = \"SPT_pathway\", verbose = FALSE,                           rev.pca = TRUE, reduction.name = \"pca.rev.ST\",                           reduction.key=\"PCRt_\", npcs = 50)  ## Extract the feature loadings as our expression matrix  E <- integrated.data@reductions$pca.rev.ST@feature.loadings  ## Run geseca-based pathway analysis ST_results <- RunRAMPgeseca(E, minSize = 3, maxSize = 500, center = FALSE) head(ST_results) ## Get top 6 pathways topPathways <- ST_results[, pathway] |> head(6)  ## Plot top 6 pathways  plots <- PlotPathwaysSpatially(topPathways, integrated.data, images = c(\"slice1\"), assay = \"SPT_pathway\", image.alpha = 0, pt.size.factor = 2.5)  ## Arrange plots on the same pannel wrap_plots(plots, ncol = 3) ## Generate pathway assay from SM data only integrated.data <-CreatePathwayAssay(integrated.data, analyte_type = \"metabolites\", assay = \"SPM\", new_assay = \"SPM_pathway\")  ## Format the new pathway assay correctly for running PCA DefaultAssay(integrated.data) <- \"SPM_pathway\" integrated.data <- NormalizeData(integrated.data) integrated.data <- ScaleData(integrated.data) integrated.data <- FindVariableFeatures(integrated.data, nfeatures = 3000)  ## Calculate reverse PCA integrated.data <- RunPCA(integrated.data, assay = \"SPM_pathway\", verbose = FALSE,                           rev.pca = TRUE, reduction.name = \"pca.rev.SM\",                           reduction.key=\"PCRm_\", npcs = 50)  ## Extract the feature loadings as our expression matrix  E <- integrated.data@reductions$pca.rev.SM@feature.loadings  ## Run geseca-based pathway analysis SM_results <- RunRAMPgeseca(E, minSize = 3, maxSize = 500, center = FALSE) head(SM_results) ## Select pathways of interest selected_pathways <- c(\"Parkinson's disease pathway\", \"Parkinson disease\", \"Dopamine beta-hydroxylase deficiency\", \"Dopaminergic synapse\",\"Dopamine metabolism\", \"Dopamine Activation of Neurological Reward System\", \"Dopamine Neurotransmitter Release Cycle\")  ST_results[ST_results$pathway %in% selected_pathways,] SM_results[SM_results$pathway %in% selected_pathways,] key_pathways <- c(\"Parkinson disease\", \"Dopamine beta-hydroxylase deficiency\", \"Dopamine metabolism\")  p1 <- PlotPathwaysSpatially(key_pathways, integrated.data, images = c(\"slice1\"), assay = \"SPT_pathway\", image.alpha = 0, pt.size.factor = 2.5) p2 <- PlotPathwaysSpatially(key_pathways, integrated.data, images = c(\"slice1\"), assay = \"SPM_pathway\", image.alpha = 0, pt.size.factor = 2.5)  wrap_plots(p1, ncol = 3)+plot_annotation(title = \"ST Pathways\") wrap_plots(p2, ncol = 3)+plot_annotation(title = \"SM Pathways\") ## Generate pathway assay from merging SM and ST pathway expression matricies  integrated.data <- CreateMergedModalityAssay(integrated.data, assays.to.merge = c(\"SPT_pathway\",\"SPM_pathway\"))  ## Format the new pathway assay correctly for running PCA DefaultAssay(integrated.data) <- \"merged\" VariableFeatures(integrated.data) <- rownames(integrated.data@assays$merged) # To ensure features from both modalities are included  ## Calculate reverse PCA integrated.data <- RunPCA(integrated.data, assay = \"merged\", verbose = FALSE,                           rev.pca = TRUE, reduction.name = \"pca.rev.merged\",                           reduction.key=\"PCRmerged_\", npcs = 50)  ## Extract the feature loadings as our expression matrix  E <- integrated.data@reductions$pca.rev.merged@feature.loadings  ## Run geseca-based pathway analysis multiomic_results <- RunRAMPgeseca(E, minSize = 3, maxSize = 500, center = FALSE) multiomic_results[multiomic_results$pathway %in% selected_pathways,] #key_pathways <- c(\"Parkinson disease\", \"Dopamine beta-hydroxylase deficiency\", \"Dopamine metabolism\")  p1 <- PlotPathwaysSpatially(selected_pathways, integrated.data, images = c(\"slice1\"), assay = \"merged\", image.alpha = 0, pt.size.factor = 2.5)  wrap_plots(p1, ncol = 3) sessionInfo() ## R version 4.4.1 (2024-06-14) ## Platform: aarch64-apple-darwin20 ## Running under: macOS 15.5 ##  ## Matrix products: default ## BLAS:   /Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/lib/libRblas.0.dylib  ## LAPACK: /Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/lib/libRlapack.dylib;  LAPACK version 3.12.0 ##  ## locale: ## [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8 ##  ## time zone: Europe/Dublin ## tzcode source: internal ##  ## attached base packages: ## [1] stats4    stats     graphics  grDevices utils     datasets  methods   ## [8] base      ##  ## other attached packages: ##  [1] future_1.67.0          patchwork_1.3.2        mclust_6.1.1           ##  [4] EnhancedVolcano_1.24.0 ggrepel_0.9.6          ggplot2_4.0.0          ##  [7] dplyr_1.1.4            Seurat_5.3.0           SeuratObject_5.2.0     ## [10] sp_2.2-0               Cardinal_3.8.3         S4Vectors_0.44.0       ## [13] ProtGenerics_1.38.0    BiocGenerics_0.52.0    BiocParallel_1.40.2    ## [16] SpaMTP_1.1.0           ##  ## loaded via a namespace (and not attached): ##   [1] fs_1.6.6                    matrixStats_1.5.0           ##   [3] spatstat.sparse_3.1-0       bitops_1.0-9                ##   [5] sf_1.0-21                   EBImage_4.48.0              ##   [7] httr_1.4.7                  RColorBrewer_1.1-3          ##   [9] tools_4.4.1                 sctransform_0.4.2           ##  [11] R6_2.6.1                    lazyeval_0.2.2              ##  [13] uwot_0.2.3                  withr_3.0.2                 ##  [15] gridExtra_2.3               progressr_0.16.0            ##  [17] cli_3.6.5                   Biobase_2.66.0              ##  [19] textshaping_1.0.3           spatstat.explore_3.5-3      ##  [21] fastDummies_1.7.5           shinyjs_2.1.0               ##  [23] labeling_0.4.3              sass_0.4.10                 ##  [25] S7_0.2.0                    spatstat.data_3.1-8         ##  [27] proxy_0.4-27                ggridges_0.5.7              ##  [29] pbapply_1.7-4               pkgdown_2.1.3               ##  [31] systemfonts_1.2.3           svglite_2.2.1               ##  [33] scater_1.34.1               parallelly_1.45.1           ##  [35] CardinalIO_1.4.0            limma_3.62.2                ##  [37] rstudioapi_0.17.1           FNN_1.1.4.1                 ##  [39] generics_0.1.4              ica_1.0-3                   ##  [41] spatstat.random_3.4-2       crosstalk_1.2.2             ##  [43] Matrix_1.7-4                ggbeeswarm_0.7.2            ##  [45] abind_1.4-8                 lifecycle_1.0.4             ##  [47] yaml_2.3.10                 edgeR_4.4.2                 ##  [49] SummarizedExperiment_1.36.0 SparseArray_1.6.2           ##  [51] Rtsne_0.17                  grid_4.4.1                  ##  [53] promises_1.3.3              crayon_1.5.3                ##  [55] miniUI_0.1.2                lattice_0.22-7              ##  [57] beachmat_2.22.0             cowplot_1.2.0               ##  [59] zeallot_0.2.0               pillar_1.11.1               ##  [61] knitr_1.50                  fgsea_1.32.4                ##  [63] GenomicRanges_1.58.0        future.apply_1.20.0         ##  [65] codetools_0.2-20            fastmatch_1.1-6             ##  [67] glue_1.8.0                  spatstat.univar_3.1-4       ##  [69] data.table_1.17.8           vctrs_0.6.5                 ##  [71] png_0.1-8                   spam_2.11-1                 ##  [73] gtable_0.3.6                cachem_1.1.0                ##  [75] xfun_0.53                   S4Arrays_1.6.0              ##  [77] mime_0.13                   survival_3.8-3              ##  [79] SingleCellExperiment_1.28.1 units_0.8-7                 ##  [81] statmod_1.5.0               fitdistrplus_1.2-4          ##  [83] ROCR_1.0-11                 nlme_3.1-168                ##  [85] matter_2.8.0                RcppAnnoy_0.0.22            ##  [87] GenomeInfoDb_1.42.3         bslib_0.9.0                 ##  [89] irlba_2.3.5.1               vipor_0.4.7                 ##  [91] KernSmooth_2.23-26          DBI_1.2.3                   ##  [93] tidyselect_1.2.1            compiler_4.4.1              ##  [95] ontologyIndex_2.12          BiocNeighbors_2.0.1         ##  [97] xml2_1.4.0                  desc_1.4.3                  ##  [99] ggdendro_0.2.0              DelayedArray_0.32.0         ## [101] plotly_4.11.0               scales_1.4.0                ## [103] classInt_0.4-11             lmtest_0.9-40               ## [105] tiff_0.1-12                 stringr_1.5.2               ## [107] digest_0.6.37               goftest_1.2-3               ## [109] fftwtools_0.9-11            spatstat.utils_3.2-0        ## [111] rmarkdown_2.29              XVector_0.46.0              ## [113] htmltools_0.5.8.1           pkgconfig_2.0.3             ## [115] jpeg_0.1-11                 MatrixGenerics_1.18.1       ## [117] fastmap_1.2.0               rlang_1.1.6                 ## [119] htmlwidgets_1.6.4           UCSC.utils_1.2.0            ## [121] shiny_1.11.1                farver_2.1.2                ## [123] jquerylib_0.1.4             zoo_1.8-14                  ## [125] jsonlite_2.0.0              BiocSingular_1.22.0         ## [127] RCurl_1.98-1.17             magrittr_2.0.4              ## [129] kableExtra_1.4.0            scuttle_1.16.0              ## [131] GenomeInfoDbData_1.2.13     dotCall64_1.2               ## [133] Rcpp_1.1.0                  ggnewscale_0.5.2            ## [135] viridis_0.6.5               reticulate_1.43.0           ## [137] stringi_1.8.7               zlibbioc_1.52.0             ## [139] MASS_7.3-65                 plyr_1.8.9                  ## [141] parallel_4.4.1              listenv_0.9.1               ## [143] deldir_2.0-4                splines_4.4.1               ## [145] tensor_1.5.1                locfit_1.5-9.12             ## [147] igraph_2.1.4                spatstat.geom_3.6-0         ## [149] RcppHNSW_0.6.0              reshape2_1.4.4              ## [151] ScaledMatrix_1.14.0         evaluate_1.0.5              ## [153] httpuv_1.6.16               RANN_2.6.2                  ## [155] tidyr_1.3.1                 purrr_1.1.0                 ## [157] polyclip_1.10-7             scattermore_1.2             ## [159] rsvd_1.0.5                  xtable_1.8-4                ## [161] e1071_1.7-16                RSpectra_0.16-2             ## [163] later_1.4.4                 viridisLite_0.4.2           ## [165] class_7.3-23                ragg_1.5.0                  ## [167] tibble_3.3.0                beeswarm_0.4.0              ## [169] IRanges_2.40.1              cluster_2.1.8.1             ## [171] globals_0.18.0"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/articles/Single_Cell_MultiOmics.html","id":"load-processed-data","dir":"Articles","previous_headings":"","what":"Load Processed Data","title":"SpaMTP: Simulated Single Cell Multi-Omics Analysis","text":", using simulated data synthetic clustering cell type names. gene metabolite names also arbitrary, data used highlight SpaMTP’s functionally single cell spatial datasets.","code":"xenium <- readRDS(url(\"https://zenodo.org/records/17247007/files/Sim_Xenium.RDS?download=1\")) MALDI <- readRDS(url(\"https://zenodo.org/records/17247007/files/Sim_MALDI.RDS?download=1\"))  MALDI <- UpdateSeuratObject(MALDI) # Only Required if SeuratObjects => 5.0.2"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/articles/Single_Cell_MultiOmics.html","id":"visualising-simulated-datasets","dir":"Articles","previous_headings":"","what":"Visualising Simulated Datasets","title":"SpaMTP: Simulated Single Cell Multi-Omics Analysis","text":"can visualise simulated datasets observe difference resolution single cell ST lower resolution SM data. First, lets look Xenium data:  Now, lets look MALDI data:  Based plots, can see Xenium data much higher resolution, compared MALDI data. can zoom see detail: Lets visualise zoomed area now: Looking zoomed FOV single cell resolution ST provides much higher levels detail compared SM data.","code":"ImageDimPlot(xenium, group.by = \"celltype\", size = 1) ImageDimPlot(MALDI, group.by = \"clusters\", size = 1) # Futures may be required to use Seurat's `Crop()` function  library(future) #>  #> Attaching package: 'future' #> The following objects are masked from 'package:Cardinal': #>  #>     reset, run plan(\"multicore\", workers = 16) # Use all 16 cores #> Warning in supportsMulticoreAndRStudio(...): [ONE-TIME WARNING] Forked #> processing ('multicore') is not supported when running R from RStudio because #> it is considered unstable. For more details, how to control forked processing #> or not, and how to silence this warning in future R sessions, see #> ?parallelly::supportsMulticore  # Each core can have up to 16 GB of memory (16 GB / 16 cores) options(future.globals.maxSize = 16000 * 1024^2) # 16 GB per core # Generate a smaller FOV to look at a zoomed in region of the ST data cropped.coords.xenium <- Crop(xenium[[\"segmentations\"]], y = c(2000, 3000), x = c(8500, 9500), coords = \"tissue\") xenium[[\"zoom\"]] <- cropped.coords.xenium  # Generate a smaller FOV to look at a zoomed in region of the SM data cropped.coords.MALDI <- Crop(MALDI[[\"fov\"]], y = c(2000, 3000), x = c(8500, 9500), coords = \"tissue\") MALDI[[\"zoom\"]] <- cropped.coords.MALDI # Set the boundary as segmentation for our Xenium data DefaultBoundary(xenium[[\"zoom\"]]) <- \"segmentation\"  ImageDimPlot(xenium, group.by = \"celltype\", fov = \"zoom\", size = 1)| ImageDimPlot(MALDI, group.by = \"clusters\", fov = \"zoom\", size = 2)"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/articles/Single_Cell_MultiOmics.html","id":"mapping-single-cell-resolution-st-and-sm","dir":"Articles","previous_headings":"","what":"Mapping Single Cell Resolution ST and SM","title":"SpaMTP: Simulated Single Cell Multi-Omics Analysis","text":"want eventually map SM data single cell resolution ST data, meaning single cell transcriptomic metabolic information. First, can check alignment datasets.  Based , can see datasets aligned correctly. Next, map SM Xenium ST data generate SpaMTP Seurat object containing metabolite transcriptomic information per individual cell. two datasets aligned individual cell. Lets visualise results: multi-omic SpaMTP Seurat object now contains two assays, ‘SPT’ ‘SPM’ stores transcriptomic metabolomic data respectively. object also combined metadata original objects. metadata associated original SM object marked “_SPM”. Next, can compare data spatially:  Comparing mapped data original SM data can see spatial pattern clusters metabolite (‘mz-100’) match. Now data mapped single cell resolution much detailed visualisation SM based clustering across simulated tissue sample. SM data indicates metabolic functioning cell, based can identify cell types different metabolic states: Looking Oligodendrocytes example, can identify different subtypes based metabolic activity.  dotplot may suggest Oligo State 1 2 different cell subtypes based differential expression gene1/gene2 mz-200 (Note: synthetic data biological context - results used example). additional features multi-omic data mapped coordinates can visualise expression metabolites gene expression single plot. Analysing spatial plot, clear correlation ‘mz-100’ ‘gene1’ suggesting interaction similar functionality.","code":"# Set the boundary as segmentation for our Xenium data CheckAlignment(ST.data = xenium, SM.data = MALDI, image.slice = \"fov\",size = 0.05) & coord_flip() # Set the boundary as segmentation for our Xenium data MO_data <- MapSpatialOmics(SM.data = MALDI, ST.data = xenium, ST.hires = TRUE, SM.assay = \"Spatial\",ST.assay = \"Xenium\", SM.fov = \"fov\", ST.image = \"centroids\") MO_data #> An object of class Seurat  #> 8 features across 15448 samples within 2 assays  #> Active assay: SPT (4 features, 0 variable features) #>  1 layer present: counts #>  1 other assay present: SPM #>  3 spatial fields of view present: centroids segmentations zoom head(MO_data, n = 3) # Set the boundary as segmentation for our Xenium data DefaultBoundary(MO_data[[\"zoom\"]]) <- \"segmentation\"  p1 <- ImageDimPlot(MALDI, group.by = \"clusters\", fov = \"zoom\", size = 1.5, dark.background = F)/ ImageDimPlot(MO_data, group.by = \"clusters_SPM\", fov = \"zoom\", dark.background = F) p2 <- ImageFeaturePlot(MALDI, features = \"mz-100\", fov = \"zoom\", size = 1.5, dark.background = F)/ ImageFeaturePlot(MO_data, features = \"mz-100\", fov = \"zoom\", dark.background = F)  p1|p2 table(MO_data$clusters_SPM, MO_data$celltype) #>     #>     Astrocyte Microglia Oligodendrocyte Proliferation #>   2      3551        63             596          3472 #>   3       232         2              26          2329 #>   1      2743        34            1677           560 #>   4         8         0               1            14 #>   0         2         0               1           137 MO_data$Oligo_states <- ifelse(MO_data$celltype == \"Oligodendrocyte\", paste0(\"Oligo State: \", MO_data$clusters_SPM),  \"Other\")  ImageDimPlot(MO_data, group.by = \"Oligo_states\", fov = \"zoom\", dark.background = F, cols = c(\"grey\", \"red\", \"blue\", \"yellow\", \"green\", \"pink\")) DotPlot(MO_data, group.by = \"Oligo_states\", features = c(rownames(MO_data[[\"SPT\"]]), \"spm_mz-200\")) ImageFeaturePlot(MO_data, features = \"mz-200\", molecules = c(\"gene1\", \"gene2\"), fov = \"zoom\", mols.cols = c(\"blue\", \"green\"))"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/articles/Single_Cell_MultiOmics.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session Info","title":"SpaMTP: Simulated Single Cell Multi-Omics Analysis","text":"","code":"sessionInfo() #> R version 4.4.1 (2024-06-14) #> Platform: aarch64-apple-darwin20 #> Running under: macOS 15.5 #>  #> Matrix products: default #> BLAS:   /Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/lib/libRblas.0.dylib  #> LAPACK: /Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/lib/libRlapack.dylib;  LAPACK version 3.12.0 #>  #> locale: #> [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8 #>  #> time zone: Europe/Dublin #> tzcode source: internal #>  #> attached base packages: #> [1] stats4    stats     graphics  grDevices utils     datasets  methods   #> [8] base      #>  #> other attached packages: #>  [1] future_1.67.0       ggplot2_4.0.0       dplyr_1.1.4         #>  [4] Seurat_5.3.0        SeuratObject_5.2.0  sp_2.2-0            #>  [7] Cardinal_3.8.3      S4Vectors_0.44.0    ProtGenerics_1.38.0 #> [10] BiocGenerics_0.52.0 BiocParallel_1.40.2 SpaMTP_1.1.0        #>  #> loaded via a namespace (and not attached): #>   [1] RColorBrewer_1.1-3     rstudioapi_0.17.1      jsonlite_2.0.0         #>   [4] magrittr_2.0.4         spatstat.utils_3.2-0   farver_2.1.2           #>   [7] rmarkdown_2.29         fs_1.6.6               ragg_1.5.0             #>  [10] vctrs_0.6.5            ROCR_1.0-11            spatstat.explore_3.5-3 #>  [13] RCurl_1.98-1.17        htmltools_0.5.8.1      sass_0.4.10            #>  [16] sctransform_0.4.2      parallelly_1.45.1      KernSmooth_2.23-26     #>  [19] bslib_0.9.0            htmlwidgets_1.6.4      desc_1.4.3             #>  [22] ica_1.0-3              plyr_1.8.9             plotly_4.11.0          #>  [25] zoo_1.8-14             cachem_1.1.0           igraph_2.1.4           #>  [28] mime_0.13              lifecycle_1.0.4        pkgconfig_2.0.3        #>  [31] Matrix_1.7-4           R6_2.6.1               fastmap_1.2.0          #>  [34] fitdistrplus_1.2-4     shiny_1.11.1           digest_0.6.37          #>  [37] patchwork_1.3.2        tensor_1.5.1           RSpectra_0.16-2        #>  [40] irlba_2.3.5.1          textshaping_1.0.3      labeling_0.4.3         #>  [43] progressr_0.16.0       spatstat.sparse_3.1-0  httr_1.4.7             #>  [46] polyclip_1.10-7        abind_1.4-8            compiler_4.4.1         #>  [49] proxy_0.4-27           withr_3.0.2            S7_0.2.0               #>  [52] tiff_0.1-12            DBI_1.2.3              fastDummies_1.7.5      #>  [55] MASS_7.3-65            classInt_0.4-11        units_0.8-7            #>  [58] tools_4.4.1            lmtest_0.9-40          httpuv_1.6.16          #>  [61] future.apply_1.20.0    goftest_1.2-3          glue_1.8.0             #>  [64] nlme_3.1-168           EBImage_4.48.0         promises_1.3.3         #>  [67] sf_1.0-21              grid_4.4.1             Rtsne_0.17             #>  [70] cluster_2.1.8.1        reshape2_1.4.4         generics_0.1.4         #>  [73] gtable_0.3.6           spatstat.data_3.1-8    class_7.3-23           #>  [76] tidyr_1.3.1            data.table_1.17.8      xml2_1.4.0             #>  [79] spatstat.geom_3.6-0    RcppAnnoy_0.0.22       ggrepel_0.9.6          #>  [82] RANN_2.6.2             pillar_1.11.1          stringr_1.5.2          #>  [85] spam_2.11-1            RcppHNSW_0.6.0         limma_3.62.2           #>  [88] later_1.4.4            splines_4.4.1          lattice_0.22-7         #>  [91] survival_3.8-3         deldir_2.0-4           tidyselect_1.2.1       #>  [94] CardinalIO_1.4.0       locfit_1.5-9.12        miniUI_0.1.2           #>  [97] pbapply_1.7-4          knitr_1.50             gridExtra_2.3          #> [100] matter_2.8.0           svglite_2.2.1          scattermore_1.2        #> [103] xfun_0.53              Biobase_2.66.0         statmod_1.5.0          #> [106] matrixStats_1.5.0      fftwtools_0.9-11       stringi_1.8.7          #> [109] lazyeval_0.2.2         yaml_2.3.10            kableExtra_1.4.0       #> [112] evaluate_1.0.5         codetools_0.2-20       tibble_3.3.0           #> [115] cli_3.6.5              ontologyIndex_2.12     uwot_0.2.3             #> [118] xtable_1.8-4           reticulate_1.43.0      systemfonts_1.2.3      #> [121] jquerylib_0.1.4        Rcpp_1.1.0             globals_0.18.0         #> [124] spatstat.random_3.4-2  zeallot_0.2.0          png_0.1-8              #> [127] spatstat.univar_3.1-4  parallel_4.4.1         pkgdown_2.1.3          #> [130] dotCall64_1.2          jpeg_0.1-11            bitops_1.0-9           #> [133] listenv_0.9.1          viridisLite_0.4.2      e1071_1.7-16           #> [136] scales_1.4.0           ggridges_0.5.7         purrr_1.1.0            #> [139] rlang_1.1.6            cowplot_1.2.0          shinyjs_2.1.0"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/articles/SpaMTP.html","id":"useful-spamtp-vignettes","dir":"Articles","previous_headings":"","what":"Useful SpaMTP Vignettes","title":"Getting Started","text":"general introduction importing data, annotating metabolites running key analysis pipelines spatial metabolomic data, suggest starting Spatial Metabolomic Analysis Tutorial. vignette uses mouse bladder data demonstrates perform general tasks plotting, subsetting, manipulating SpaMTP Seurat objects. paired multi-modal datasets, suggest working Multi-Modal Integration Tutorial. , provide methods align two datasets coordinates, map spatial metabolomic pixels spatial transcriptomic spots run various analysis using integrated data.","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/articles/SpaMTP.html","id":"spamtp-public-datasets","dir":"Articles","previous_headings":"","what":"SpaMTP Public Datasets","title":"Getting Started","text":"access download datasets used vignettes can vist SpaMTP zenodo page.","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/articles/SpaMTP.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Getting Started","text":"can install current version SpaMTP GitHub :","code":"if (!require(\"devtools\", quietly = TRUE))     install.packages(\"devtools\")  devtools::install_github(\"GenomicsMachineLearning/SpaMTP\")"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/articles/SpaMTP.html","id":"installing-with-apptainer","dir":"Articles","previous_headings":"Installation","what":"Installing with Apptainer","title":"Getting Started","text":"download image: Verify download correctly: create Apptainer image scratch (need environment-linux.yml, dependencies.R spamtp.def files):","code":"wget -c https://downloads.gmllab.com/SpaMTP/spamtp-1.1.sif wget -q -O - https://downloads.gmllab.com/SpaMTP/spamtp-1.1.sif.md5 | md5sum -c - apptainer build spamtp.sif spamtp.def"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/articles/SpaMTP.html","id":"installing-with-conda-environment","dir":"Articles","previous_headings":"Installation","what":"Installing with conda environment","title":"Getting Started","text":"example set SpaMTP using conda environment: Within SpaMTP environment open R install SpaMTP.","code":"conda create -n SpaMTP -c conda-forge r-base=4.3.3 r-essentials r-devtools r-cairo python=3.9 r-reticulate r-leiden r-imager r-magick r-hdf5r r-sf bioconda::bioconductor-ebimage bioconda::bioconductor-scater bioconda::bioconductor-dropletutils bioconda::bioconductor-fgsea bioconda::bioconductor-rgoslin bioconda::bioconductor-glmgampoi conda activate SpaMTP #Install Seurat version 5.3.0 remotes::install_github(\"satijalab/seurat\", \"seurat5\", quiet = FALSE)  #Install Cardinal if (!require(\"BiocManager\", quietly = TRUE))     install.packages(\"BiocManager\") BiocManager::install(\"Cardinal\")  #Install SpaMTP devtools::install_github(\"GenomicsMachineLearning/SpaMTP\")"},{"path":[]},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/articles/SpaMTP.html","id":"cairo-failed-to-install","dir":"Articles","previous_headings":"Installation > Possible Installiation Errors","what":"Cairo Failed to Install","title":"Getting Started","text":"Check libraries exist: resolve issues. Rerun:","code":"checking if R was compiled with the RConn patch... no checking for cairo.h... no configure: error: Cannot find cairo.h! Please install cairo (http://www.cairographics.org/) and/or set CAIRO_CFLAGS/LIBS correspondingly. ERROR: configuration failed for package ‘Cairo’ conda install conda-forge::r-cairo BiocManager::install(\"scater\")"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/articles/SpaMTP.html","id":"cardinal-failed-to-install","dir":"Articles","previous_headings":"Installation > Possible Installiation Errors","what":"Cardinal Failed to Install","title":"Getting Started","text":"EBImage failed installed, likely due issue installation fftwtools. Try: Else try: Try R: none methods resolve instiallation issues, install Cardinal directly conda:","code":"ERROR: dependency ‘EBImage’ is not available for package ‘Cardinal’  BiocManager::install(\"EBImage\")  fftwtools.c:28:9: fatal error: fftw3.h: No such file or directory    28 | #include<fftw3.h>       |         ^~~~~~~~~ conda config --add channels conda-forge conda config --set channel_priority strict  conda install r-fftwtools conda install bioconda::r-fftwtools conda install conda-forge::fftw if (!require(\"BiocManager\", quietly = TRUE)) #Check if BiocManager is installed     install.packages(\"BiocManager\")  BiocManager::install(\"fftwtools\") conda install bioconda::bioconductor-cardinal"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/articles/SpaMTP.html","id":"rgoslin-failed-to-install","dir":"Articles","previous_headings":"Installation > Possible Installiation Errors","what":"rgoslin Failed to Install","title":"Getting Started","text":"rgoslin fails install please head github. Alternative, can try installing BiocManager mamba shown : ","code":"BiocManager::install(\"rgoslin\") mamba install bioconductor-rgoslin"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/articles/SpaMTP.html","id":"matrix-version-incompatible-with-seurat","dir":"Articles","previous_headings":"Installation > Possible Installiation Errors","what":"Matrix version incompatible with Seurat","title":"Getting Started","text":"Matrix package version installed compatible Seurat try installing different version re-installing Seurat issue please flag github Issues.","code":"#Install Correct version of Matrix package remotes::install_version(\"Matrix\", version = \"1.6-4\", repos = \"https://cran.r-project.org\")  #Install Seurat version 5.1.0 install.packages(\"Seruat\")"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/articles/SpaMTP_Additional_Features.html","id":"section-load-processed-data","dir":"Articles","previous_headings":"","what":"Load Processed Data","title":"SpaMTP: Additional Analysis Features","text":", using already processed, clustered (via spatially-aware Shrunken Centroid) annotated data. information data processed, please visit .","code":"bladder_annotated <- readRDS(url(\"https://zenodo.org/records/17246684/files/bladder_annotated.RDS?download=1\"))  bladder_annotated <- UpdateSeuratObject(bladder_annotated) # Only Required if SeuratObjects => 5.0.2"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/articles/SpaMTP_Additional_Features.html","id":"section-querying-an-spamtp-dataset","dir":"Articles","previous_headings":"","what":"Querying an SpaMTP Dataset","title":"SpaMTP: Additional Analysis Features","text":"SpaMTP stores relative m/z value annotations objects feature metadata slot. can see : However, useful functions lets user search SpaMTP dataset find either exact m/z values metabolite names interested . Lets see works: first FindNearestMZ(), function lets users find m/z value dataset closest value queried. useful metabolite interest known m/z mass, user wants use Seurat’s feature plotting functions.  second SearchAnnotations(), function lets users query metabolite find present within dataset. search.exact parameter specifies whether needs exact match metabolite name. set FALSE, users can find metabolites similar names. example, want see different types (3'-sulfo)Galbeta-Cer lipids dataset. function also lets users select feature metadata column want query. example, RefineLipis() run, users can search lipids Class “GlcCer”.","code":"head(bladder_annotated@assays$Spatial@meta.data) FindNearestMZ(bladder_annotated, 741.5) ## [1] \"mz-741.530578613281\" SearchAnnotations(bladder_annotated, metabolite = \"Isorhamnetin 3-(6''-malonylglucoside)\", search.exact = TRUE) SearchAnnotations(bladder_annotated, metabolite = \"(3'-sulfo)Galbeta-Cer\", search.exact = FALSE) SearchAnnotations(bladder_annotated, metabolite = \"GlcCer\", search.exact = FALSE, column.name = \"Lipid.Maps.Main.Class\")"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/articles/SpaMTP_Additional_Features.html","id":"section-subsetting-a-spamtp-dataset-by-metabolites","dir":"Articles","previous_headings":"","what":"Subsetting a SpaMTP Dataset by Metabolites","title":"SpaMTP: Additional Analysis Features","text":"cases, may want reduce number features present dataset. Often thousands millions metabolites one dataset, removing unwanted metabolites can often reduce computational load. , demonstrate subset bladder dataset include Glycerophospholipids. now 33 features, compared 79 original dataset.","code":"GPs <- SearchAnnotations(bladder_annotated, metabolite = \"GP\", search.exact = FALSE, column.name = \"Lipid.Maps.Category\")  bladder_GPs <- SubsetMZFeatures(bladder_annotated, features = GPs$mz_names) bladder_annotated ## An object of class Seurat  ## 79 features across 34840 samples within 1 assay  ## Active assay: Spatial (79 features, 0 variable features) ##  1 layer present: counts ##  1 spatial field of view present: fov bladder_GPs ## An object of class Seurat  ## 33 features across 34840 samples within 1 assay  ## Active assay: Spatial (33 features, 0 variable features) ##  1 layer present: counts ##  1 spatial field of view present: fov"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/articles/SpaMTP_Additional_Features.html","id":"section-visualising-sm-data-using-spamtp","dir":"Articles","previous_headings":"","what":"Visualising SM data using SpaMTP","title":"SpaMTP: Additional Analysis Features","text":"important part analysis pipeline generate informative clear visualisations results. SpaMTP range visualisation functions features, step .","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/articles/SpaMTP_Additional_Features.html","id":"section-plotting-a-mz-value","dir":"Articles","previous_headings":"Visualising SM data using SpaMTP","what":"Plotting a m/z Value","title":"SpaMTP: Additional Analysis Features","text":"Plotting SpaMTP builds ggplot2 allowing easy organisation plot manipulation. , plot expression m/z 741.530578613281 using Seurat’s plotting function ImageFeaturePlot(). use ggplot helper functions orientate image correctly.  Comparatively, SpaMTP function ImageMZPlot() provides SM-based functionality, including: Plotting closest m/z value numeric value provided. Plotting combined expression ± mz value ppm Plotting spots either circles (ST) pixels (SM)","code":"ImageFeaturePlot(bladder_annotated, features = \"mz-741.530578613281\", size = 2) & coord_flip() & scale_x_reverse() ImageMZPlot(bladder_annotated, mz = 741.53057, plusminus = 1, size = 1, plot.pixel = TRUE) & coord_flip() & scale_x_reverse()"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/articles/SpaMTP_Additional_Features.html","id":"section-plotting-a-metabolite-name","dir":"Articles","previous_headings":"Visualising SM data using SpaMTP","what":"Plotting a Metabolite Name","title":"SpaMTP: Additional Analysis Features","text":"addition, SpaMTP also function ImageMZAnnotationPlot(), allows users plot spatial expression named metabolites. addition features , function also lets users: Plot specific column feature metadata containing m/z metabolite annotations Combine expression metabolites match specified name (described using plot.exact = FALSE). use “Galbeta-Cer” metabolites example: Lets plot individually:  Lets plot combined:  equivalent functions SpaMTP Seurat objects contain images SpatialMZPlot() SpatialMZAnnotationPlot(). Examples shown .","code":"mb <- (SearchAnnotations(bladder_annotated, metabolite = \"Galbeta-Cer\", search.exact = FALSE))$all_IsomerNames  mb ## [1] \"(3'-sulfo)Galbeta-Cer(d18:1/22:0(2OH))\" ## [2] \"(3'-sulfo)Galbeta-Cer(d18:1/24:0(2OH))\" ImageMZAnnotationPlot(bladder_annotated, metabolites = c(\"(3'-sulfo)Galbeta-Cer(d18:1/22:0(2OH))\", \"(3'-sulfo)Galbeta-Cer(d18:1/24:0(2OH))\"), slot = \"counts\", plot.exact = FALSE, size = 1.5) & coord_flip() & scale_x_reverse() ImageMZAnnotationPlot(bladder_annotated, metabolites = \"Galbeta-Cer\", slot = \"counts\", plot.exact = FALSE, size = 1.5) & coord_flip() &    scale_x_reverse()"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/articles/SpaMTP_Additional_Features.html","id":"section-plotting-mass-intensity-spectra-plots","dir":"Articles","previous_headings":"Visualising SM data using SpaMTP","what":"Plotting Mass Intensity Spectra Plots","title":"SpaMTP: Additional Analysis Features","text":"Often interested different patterns metabolite expression groups clusters. Mass intensity plots can useful displaying overall patters tissue region. SpaMTP provides functionality generate plots also label peaks selected metabolites.  Based plot, can see metabolite “PC(34:1)” annotated plot. plot looks quite crowded though. can either change mass range show specific region spectrum, generate individual plots cluster. show approaches : Change mass range:  Generate individual plots per cluster:  Now can clearly see metabolite highly expressed cluster 6! various additional visualisation techniques 3D Density Kernel plotting various DE pathway analysis plotting functions. can seen either SM data analysis Multi-Omic data analysis vignettes.","code":"ROI <- subset(bladder_annotated, subset = ssc %in% c(\"2\", \"5\", \"6\"))   MassIntensityPlot(ROI, group.by = \"ssc\", label.annotations = TRUE, metabolite.labels = c(\"PC(34:1)\"), annotation.column = \"Species.Name.Simple\",labelAdj = 0,   labelOffset = 1) MassIntensityPlot(ROI, group.by = \"ssc\", mass.range = c(750, 850), label.annotations = TRUE, metabolite.labels = c(\"PC(34:1)\"), annotation.column = \"Species.Name.Simple\",labelAdj = 0, labelOffset = 1) MassIntensityPlot(ROI, split.by  = \"ssc\", label.annotations = TRUE, metabolite.labels = c(\"PC(34:1)\"), annotation.column = \"Species.Name.Simple\",labelAdj = 2, labelOffset = 0,labelCex = 3)"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/articles/SpaMTP_Additional_Features.html","id":"section-binning-metabolites","dir":"Articles","previous_headings":"","what":"Binning Metabolites","title":"SpaMTP: Additional Analysis Features","text":"Expression specific metabolites can sometime difficult detect, however combining expression similar metabolites, patterns can become observable. SpaMTP function BinMetabolites(), lets users specify metabolites want combine expression . values stored @meta.data slot SpaMTP Seurat object can plotted used analysis. , demonstrate bin expression Glycerophospholipids. can see expression values stored @meta.data column “Binnde_GPs”. Now lets plot results:  can see high expression GP’s urothelium adventitia layers bladder. feature especially useful combine metabolites expressed specific condition/cluster (following differential expression analysis).","code":"mzs <- SearchAnnotations(bladder_annotated, metabolite = \"GP\", search.exact = FALSE, column.name = \"Lipid.Maps.Category\")$mz_names  bladder_annotated <- BinMetabolites(bladder_annotated, mzs = mzs, assay = \"Spatial\", slot = \"counts\", bin_name = \"Binned_GPs\")  head(bladder_annotated@meta.data) ImageFeaturePlot(bladder_annotated, features = \"Binned_GPs\", size = 2) & coord_flip() & scale_x_reverse() & scale_fill_gradientn(colors = viridis::viridis(100))"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/articles/SpaMTP_Additional_Features.html","id":"section-adding-he-image-to-spatial-metabolomic-data","dir":"Articles","previous_headings":"","what":"Adding H&E Image to Spatial Metabolomic Data","title":"SpaMTP: Additional Analysis Features","text":"One useful feature SpaMPT ability add H&E tissue image SpaMTP object. can allow user visualise key structural metabolic patterns match tissue morphology. , demonstrate manually align image SM dataset. function activate interactive window can change MSI coordinates align image provided. includes rotating, adjusting x y coordinates, flipping around x y axis, also scaling. user can also select column object’s metadata plot. can help assist alignment process, particular using clustering results. example alignment GUI looks like, also perimeters used align H&E image:  clicking return aligned data button SpaMTP Seurat object H&E image added @image$slice1 slot returned. “fov” original SM plotting coordinates “slice1” adjusted coordinates match H&E image. Lets now visualise :  also means can now visualise data using Plot3D() function H&E image: function designed plotting two features simultaneously. want visualise one features, can use work around show single trace, trace 1 = feature1, trace 2 = feature2 trace 3 = image. , just provide one feature plot. stop one feature replicated, can add additional line code shown :","code":"bladder_HE <- AddSMImage(\"./mouse_urinary_bladder_HE.tif\", bladder_annotated, msi.pixel.multiplier = 2) bladder_HE@images ## $fov ## Spatial coordinates for 34840 cells ## Default segmentation boundary: centroids  ## Associated assay: Spatial  ## Key: Spatial_  ##  ## $slice1 ## Spatial coordinates for 34840 cells ## Default segmentation boundary: centroids  ## Associated assay: Spatial  ## Key: slice_ (ImageDimPlot(bladder_HE, group.by = \"ssc\", fov = \"fov\", size = 1) & scale_y_reverse() )/    (SpatialDimPlot(bladder_HE, group.by = \"ssc\", images = \"slice1\", pt.size.factor = 3) &theme_void()) ### Identified the m/z values that are to be plot mzs <- unlist(lapply(c(798.5411, 741.5306), function(x) FindNearestMZ(data = bladder_annotated, target_mz = x))) ROI_HE <- subset(bladder_HE, subset = ssc %in% c(\"2\", \"5\", \"6\")) Plot3DFeature(ROI_HE, features = mzs, show.image = \"slice1\", assays = \"Spatial\", between.layer.height = 300, names = c(\"PC(34:1)\",\"SM(34:1)\"), plot.height = 400, plot.width = 700, downscale.image = 2) p <- Plot3DFeature(ROI_HE, features = mzs[2], show.image = \"slice1\", assays = \"Spatial\", between.layer.height = 300, names = c(\"SM(34:1)\", \"SM(34:1)\"), plot.height = 400, plot.width = 700, downscale.image = 2)  plotly::style(p, visible = FALSE, traces = 1)"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/articles/SpaMTP_Additional_Features.html","id":"section-d-ploting-of-features-and-metadata","dir":"Articles","previous_headings":"","what":"3D Ploting of features and metadata","title":"SpaMTP: Additional Analysis Features","text":"Although Plot3DFeatures function mainly used plotting features different modalities (.e. genes metabolites). can also used plot metadata feature metadata modalities. Lets visualise : want specify exact colours clusters can use code convert colours/hex values RGB:","code":"# Plot3DFeatures can either take in a colour palette (i.e. \"Reds\", \"Blues\", etc.) or a list of RGB values # In this case we want our feature to be plotted using \"Reds\" and our clustering results to be coloured in categorical colours   col.palette <- list(   \"Reds\",  # Use built-in Plotly colorscale   list(     # Define custom colorscale manually     list(0, \"rgb(0,0,255)\"),   # Blue at 0     list(0.5, \"rgb(0,255,0)\"), # Green at 0.5     list(1, \"rgb(255,0,0)\")    # Red at 1   ) )   Plot3DFeature(ROI_HE, features = c(mzs[2], \"ssc\"), show.image = \"slice1\", assays = \"Spatial\", between.layer.height = 300, names = c(\"Metabolite\", \"Clusters\"), plot.height = 400, plot.width = 700, downscale.image = 2, col.palette = col.palette) # We will use the same colour palette as used in the \"Mouse Urinary Bladder\" tutorial # Make sure that you only include values that are present in your plot hex_list = list(\"2\" = \"#C2B03B\",                    \"5\" = \"#0074B0\",                      \"6\" = \"#DE4D6C\")  # Convert the names to numeric values values <- as.numeric(names(hex_list))  # Normalize values between 0 and 1 normalized_values <- (values - min(values)) / (max(values) - min(values))  # Convert colors to RGB (supports both hex and named colors) custom_colorscale <- lapply(seq_along(values), function(i) {   rgb_values <- col2rgb(hex_list[[as.character(values[i])]])  # Convert to RGB   list(normalized_values[i], paste0(\"rgb(\", paste(rgb_values, collapse=\",\"), \")\")) })   Plot3DFeature(ROI_HE, features = c(mzs[2], \"ssc\"), show.image = \"slice1\", assays = \"Spatial\", between.layer.height = 300, names = c(\"Metabolite\", \"Clusters\"), plot.height = 400, plot.width = 700, downscale.image = 2, col.palette = list(\"Reds\", custom_colorscale))"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/articles/SpaMTP_Additional_Features.html","id":"section-selecting-data-bin-size","dir":"Articles","previous_headings":"","what":"Selecting Data Bin Size","title":"SpaMTP: Additional Analysis Features","text":"One important element analysing spatial metabolic data choosing bin size reduce dimensionality dataset. SpaMTP provides interactive plot lets change size bin see metabolites included within bin specific peak, changes expression spatially across tissue. can observe : Based plot, users can adjust bin size data (running BinSpaMTP) can adjust plusminus attribute using ImageMZPlot.","code":"InteractiveSpatialPlot(ROI_HE)"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/articles/SpaMTP_Additional_Features.html","id":"section-data-export","dir":"Articles","previous_headings":"","what":"Data Export","title":"SpaMTP: Additional Analysis Features","text":"Exporting data can often difficult dealing large datasets different data object types R’s Seurat compared Python’s scanpy. SpaMTP can easily export data object matrix.mtx, barcodes.csv features.csv files, can easily read major spatial analysis packages. addition, cell/pixel feature metadata also exported .csv files. demonstrate export files: Lets visualise output files directory structure: data can therefor loaded applications AnnData python:","code":"SaveSpaMTPData(bladder_HE, outdir = \"../Documents/SpaMTP_Output/\", assay = \"Spatial\", slot = \"counts\", annotations = TRUE) fs::dir_tree(\"../Documents/SpaMTP_Output/\") ## ../Documents/SpaMTP_Output/ ##  ## ├── barcode_metadata.csv ## ├── feature_metadata.csv ## ├── filtered_feature_bc_matrix ## │   ├── barcodes.tsv ## │   ├── genes.tsv ## │   └── matrix.mtx ## └── spatial ##     ├── scalefactors_json.json ##     ├── tissue_lowres_image.png ##     └── tissue_positions_list.csv import anndata import scanpy as sc import pandas as pd import numpy as np  adata = sc.read_10x_mtx(path = \"../Documents/SpaMTP_Output/\")"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/articles/SpaMTP_Additional_Features.html","id":"section-session-info","dir":"Articles","previous_headings":"","what":"Session Info","title":"SpaMTP: Additional Analysis Features","text":"","code":"sessionInfo() ## R version 4.4.1 (2024-06-14) ## Platform: aarch64-apple-darwin20 ## Running under: macOS 15.5 ##  ## Matrix products: default ## BLAS:   /Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/lib/libRblas.0.dylib  ## LAPACK: /Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/lib/libRlapack.dylib;  LAPACK version 3.12.0 ##  ## locale: ## [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8 ##  ## time zone: Europe/Dublin ## tzcode source: internal ##  ## attached base packages: ## [1] stats4    stats     graphics  grDevices utils     datasets  methods   ## [8] base      ##  ## other attached packages: ##  [1] EnhancedVolcano_1.24.0 ggrepel_0.9.6          ggplot2_4.0.0          ##  [4] dplyr_1.1.4            Seurat_5.3.0           SeuratObject_5.2.0     ##  [7] sp_2.2-0               Cardinal_3.8.3         S4Vectors_0.44.0       ## [10] ProtGenerics_1.38.0    BiocGenerics_0.52.0    BiocParallel_1.40.2    ## [13] SpaMTP_1.1.0           ##  ## loaded via a namespace (and not attached): ##   [1] RColorBrewer_1.1-3     rstudioapi_0.17.1      jsonlite_2.0.0         ##   [4] magrittr_2.0.4         spatstat.utils_3.2-0   farver_2.1.2           ##   [7] rmarkdown_2.29         fs_1.6.6               ragg_1.5.0             ##  [10] vctrs_0.6.5            ROCR_1.0-11            spatstat.explore_3.5-3 ##  [13] RCurl_1.98-1.17        htmltools_0.5.8.1      sass_0.4.10            ##  [16] sctransform_0.4.2      parallelly_1.45.1      KernSmooth_2.23-26     ##  [19] bslib_0.9.0            htmlwidgets_1.6.4      desc_1.4.3             ##  [22] ica_1.0-3              plyr_1.8.9             plotly_4.11.0          ##  [25] zoo_1.8-14             cachem_1.1.0           igraph_2.1.4           ##  [28] mime_0.13              lifecycle_1.0.4        pkgconfig_2.0.3        ##  [31] Matrix_1.7-4           R6_2.6.1               fastmap_1.2.0          ##  [34] fitdistrplus_1.2-4     future_1.67.0          shiny_1.11.1           ##  [37] digest_0.6.37          patchwork_1.3.2        tensor_1.5.1           ##  [40] RSpectra_0.16-2        irlba_2.3.5.1          textshaping_1.0.3      ##  [43] labeling_0.4.3         progressr_0.16.0       spatstat.sparse_3.1-0  ##  [46] httr_1.4.7             polyclip_1.10-7        abind_1.4-8            ##  [49] compiler_4.4.1         proxy_0.4-27           withr_3.0.2            ##  [52] S7_0.2.0               tiff_0.1-12            viridis_0.6.5          ##  [55] DBI_1.2.3              fastDummies_1.7.5      MASS_7.3-65            ##  [58] classInt_0.4-11        units_0.8-7            tools_4.4.1            ##  [61] lmtest_0.9-40          httpuv_1.6.16          future.apply_1.20.0    ##  [64] goftest_1.2-3          glue_1.8.0             nlme_3.1-168           ##  [67] EBImage_4.48.0         promises_1.3.3         sf_1.0-21              ##  [70] grid_4.4.1             Rtsne_0.17             cluster_2.1.8.1        ##  [73] reshape2_1.4.4         generics_0.1.4         gtable_0.3.6           ##  [76] spatstat.data_3.1-8    class_7.3-23           tidyr_1.3.1            ##  [79] data.table_1.17.8      spatstat.geom_3.6-0    RcppAnnoy_0.0.22       ##  [82] RANN_2.6.2             pillar_1.11.1          stringr_1.5.2          ##  [85] spam_2.11-1            RcppHNSW_0.6.0         limma_3.62.2           ##  [88] later_1.4.4            splines_4.4.1          lattice_0.22-7         ##  [91] survival_3.8-3         deldir_2.0-4           tidyselect_1.2.1       ##  [94] CardinalIO_1.4.0       locfit_1.5-9.12        miniUI_0.1.2           ##  [97] pbapply_1.7-4          knitr_1.50             gridExtra_2.3          ## [100] matter_2.8.0           scattermore_1.2        xfun_0.53              ## [103] Biobase_2.66.0         statmod_1.5.0          matrixStats_1.5.0      ## [106] fftwtools_0.9-11       stringi_1.8.7          lazyeval_0.2.2         ## [109] yaml_2.3.10            evaluate_1.0.5         codetools_0.2-20       ## [112] tibble_3.3.0           cli_3.6.5              ontologyIndex_2.12     ## [115] uwot_0.2.3             xtable_1.8-4           reticulate_1.43.0      ## [118] systemfonts_1.2.3      jquerylib_0.1.4        Rcpp_1.1.0             ## [121] globals_0.18.0         spatstat.random_3.4-2  zeallot_0.2.0          ## [124] png_0.1-8              spatstat.univar_3.1-4  parallel_4.4.1         ## [127] pkgdown_2.1.3          dotCall64_1.2          jpeg_0.1-11            ## [130] bitops_1.0-9           listenv_0.9.1          viridisLite_0.4.2      ## [133] e1071_1.7-16           scales_1.4.0           ggridges_0.5.7         ## [136] purrr_1.1.0            rlang_1.1.6            cowplot_1.2.0          ## [139] shinyjs_2.1.0"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Andrew Causer. Author, maintainer. Tianyao Lu. Author. Christopher C.J. Fitzgerald. Author. . Laboratory. . Laboratory. . Funder. . Funder. . Funder.","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Causer , Lu T, Fitzgerald C, Nguyen VN,, Freytag S (2024). “SpaMTP: Integrative Statistical Analysis Visualisation Spatial Metabolomic Transcriptomic data.” ..., ...(...), ... doi:....","code":"@Article{,   title = {SpaMTP: Integrative Statistical Analysis and Visualisation of Spatial Metabolomic and Transcriptomic data},   author = {Andrew Causer and Tianyao Lu and Christopher Fitzgerald and Vinod Narayana ,Quan Nguyen and Saskia Freytag},   journal = {...},   year = {2024},   volume = {...},   number = {...},   pages = {...},   doi = {...}, }"},{"path":[]},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/index.html","id":"r-based-user-friendly-spatial-metabolomic-transcriptomic-and-proteomic-data-analysis-tool","dir":"","previous_headings":"","what":"R-based User-Friendly Spatial Metabolomic, Transcriptomic, and Proteomic Data Analysis Tool","title":"SpaMTP","text":"SpaMTP R package designed integrative analysis spatial metabolomics spatial transcriptomics data. SpaMTP inherits functionalities two well established R packages (Cardinal Seurat) present user-friendly platform integrative spatial-omics analysis. Build foundation Seurat Class Object, package three major functionalities include; (1) mass--charge ratio (m/z) metabolite annotation, (2) various downstream statistical analysis including differential metabolite expression pathway analysis, (3) integrative spatial-omics analysis. addition, package includes various functions data visualisation data import/export, permitting flexible usage established R Python packages. Please head SpaMTP Website tutorials, documentation additional information. detailed explanation cite SpaMTP, please visit pre-print available .","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"SpaMTP","text":"can install current version SpaMTP GitHub : tutorials information please visit SpaMTP website","code":"if (!require(\"devtools\", quietly = TRUE))     install.packages(\"devtools\")  devtools::install_github(\"GenomicsMachineLearning/SpaMTP\")"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/index.html","id":"apptainer","dir":"","previous_headings":"Installation","what":"Apptainer","title":"SpaMTP","text":"download image: Verify download correctly: create Apptainer image scratch (need environment-linux.yml, dependencies.R spamtp.def files):","code":"wget -c https://downloads.gmllab.com/SpaMTP/spamtp-1.1.sif wget -q -O - https://downloads.gmllab.com/SpaMTP/spamtp-1.1.sif.md5 | md5sum -c - apptainer build spamtp.sif spamtp.def"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/index.html","id":"contributing","dir":"","previous_headings":"Installation","what":"Contributing","title":"SpaMTP","text":"reproduce dependencies install SpaMTP conda environment:","code":"conda create --prefix [some-directory]/conda/spamtp python=3.10 r-base=4.4 imagemagick --y conda activate [some-directory]/conda/spamtp conda install -c conda-forge jupyter libconfig fontconfig freetype libtiff r-irkernel  --y conda install --no-update-deps -c conda-forge r-here r-matrix r-Seurat r-SeuratObject r-hdf5r r-ggplot2 r-reshape2 r-patchwork fftw r-RCurl r-jpeg r-locfit r-ontologyindex --y conda install --no-update-deps -c conda-forge r-fields r-ggdendro r-ggnewscale r-magick r-naturalsort r-pheatmap r-sf r-shinyjs r-zeallot r-r.utils --y conda install --no-update-deps -c bioconda bioconductor-BiocGenerics bioconductor-enhancedvolcano bioconductor-biocparallel --y conda install --no-update-deps -c bioconda bioconductor-protgenerics bioconductor-s4vectors bioconductor-biobase --y conda install --no-update-deps -c bioconda bioconductor-edger bioconductor-fgsea bioconductor-limma bioconductor-scater bioconductor-singlecellexperiment --y conda install --no-update-deps -c bioconda bioconductor-delayedmatrixstats bioconductor-hdf5array bioconductor-rhdf5 bioconductor-rhdf5lib --y conda install --no-update-deps -c bioconda bioconductor-msnbase bioconductor-ebimage==4.48.0-0 --y Rscript dependencies.R"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/AddCustomMZAnnotations.html","id":null,"dir":"Reference","previous_headings":"","what":"Assign custom annotations to m/z values — AddCustomMZAnnotations","title":"Assign custom annotations to m/z values — AddCustomMZAnnotations","text":"Adds custom metabolite annotations respective m/z values (ideal specific matrices FMP10).","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/AddCustomMZAnnotations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assign custom annotations to m/z values — AddCustomMZAnnotations","text":"","code":"AddCustomMZAnnotations(   data,   annotations,   assay = \"Spatial\",   return.only.annotated = FALSE,   mass.threshold = 0.05,   annotation.column = \"all_IsomerNames\" )"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/AddCustomMZAnnotations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assign custom annotations to m/z values — AddCustomMZAnnotations","text":"data SpaMTP Seurat object containing m/z intensity values. annotations data.frame containing two columns named 'annotation' 'mass'. columns contain custom metabolite annotation relative m/z mass respectively. assay Character string defining Seurat object assay store respective annotations feature meta.data dataframe (default = \"Spatial\"). return..annotated Boolean defining whether return SpaMTP Seurat object containing successfully annotated m/z values (default = FALSE). mass.threshold Numeric value defining acceptable threshold (plus-minus) custom annotations actual m/z values contained within SpaMTP object (default = 0.05). annotation.column Character string defining feature meta.data column name contain assigned annotations (default = \"all_IsomerNames\").","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/AddCustomMZAnnotations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assign custom annotations to m/z values — AddCustomMZAnnotations","text":"SpaMTP Seurat object containing custom annotations stored feature metadata dataframe.","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/AddCustomMZAnnotations.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assign custom annotations to m/z values — AddCustomMZAnnotations","text":"","code":"# annotated_data <- AddCustomMZAnnotations(SpaMTP.obj, annotation.df)"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/AddFMP10Annotations.html","id":null,"dir":"Reference","previous_headings":"","what":"Annotates FMP10 matrix data — AddFMP10Annotations","title":"Annotates FMP10 matrix data — AddFMP10Annotations","text":"Adds metabolite annotations respective m/z values generated using FMP10 matrix. done based curated FMP10 matrix database.","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/AddFMP10Annotations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Annotates FMP10 matrix data — AddFMP10Annotations","text":"","code":"AddFMP10Annotations(   obj,   only.fmp.adduct = FALSE,   add.custom.annotation = NULL,   assay = \"Spatial\",   return.only.annotated = FALSE,   mass.threshold = 0.05,   annotation.column = \"all_IsomerNames\" )"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/AddFMP10Annotations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Annotates FMP10 matrix data — AddFMP10Annotations","text":"obj SpaMTP Seurat object containing m/z intensity values annotation. Data generated FMP10 matrix. .fmp.adduct Boolean indicating metabolites FMP10+ adducts (+FMP10, +2FMP10, etc.) assigned m/z values (default = FALSE). add.custom.annotation data.frame containing addition FMP10 metabolite annotations current FMP10 database. Note: data.frame must contain column c(\"mass\", \"annotation\", \"Adduct\", \"Formula\", \"Isomers\", \"Isomers_IDs\"). set NULL, reference FMP10 database used (default = NULL). assay Character string defining Seurat object assay store respective annotations feature meta.data dataframe (default = \"Spatial\"). return..annotated Boolean defining whether return SpaMTP Seurat object containing successfully annotated m/z values (default = FALSE). mass.threshold Numeric value defining acceptable threshold (plus-minus) custom annotations actual m/z values contained within SpaMTP object (default = 0.05). annotation.column Character string defining feature meta.data column name contain assigned annotations (default = \"all_IsomerNames\").","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/AddFMP10Annotations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Annotates FMP10 matrix data — AddFMP10Annotations","text":"SpaMTP Seurat object containing relative metabolite annotations stored feature metadata dataframe.","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/AddFMP10Annotations.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Annotates FMP10 matrix data — AddFMP10Annotations","text":"","code":"# AddFMP10Annotations(spamtp, only.fmp.adduct = FALSE)"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/AddSMImage.html","id":null,"dir":"Reference","previous_headings":"","what":"Manually align an image (e.g. H&E, Immuno) to a SM SpaMTP dataset — AddSMImage","title":"Manually align an image (e.g. H&E, Immuno) to a SM SpaMTP dataset — AddSMImage","text":"Manually align image (e.g. H&E, Immuno) SM SpaMTP dataset","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/AddSMImage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Manually align an image (e.g. H&E, Immuno) to a SM SpaMTP dataset — AddSMImage","text":"","code":"AddSMImage(   image_path,   SpaMTP,   fov = \"fov\",   grey.scale = 0.5,   plot.greyscale = FALSE,   seed = 123,   n.spots = NULL,   ... )"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/AddSMImage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Manually align an image (e.g. H&E, Immuno) to a SM SpaMTP dataset — AddSMImage","text":"image_path Character string defining full path image align. SpaMTP SpaMTP Seurat object align image . fov Character string defining image fov contains SM data coordinates (default = \"fov\"). grey.scale Numeric value defining grey scale use generating tissue mask provided image (default = 0.5). plot.greyscale Boolean indicating whether display grey scale plot used generate tissue mask (default = FALSE). seed Integer value defining seed use calculating random fake gene values aligning image (default = 123). n.spots Integer specifying number fake spots generate aligned image. NULL number spots match SpaMTP object provided (default = NULL). ... Additional inputs used AlignSpatialOmics function. Please see documentation call ?AlignSpatialOmics infomation.","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/AddSMImage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Manually align an image (e.g. H&E, Immuno) to a SM SpaMTP dataset — AddSMImage","text":"SpaMTP Seurat object provided image aligned SM data. image stored @image$slice1 slot.","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/AddSMImage.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Manually align an image (e.g. H&E, Immuno) to a SM SpaMTP dataset — AddSMImage","text":"","code":"# AddSMImage(image_path = \"../HnE_image.png\", SpaMTP = SpaMTP_obj)"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/AlignSpatialOmics.html","id":null,"dir":"Reference","previous_headings":"","what":"Interactive app for SM and ST coordinate alignment — AlignSpatialOmics","title":"Interactive app for SM and ST coordinate alignment — AlignSpatialOmics","text":"Shiny app allowing manual alignment SM pixel coordinates coordinate system provided ST data.","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/AlignSpatialOmics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interactive app for SM and ST coordinate alignment — AlignSpatialOmics","text":"","code":"AlignSpatialOmics(   sm.data,   st.data,   msi.pixel.multiplier = 20,   image.res = \"lowres\",   continous_cols = NULL,   catagorical_cols = NULL,   fov = \"fov\",   image.slice = \"slice1\",   shiny.host = \"0.0.0.0\",   shiny.port = 4698,   verbose = FALSE )"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/AlignSpatialOmics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interactive app for SM and ST coordinate alignment — AlignSpatialOmics","text":"sm.data SpaMTP Seurat Object containing SM data st.data SpaMTP Seurat Object containing ST data msi.pixel.multiplier Numeric value defining scale.factor multiple SM pixel coordinates (default = 20). image.res Character string corresponding ST image scale factor use (default = \"lowres\"). continous_cols Vector colours use plotting continuous data. NULL, colour map \"Reds\" used (default = NULL). catagorical_cols Vector colours use plotting categorical data (default = NULL). fov Character string matching name SM FOV use plotting (default = \"fov\"). image.slice Character string matching ST image slice name use plotting (default = \"slice1\"). shiny.host Character string shiny host network interface Shiny application listen run (default = \"0.0.0.0\"). shiny.port Numeric 4 digit number defining port Shiny application listen run (default = 4698). verbose Boolean indicating whether show message. TRUE message show, else message suppressed (default = FALSE).","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/AlignSpatialOmics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Interactive app for SM and ST coordinate alignment — AlignSpatialOmics","text":"SpaMTP Seurat Object containing SM data transformed coordinated match aligned ST data","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/AlignSpatialOmics.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Interactive app for SM and ST coordinate alignment — AlignSpatialOmics","text":"","code":"# SM_Transformed <- AlignSpatialOmics(SM.data, ST.data)"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/AnnotateBigData.html","id":null,"dir":"Reference","previous_headings":"","what":"Annotates vector of m/z values — AnnotateBigData","title":"Annotates vector of m/z values — AnnotateBigData","text":"function assigns valid m/z peak one/multiple metabolite names based mass difference observed value theoretical value documented reference database. function used dealing large datasets preprocessing step. Users can annotate m/z values first subset data accordinly loading SpaMTP Seurat Object.","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/AnnotateBigData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Annotates vector of m/z values — AnnotateBigData","text":"","code":"AnnotateBigData(   mzs,   db,   ppm_error = NULL,   adducts = NULL,   polarity = \"positive\",   tof_resolution = 30000,   verbose = TRUE )"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/AnnotateBigData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Annotates vector of m/z values — AnnotateBigData","text":"mzs Vector containing m/z values annotation. db Reference metabolite dataset form Data.Frame. SpaMTP provides 4 pre-cleaned optimised databases (HMDB_db, Lipidmaps_db, Chebi_db, GNPS_db). ppm_error Numeric value indicating size ppm error allowed matching molecular weights Seurat object reference dataset. want exact matches set ppm = 0 (default = NULL). adducts List adducts use searching database (e.g. \"M+NH4\",\"M+Na\",\"M+CH3OH+H\",\"M+K\" etc.). possible adducts please visit . NULL take full list adducts (default = NULL). polarity Character string defining polarity adducts use, either \"positive\", \"negative\" \"neutral\" (default = \"positive\"). tof_resolution tof resolution instrument used MALDI run, calculated ion [ion mass,m/z]/[Full width half height]. value used estimate ppm_error set NULL (default = 30000). verbose Boolean indicating whether show message. TRUE message show, else message suppressed (default = TRUE).","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/AnnotateBigData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Annotates vector of m/z values — AnnotateBigData","text":"data.frame containing successfully annotated m/z values, corresponding annotation.","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/AnnotateBigData.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Annotates vector of m/z values — AnnotateBigData","text":"","code":"#cardinal <- readImzML(\"./Test_Data/Spotted/test_data1\") #mzs <- data.frame(Cardinal::featureData(cardinal))$mz #results <- AnnotateBigData(mzs, db = HMDB_db, ppm_error = 3, adducts = c(\"M-H\", \"M+Cl\"), polarity = \"negative\") #cardinal_subset <- Cardinal::subset(cardinal, mz %in% results$observed_mz) #SpaMTP_data <- CardinalToSeurat(cardinal_subset)"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/AnnotateSM.html","id":null,"dir":"Reference","previous_headings":"","what":"Annotates m/z values stored in a SpaMTP Object — AnnotateSM","title":"Annotates m/z values stored in a SpaMTP Object — AnnotateSM","text":"function assigns valid m/z peak one/multiple metabolite names based mass difference observed value theoretical value documented reference database. SpaMTP contains 4 cleaned reference databases choose include HMDB, Lipid Maps, ChEBI GNPS. databases can also combined increased coverage.","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/AnnotateSM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Annotates m/z values stored in a SpaMTP Object — AnnotateSM","text":"","code":"AnnotateSM(   data,   db,   assay = \"Spatial\",   raw.mz.column = \"raw_mz\",   ppm_error = NULL,   adducts = NULL,   polarity = \"positive\",   tof_resolution = 30000,   filepath = NULL,   return.only.annotated = TRUE,   save.intermediate = TRUE,   verbose = TRUE )"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/AnnotateSM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Annotates m/z values stored in a SpaMTP Object — AnnotateSM","text":"data Seurat Spatial Metabolomic Object containing m/z values annotation. db Reference metabolite dataset form Data.Frame. assay Character string defining Seurat assay contains mz counts annotated (default = \"Spatial\"). raw.mz.column Character string defining Seurat assay slot contains raw mz values, without 'mz-' vector integers. setup default running cardinal_to_seurat() function (default = \"raw_mz\"). ppm_error Numeric value indicating size ppm error allowed matching molecular weights Seurat object reference dataset. want exact matches set ppm = 0 (default = NULL). adducts List adducts use searching database (e.g. \"M+NH4\",\"M+Na\",\"M+CH3OH+H\",\"M+K\" etc.). possible adducts please visit . NULL take full list adducts (default = NULL). polarity Character string defining polarity adducts use, either \"positive\", \"negative\" \"neutral\" (default = \"positive\"). tof_resolution tof resolution instrument used MALDI run, calculated ion [ion mass,m/z]/[Full width half height]. value used estimate ppm_error set NULL (default = 30000). filepath Character string directory store _annotated_mz_peaks.csv. set NULL dataframe saved (default = NULL). return..annotated Boolean value indicating annotated Seurat Object include m/z values successfully annotated (default = TRUE). save.intermediate Boolean indicating whether save intermediate file @tools slot SpaMTP object required later analysis functions FindRegionalPathways() (default = TRUE). verbose Boolean indicating whether show message. TRUE message show, else message suppressed (default = TRUE).","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/AnnotateSM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Annotates m/z values stored in a SpaMTP Object — AnnotateSM","text":"Seurat Object m/z values annotated. annotations stored relative assay's meta.data (e.g. SeuratObj[[\"Spatial\"]][[]])","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/AnnotateSM.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Annotates m/z values stored in a SpaMTP Object — AnnotateSM","text":"","code":"# HMDB_db <- load(\"data/HMDB_1_names.rds\") # Annotated_SeuratObj <- AnnotateSM(SeuratObj, HMDB_db)"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/BinMetabolites.html","id":null,"dir":"Reference","previous_headings":"","what":"Sums the intensity values of multiple m/z values into one — BinMetabolites","title":"Sums the intensity values of multiple m/z values into one — BinMetabolites","text":"function inputs vector m/z values combines intensity values per pixel. 'binned' data stored SpaMTP Object's @meta.data slot.","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/BinMetabolites.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sums the intensity values of multiple m/z values into one — BinMetabolites","text":"","code":"BinMetabolites(   data,   mzs,   assay = \"Spatial\",   slot = \"data\",   bin_name = \"Binned_Metabolites\" )"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/BinMetabolites.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sums the intensity values of multiple m/z values into one — BinMetabolites","text":"data SpaMTP Seurat class object containing m/z intensities. mzs Vector m/z names binned together assay Character string indicating Seurat object assay pull data form (default = \"Spatial\"). slot Character string indicating assay slot use pull expression values form (default = \"counts\"). bin_name Character string defining name meta.data column stores data (default = \"Binned_Metabolites\").","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/BinMetabolites.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sums the intensity values of multiple m/z values into one — BinMetabolites","text":"Binned intensity value stored barcode meta.data slot","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/BinMetabolites.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sums the intensity values of multiple m/z values into one — BinMetabolites","text":"","code":"# SpaMPT.obj <- BinMetabolites(SpaMPT.obj, mz = c('mz-740.471557617188','mz-784.528564453125','mz-897.603637695312'), bin_name = \"Lipids\")"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/BinSpaMTP.html","id":null,"dir":"Reference","previous_headings":"","what":"Bin SpaMTP Object — BinSpaMTP","title":"Bin SpaMTP Object — BinSpaMTP","text":"Bins m/z peaks specified SpaMTP object reduce dimensionality remove noise.","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/BinSpaMTP.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bin SpaMTP Object — BinSpaMTP","text":"","code":"BinSpaMTP(   data,   resolution,   units = \"ppm\",   assay = \"Spatial\",   slot = \"counts\",   method = c(\"sum\"),   return.only.mtx = FALSE )"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/BinSpaMTP.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bin SpaMTP Object — BinSpaMTP","text":"data SpaMTP Seurat Object containing intensity data binned resolution Numeric value indicating relative bin size use binning intensity data. units Character string defining relative units provided resolution size. Values can either 'ppm' 'mz' (default = 'ppm'). assay Character string defining SpaMTP assay extract intensity values (default = \"Spatial\"). slot Character string defining assay slot containing intensity values (default = \"counts\"). method character vector specifying binning method. Input values must either \"sum\", \"mean\", \"max\" \"min\" (default = \"sum\"). return..mtx Boolean value indicating whether return binned intensity matrix. FALSE, SpaMTP object returned binned values stored assay called binned (default = FALSE).","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/BinSpaMTP.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bin SpaMTP Object — BinSpaMTP","text":"Either binned intensity matrix SpaMTP object contatining binned intensity matrix stored binned assay.","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/BinSpaMTP.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bin SpaMTP Object — BinSpaMTP","text":"","code":"#BinSpaMTP(spamtp.obj, resolution = 10, units = \"ppm\", return.only.mtx = TRUE)"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/BinnedCardinalToSeurat.html","id":null,"dir":"Reference","previous_headings":"","what":"Converts a SpaMTP binned Cardinal Object into a SpaMTP Seurat Object — BinnedCardinalToSeurat","title":"Converts a SpaMTP binned Cardinal Object into a SpaMTP Seurat Object — BinnedCardinalToSeurat","text":"function used LoadSM() bin_package set 'SpaMTP'.","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/BinnedCardinalToSeurat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Converts a SpaMTP binned Cardinal Object into a SpaMTP Seurat Object — BinnedCardinalToSeurat","text":"","code":"BinnedCardinalToSeurat(   data,   mtx,   multi.run = FALSE,   assay = \"Spatial\",   verbose = TRUE )"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/BinnedCardinalToSeurat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Converts a SpaMTP binned Cardinal Object into a SpaMTP Seurat Object — BinnedCardinalToSeurat","text":"data Cardinal Object converted Seurat Object. mtx Matrix object containing multi.run Boolean indicating multiple runs within imported data. TRUE, index added pixel names per run, individual FOV generated per run Seurat Object (default = FALSE). assay Character string containing name assay (default = \"Spatial\"). verbose Boolean indicating whether show message. TRUE message show, else message suppressed (default = TRUE).","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/BinnedCardinalToSeurat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Converts a SpaMTP binned Cardinal Object into a SpaMTP Seurat Object — BinnedCardinalToSeurat","text":"Seurat Object containing mz count data supplied Cardinal Object","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/BinnedCardinalToSeurat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Converts a SpaMTP binned Cardinal Object into a SpaMTP Seurat Object — BinnedCardinalToSeurat","text":"","code":"# CardinalToSeurat(CardinalObj, run_name = \"run_1\")"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/CalculateAnnotationStatistics.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate annotation statistics for all m/z value suggesting the most likely metabolite based on correlated pathway expression. — CalculateAnnotationStatistics","title":"Calculate annotation statistics for all m/z value suggesting the most likely metabolite based on correlated pathway expression. — CalculateAnnotationStatistics","text":"function evaluates potential biological relevance annotation given m/z value : Identifying pathways associated possible annotated metabolite Calculating colocalisation score m/z intensity expression corresponding pathway Ranking annotations combined z-score based correlation strength number supporting significant pathways NOTE: function requires CreatePathwayAssay run first","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/CalculateAnnotationStatistics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate annotation statistics for all m/z value suggesting the most likely metabolite based on correlated pathway expression. — CalculateAnnotationStatistics","text":"","code":"CalculateAnnotationStatistics(   data,   mz.assay,   pathway.assay,   mz.slot = \"scale.data\",   pathway.slot = \"scale.data\",   return.top = TRUE,   corr_theshold = 0,   corr_weight = 1,   n_weight = 1 )"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/CalculateAnnotationStatistics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate annotation statistics for all m/z value suggesting the most likely metabolite based on correlated pathway expression. — CalculateAnnotationStatistics","text":"data SpaMTP Seurat object containing metabolite RAMP_ID assays generated CreatePathwayAssay. mz.assay Character string defining name assay containing m/z features. pathway.assay Character string matching name assay containing RAMP_ID features (default = \"pathway\"). mz.slot Character string stating slot extract m/z values (default = \"scale.data\"). pathway.slot Character string defining slot extract pathway features (default = \"scale.data\"). return.top Boolean indicating whether return likely metabolite corresponding pval score. set FALSE, list returned statistics possible metabolites per m/z (default = TRUE). corr_theshold Numeric value stating correlation threshold consider pathway significantly colocalized. set 0, pathways counted (default = 0). corr_weight Numeric weight applied correlation score z-score calculation. significance based correlation, increase value (default = 1). n_weight Numeric weight applied number correlated pathways z-score calculation (default = 1). mz Character numeric. target m/z feature. numeric, closest matching m/z dataset selected.","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/CalculateAnnotationStatistics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate annotation statistics for all m/z value suggesting the most likely metabolite based on correlated pathway expression. — CalculateAnnotationStatistics","text":"Either data.frame containing original annotations m/z values corresponding likely metabolite, list contating statistics m/z value.","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/CalculateAnnotationStatistics.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate annotation statistics for all m/z value suggesting the most likely metabolite based on correlated pathway expression. — CalculateAnnotationStatistics","text":"","code":"#CalculateAnnotationStatistics(data = data,mz.assay = \"SPM\",pathway.assay = \"merged\",mz.slot = \"scale.data\")"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/CalculateSingleAnnotationStatistics.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate annotation statistics for a single m/z value suggesting the most likely metabolite based on correlated pathway expression. — CalculateSingleAnnotationStatistics","title":"Calculate annotation statistics for a single m/z value suggesting the most likely metabolite based on correlated pathway expression. — CalculateSingleAnnotationStatistics","text":"function evaluates potential biological relevance annotation given m/z value : Identifying pathways associated possible annotated metabolite Calculating colocalisation score m/z intensity expression corresponding pathway Ranking annotations combined z-score based correlation strength number supporting significant pathways NOTE: function requires CreatePathwayAssay CreatePathwayObject run first","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/CalculateSingleAnnotationStatistics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate annotation statistics for a single m/z value suggesting the most likely metabolite based on correlated pathway expression. — CalculateSingleAnnotationStatistics","text":"","code":"CalculateSingleAnnotationStatistics(   mz,   data,   mz.assay,   pathway.assay = \"pathway\",   mz.slot = \"scale.data\",   pathway.slot = \"scale.data\",   corr_theshold = 0,   corr_weight = 1,   n_weight = 1 )"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/CalculateSingleAnnotationStatistics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate annotation statistics for a single m/z value suggesting the most likely metabolite based on correlated pathway expression. — CalculateSingleAnnotationStatistics","text":"mz Character numeric. target m/z feature. numeric, closest matching m/z dataset selected. data SpaMTP Seurat object containing metabolite pathway assays generated CreatePathwayObject. mz.assay Character string defining name assay containing m/z features. pathway.assay Character string matching name assay containing pathway features (default = \"pathway\"). mz.slot Character string stating slot extract m/z values (default = \"scale.data\"). pathway.slot Character string defining slot extract pathway features (default = \"scale.data\"). corr_theshold Numeric value stating correlation threshold consider pathway significantly colocalized. set 0, pathways counted (default = 0). corr_weight Numeric weight applied correlation score z-score calculation. significance based correlation, increase value (default = 1). n_weight Numeric weight applied number correlated pathways z-score calculation (default = 1).","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/CalculateSingleAnnotationStatistics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate annotation statistics for a single m/z value suggesting the most likely metabolite based on correlated pathway expression. — CalculateSingleAnnotationStatistics","text":"tibble ranked annotations m/z value, containing: metabolite common name metabolite associated RAMP ID ramp_id RAMP ID corresponding annotation n_sig_path Number correlated pathways threshold max_cor Maximum correlation value among significant pathways z_score Combined z-score used rank annotations pval Unadjusted p-value pval_adj Adjusted p-value (BH method)","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/CalculateSingleAnnotationStatistics.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate annotation statistics for a single m/z value suggesting the most likely metabolite based on correlated pathway expression. — CalculateSingleAnnotationStatistics","text":"","code":"#data <- CreatePathwayObject(data,assay=\"SPT_pathway\",slot = \"scale.data\") #CalculateSingleAnnotationStatistics(mz = \"mz-674.2805\",data = data,mz.assay = \"SPM\",pathway.assay = \"pathway\",mz.slot = \"scale.data\")"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/CardinalToSeurat.html","id":null,"dir":"Reference","previous_headings":"","what":"Converts a Cardinal Object into a SpaMTP Seurat Object — CardinalToSeurat","title":"Converts a Cardinal Object into a SpaMTP Seurat Object — CardinalToSeurat","text":"Converts Cardinal Object SpaMTP Seurat Object","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/CardinalToSeurat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Converts a Cardinal Object into a SpaMTP Seurat Object — CardinalToSeurat","text":"","code":"CardinalToSeurat(   data,   multi.run = FALSE,   seurat.coord = NULL,   assay = \"Spatial\",   verbose = TRUE )"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/CardinalToSeurat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Converts a Cardinal Object into a SpaMTP Seurat Object — CardinalToSeurat","text":"data Cardinal Object converted Seurat Object. multi.run Boolean indicating multiple runs within imported data. TRUE, index added pixel names per run, individual FOV generated per run Seurat Object (default = FALSE). seurat.coord Data.Frame containing two columns titled 'X_new' 'Y_new' specifying pixel coordinates data point. required mapping Spatial Metabolic data H&E image done externally, SM coordinates need change align correctly ST data. Else, set NULL (default = NULL). assay Character string containing name assay (default = \"Spatial\"). verbose Boolean indicating whether show message. TRUE message show, else message suppressed (default = TRUE).","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/CardinalToSeurat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Converts a Cardinal Object into a SpaMTP Seurat Object — CardinalToSeurat","text":"Seurat Object containing mz count data supplied Cardinal Object","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/CardinalToSeurat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Converts a Cardinal Object into a SpaMTP Seurat Object — CardinalToSeurat","text":"","code":"# CardinalToSeurat(CardinalObj, run_name = \"run_1\", seurat.coord = NULL)"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/Chebi_db.html","id":null,"dir":"Reference","previous_headings":"","what":"Chebi_db: Cleaned ChEBI (Chemical entities of biological interest) reference dataset — Chebi_db","title":"Chebi_db: Cleaned ChEBI (Chemical entities of biological interest) reference dataset — Chebi_db","text":"dataset containing information chemical entities, including formulas, exact masses, isomers, InChIKeys, names.","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/Chebi_db.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Chebi_db: Cleaned ChEBI (Chemical entities of biological interest) reference dataset — Chebi_db","text":"","code":"Chebi_db"},{"path":[]},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/Chebi_db.html","id":"a-data-frame-with-rows-and-variables-","dir":"Reference","previous_headings":"","what":"A data frame with 46297 rows and 37 variables:","title":"Chebi_db: Cleaned ChEBI (Chemical entities of biological interest) reference dataset — Chebi_db","text":"formula Chemical formula entity (character) exactmass Exact mass entity (numeric) isomers Presence isomers (character) isomers_inchikey InChIKeys isomers (character) isomers_names Names isomers (character) 2M-H Mass entity 2M-H ion (double) 2M+ACN+H Mass entity 2M+ACN+H ion (double) 2M+ACN+Na Mass entity 2M+ACN+Na ion (double) 2M+FA-H Mass entity 2M+FA-H ion (double) 2M+H Mass entity 2M+H ion (double) 2M+Hac-H Mass entity 2M+Hac-H ion (double) 2M+K Mass entity 2M+K ion (double) 2M+NH4 Mass entity 2M+NH4 ion (double) 2M+Na Mass entity 2M+Na ion (double) 3M-H Mass entity 3M-H ion (double) M+2ACN+H Mass entity M+2ACN+H ion (double) M+2K+H Mass entity M+2K+H ion (double) M+2Na-H Mass entity M+2Na-H ion (double) M+ACN+H Mass entity M+ACN+H ion (double) M+ACN+Na Mass entity M+ACN+Na ion (double) M+Br Mass entity M+Br ion (double) M+CH3OH+H Mass entity M+CH3OH+H ion (double) M+Cl Mass entity M+Cl ion (double) M+DMSO+H Mass entity M+DMSO+H ion (double) M+FA-H Mass entity M+FA-H ion (double) M+H Mass entity M+H ion (double) M+Hac-H Mass entity M+Hac-H ion (double) M+IsoProp+H Mass entity M+IsoProp+H ion (double) M+IsoProp+Na+H Mass entity M+IsoProp+Na+H ion (double) M+K Mass entity M+K ion (double) M+K-2H Mass entity M+K-2H ion (double) M+NH4 Mass entity M+NH4 ion (double) M+Na Mass entity M+Na ion (double) M+Na-2H Mass entity M+Na-2H ion (double) M+TFA-H Mass entity M+TFA-H ion (double) M-H Mass entity M-H ion (double) M-H2O-H Mass entity M-H2O-H ion (double)","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/Chebi_db.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Chebi_db: Cleaned ChEBI (Chemical entities of biological interest) reference dataset — Chebi_db","text":"https://www.ebi.ac.uk/chebi/","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/CheckAlignment.html","id":null,"dir":"Reference","previous_headings":"","what":"Check multi-modal coordinate alignment — CheckAlignment","title":"Check multi-modal coordinate alignment — CheckAlignment","text":"Checks alignment two spatial datasets plotting relative coordinates graph","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/CheckAlignment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check multi-modal coordinate alignment — CheckAlignment","text":"","code":"CheckAlignment(   SM.data,   ST.data,   image.res = NULL,   names = c(\"SM\", \"ST\"),   cols = NULL,   image.slice = \"slice1\",   size = 0.5 )"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/CheckAlignment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check multi-modal coordinate alignment — CheckAlignment","text":"SM.data SpaMTP Seurat object containing SM data ST.data SpaMTP Seurat object containing ST data image.res Character string defining Visium image resolution use. required correct scale.factor applied (default = NULL). names Vector 2 character strings used define dataset plotted (default = c(\"SM\", \"ST\")). cols Vector 2 colors used plotting (default = NULL). image.slice Character string matching image slice name within ST SpaMTP Seurat object (default = \"slice1\"). size Numeric value indicating point size plot (default = 0.5).","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/CheckAlignment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check multi-modal coordinate alignment — CheckAlignment","text":"2D scatter plot showing relative spatial locations ST SM data points","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/CheckAlignment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check multi-modal coordinate alignment — CheckAlignment","text":"","code":"# CheckAlignment(SM.data, ST.data)"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/ConvertSeuratToCardinal.html","id":null,"dir":"Reference","previous_headings":"","what":"Converts a SpaMTP Seurat object to a Cardinal object, including annotations and metadata — ConvertSeuratToCardinal","title":"Converts a SpaMTP Seurat object to a Cardinal object, including annotations and metadata — ConvertSeuratToCardinal","text":"Converts SpaMTP Seurat object Cardinal object, including annotations metadata","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/ConvertSeuratToCardinal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Converts a SpaMTP Seurat object to a Cardinal object, including annotations and metadata — ConvertSeuratToCardinal","text":"","code":"ConvertSeuratToCardinal(   data,   assay = \"Spatial\",   slot = \"counts\",   run_col = NULL,   feature.metadata = FALSE,   verbose = TRUE )"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/ConvertSeuratToCardinal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Converts a SpaMTP Seurat object to a Cardinal object, including annotations and metadata — ConvertSeuratToCardinal","text":"data Seurat object converted. assay Character string defining Seurat Object assay name pull intensity count data (default = \"Spatial\"). slot Character string defining slot Seurat Object assay gather intensity data (default = \"counts\"). run_col Character string describing Seurat meta.data column run identities stored (default = NULL). feature.metadata Boolean value whether Seurat Object contains annotations stored feature metadata slot specified assay (default = FALSE). verbose Boolean indicating whether show message. TRUE message show, else message suppressed (default = TRUE).","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/ConvertSeuratToCardinal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Converts a SpaMTP Seurat object to a Cardinal object, including annotations and metadata — ConvertSeuratToCardinal","text":"Cardinal object containing intensity values feature metadata (annotations)","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/ConvertSeuratToCardinal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Converts a SpaMTP Seurat object to a Cardinal object, including annotations and metadata — ConvertSeuratToCardinal","text":"","code":"# cardinal.obj <- ConvertSeuratToCardinal(SeuratObject, feature.metadata = TRUE)"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/CreateMergedModalityAssay.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a singular multiomics assay by merging data from multiple assays. — CreateMergedModalityAssay","title":"Create a singular multiomics assay by merging data from multiple assays. — CreateMergedModalityAssay","text":"Combines scale.data slots multiple assays SpaMTP Seurat object single new assay. Useful integrating multiple modalities (e.g. transcriptomics, proteomics, metabolomics) already scaled.","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/CreateMergedModalityAssay.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a singular multiomics assay by merging data from multiple assays. — CreateMergedModalityAssay","text":"","code":"CreateMergedModalityAssay(   SpaMTP,   assays.to.merge,   new.assay = \"merged\",   return.original = TRUE,   verbose = FALSE )"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/CreateMergedModalityAssay.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a singular multiomics assay by merging data from multiple assays. — CreateMergedModalityAssay","text":"SpaMTP SpaMTP Seurat object contains atleast two assays merged. assays..merge character vector specifying names assays whose scale.data slots merged. least two assay names must provided must contain scale.data slot, example: assays..merge = c(\"SPM\", \"SPT\"). new.assay character string specifying name new assay created (default = \"merged\"). return.original Boolean value defining returned SpaMTP Seurat object contain original individual assays. data size large recommended set False (default = TRUE). verbose Boolean indicating whether show message. TRUE message show, else message suppressed (default = TRUE).","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/CreateMergedModalityAssay.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a singular multiomics assay by merging data from multiple assays. — CreateMergedModalityAssay","text":"SpaMTP Seurat object containing new assay merged scaled data values.","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/CreateMergedModalityAssay.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a singular multiomics assay by merging data from multiple assays. — CreateMergedModalityAssay","text":"function assumes specified assay processed Seurat::ScaleData() (alternative scaling method), scale.data slots contain numeric matrices. merged assay use row-bound scale.data matrices counts, data, scale.data slots.","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/CreateMergedModalityAssay.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a singular multiomics assay by merging data from multiple assays. — CreateMergedModalityAssay","text":"","code":"# merged_obj <- CreateMergedModalityAssay(SpaMTP = spamtp_obj, assays.to.merge = c(\"SPM\", \"SPT\"),new.assay = \"merged\")"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/CreatePathwayAssay.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Pathway Assay from Gene or Metabolite Data — CreatePathwayAssay","title":"Create a Pathway Assay from Gene or Metabolite Data — CreatePathwayAssay","text":"function creates new assay within provided SpaMTP Seurat object contains features (either genes metabolites) labeled respective RAMP ID. assay can used running feature set co-regulation analysis (based GSCA).","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/CreatePathwayAssay.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Pathway Assay from Gene or Metabolite Data — CreatePathwayAssay","text":"","code":"CreatePathwayAssay(   SpaMTP,   analyte_type = \"metabolites\",   assay = \"Spatial\",   slot = \"counts\",   new_assay = \"pathway\",   verbose = TRUE )"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/CreatePathwayAssay.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Pathway Assay from Gene or Metabolite Data — CreatePathwayAssay","text":"SpaMTP SpaMTP Seurat object containing either spatial metabolic transcriptomic data analyte_type Character string specifying type analytes process.Must either \"genes\" \"metabolites\" (default = \"metabolites\"). assay Character string specifying name assay use source data (default = \"Spatial\"). slot Character string specifying slot assay use source data (default = \"counts\"). new_assay Character string specifying name new assay create (default = \"pathway\"). verbose Boolean logical value indicating whether print verbose messages execution. (default = TRUE).","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/CreatePathwayAssay.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Pathway Assay from Gene or Metabolite Data — CreatePathwayAssay","text":"SpaMTP object new assay added, containing respective gene/metabolite data formatted based RAMP_db IDs.","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/CreatePathwayAssay.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Pathway Assay from Gene or Metabolite Data — CreatePathwayAssay","text":"","code":"## Create a pathway assay from metabolite data #spamtp_obj <- CreatePathwayAssay(spamtp_obj, analyte_type = \"metabolites\", assay = \"SPM\", new_assay = \"pathway\")  ## Create a pathway assay from gene data with verbose output #spamtp_obj <- CreatePathwayAssay(spamtp_obj, analyte_type = \"genes\", assay = \"SPT\", new_assay = \"gene_pathway\", verbose = TRUE)"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/CreatePathwayObject.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a SpaMTP Seurat Object containing expression values for all present pathways — CreatePathwayObject","title":"Create a SpaMTP Seurat Object containing expression values for all present pathways — CreatePathwayObject","text":"function computes pathway-level scores analyte-level expression data stores results new assay Seurat object. pathway score calculated scaled mean expression analytes associated pathway, adjusted square root pathway size.","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/CreatePathwayObject.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a SpaMTP Seurat Object containing expression values for all present pathways — CreatePathwayObject","text":"","code":"CreatePathwayObject(   object,   assay = SeuratObject::DefaultAssay(object),   slot = \"scale.data\",   new.assay = \"pathway\",   remove.nans = TRUE )"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/CreatePathwayObject.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a SpaMTP Seurat Object containing expression values for all present pathways — CreatePathwayObject","text":"object SpaMTP Seurat object containing expression data. assay Character. Name assay extract analyte expression . value assigned, DefaultAssay SpaMTP Seurat Object used (default = DefaultAssay(object)). slot Character. data slot use (e.g., \"scale.data\") (default = \"scale.data\"). new.assay Character. Name new assay pathway scores stored (defaults = \"pathway\"). remove.nans Logical. Whether remove pathways NaN values (e.g., matched analytes) (defaults = TRUE).","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/CreatePathwayObject.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a SpaMTP Seurat Object containing expression values for all present pathways — CreatePathwayObject","text":"SpaMTP Seurat object new assay containing pathway-level expression scores. Feature names adjusted use underscores instead dashes.","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/CreatePathwayObject.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a SpaMTP Seurat Object containing expression values for all present pathways — CreatePathwayObject","text":"","code":"#object <- CreatePathwayObject(seurat_obj, assay = \"RNA\", slot = \"scale.data\")"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/DEMsHeatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Heatmap of Differentially Expressed Metabolites — DEMsHeatmap","title":"Heatmap of Differentially Expressed Metabolites — DEMsHeatmap","text":"Generates heatmap DEMs generated edgeR analysis run using FindAllDEMs(). function uses pheatmap plot data.","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/DEMsHeatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Heatmap of Differentially Expressed Metabolites — DEMsHeatmap","text":"","code":"DEMsHeatmap(   edgeR_output,   n = 5,   only.pos = FALSE,   FDR.threshold = 0.05,   logfc.threshold = 0.5,   order.by = \"FDR\",   scale = \"row\",   color = (grDevices::colorRampPalette(c(\"navy\", \"white\", \"red\")))(50),   cluster_cols = F,   cluster_rows = T,   fontsize_row = 15,   fontsize_col = 15,   cutree_cols = 9,   silent = TRUE,   plot_annotations_column = NULL,   save_to_path = NULL,   plot.save.width = 20,   plot.save.height = 20,   nlabels.to.show = NULL,   annotation_colors = NULL )"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/DEMsHeatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Heatmap of Differentially Expressed Metabolites — DEMsHeatmap","text":"edgeR_output list containing outputs edgeR analysis (FindAllDEMs()). includes pseudo-bulked counts DEMs. n numeric integer defines number regulated peaks plot (default = 25). .pos Boolean indicating positive markers returned (default = FALSE). FDR.threshold Numeric value defines FDR threshold use defining significant results (default = 0.05). logfc.threshold Numeric value defines logFC threshold use filtering significant results (default = 0.5). order.Character string defining parameter order markers , options either 'FDR' 'logFC' (default = \"FDR\"). scale character string indicating values centered scaled either row direction column direction, none. Corresponding values \"row\", \"column\" \"none\" color vector colors used heatmap (default = grDevices::colorRampPalette(c(\"navy\", \"white\", \"red\"))(50)). cluster_cols Boolean value determining columns clustered hclust object (default = F). cluster_rows Boolean value determining rows clustered hclust object (default = T). fontsize_row numeric value defining fontsize rownames (default = 15). fontsize_col numeric value defining fontsize colnames (default = 15). cutree_cols numeric value defining number clusters columns divided , based hierarchical clustering(using cutree), cols clustered, argument ignored (default = 9). silent Boolean value indicating plot draw (default = TRUE). plot_annotations_column Character string indicating column name contains metabolite annotations plot. Annotations = TRUE must used FindAllDEMs() edgeR output include annotations. plot_annotations_column = NULL, m/z vaues plotted (default = NULL). save_to_path Character string defining full filepath name plot saved . plot.save.width Integer value representing width saved pdf plot (default = 20). plot.save.height Integer value representing height saved pdf plot (default = 20). nlabels..show Numeric value defining number annotations show per m/z (default = NULL). annotation_colors List specifying annotation_row annotation_col track colors manually. Check pheatmap R-Package documentation details. set 'NA', default coloring used (default = NA).","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/DEMsHeatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Heatmap of Differentially Expressed Metabolites — DEMsHeatmap","text":"heatmap plot significantly differentially expressed metabolites defined edgeR ouput object.","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/DEMsHeatmap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Heatmap of Differentially Expressed Metabolites — DEMsHeatmap","text":"","code":"# DEMs <- FindAllDEMs(SeuratObj, \"sample\")  # DEMsHeatmap(DEMs)"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/DensityMap.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates interactive 3D spatial density plot for m/z values — DensityMap","title":"Generates interactive 3D spatial density plot for m/z values — DensityMap","text":"function generates interactive HTML file can used generate spatial density kernals based intensity selected m/z value.","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/DensityMap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates interactive 3D spatial density plot for m/z values — DensityMap","text":"","code":"DensityMap(object, assay = \"SPM\", slot = \"counts\", folder = getwd(), ...)"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/DensityMap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates interactive 3D spatial density plot for m/z values — DensityMap","text":"object SpaMTP Seurat object contains spatial metabolomics data assay Character string defining Seurat assay contains intensity values plot (default = \"SPM\"). slot Character string defining assay slot extract intensity values (default = \"counts\"). folder Character string defining directory path save density map HTML file (default = getwd()). ... Arguments passed SpaMTP::AnnotateSeuratMALDI()","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/DensityMap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates interactive 3D spatial density plot for m/z values — DensityMap","text":"Return html contains annotation/average intensity peakbins/density distribution peak","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/DensityMap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generates interactive 3D spatial density plot for m/z values — DensityMap","text":"","code":"# DensityMap(SpaMTP.obj)"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/FindAllDEMs.html","id":null,"dir":"Reference","previous_headings":"","what":"Finds differentially expressed m/z values/metabolites between all comparison groups. — FindAllDEMs","title":"Finds differentially expressed m/z values/metabolites between all comparison groups. — FindAllDEMs","text":"Finds differentially expressed m/z values/metabolites comparison groups.","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/FindAllDEMs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Finds differentially expressed m/z values/metabolites between all comparison groups. — FindAllDEMs","text":"","code":"FindAllDEMs(   data,   ident,   n = 3,   logFC_threshold = 1.2,   DE_output_dir = NULL,   run_name = \"FindAllDEMs\",   annotation.column = NULL,   assay = \"Spatial\",   slot = \"counts\",   return.individual = FALSE,   verbose = TRUE,   seed = 1234 )"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/FindAllDEMs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Finds differentially expressed m/z values/metabolites between all comparison groups. — FindAllDEMs","text":"data Seurat object containing mz values differential expression analysis. ident character string defining metadata column groups compare mz values . n integer defines number pseudo-replicates (pools) per sample (default = 3). logFC_threshold numeric value indicating logFC threshold use defining significant genes (default = 1.2). DE_output_dir character string defining directory path output files stored. path must new directory. Else, set NULL default. run_name character string defining title DE analysis used saving DEMs .csv file (default = 'FindAllDEMs'). annotation.column Character string defining column annotation information stored assay metadata. requires AnnotateSeuratMALDI() run default column store annotations \"all_IsomerNames\" (default = \"None\"). assay character string defining assay mz count data annotations stored (default = \"Spatial\"). slot Character string defining assay storage slot pull relative mz intensity values . Note: EdgeR requires raw counts, values must positive (default = \"counts\"). return.individual Boolean value defining whether return list individual edgeR objects designated ident. FALSE, one merged edgeR object returned (default = FALSE). verbose Boolean indicating whether show message. TRUE message show, else message suppressed (default = TRUE). seed Numeric value used set seed reproducible randomisation (default = 1234).","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/FindAllDEMs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Finds differentially expressed m/z values/metabolites between all comparison groups. — FindAllDEMs","text":"Returns list() contains EdgeR DE results. Pseudo-bulk counts stored $counts DEMs $DEMs.","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/FindAllDEMs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Finds differentially expressed m/z values/metabolites between all comparison groups. — FindAllDEMs","text":"","code":"# FindAllDEMs(SeuratObj, \"sample\",DE_output_dir = \"~/Documents/DE_output/\", annotations = TRUE)"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/FindCorrelatedFeatures.html","id":null,"dir":"Reference","previous_headings":"","what":"Find top features and metabolites that are strongly correlated with a given feature — FindCorrelatedFeatures","title":"Find top features and metabolites that are strongly correlated with a given feature — FindCorrelatedFeatures","text":"function returns list features ranked highest Pearson correlation score. specified feature corrleate can either m/z value, gene ident (.e. cluster). multi-omic data, metabolic transcriptomic assay can specified calculate correlation metabolites genes.","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/FindCorrelatedFeatures.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find top features and metabolites that are strongly correlated with a given feature — FindCorrelatedFeatures","text":"","code":"FindCorrelatedFeatures(   data,   mz = NULL,   gene = NULL,   ident = NULL,   SM.assay = \"SPM\",   ST.assay = NULL,   SM.slot = \"counts\",   ST.slot = \"counts\",   nfeatures = 10 )"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/FindCorrelatedFeatures.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find top features and metabolites that are strongly correlated with a given feature — FindCorrelatedFeatures","text":"data SpaMTP Seurat class object containing Spatial Transcriptomic Metabolic data assays. mz Numeric string specifying m/z find correlated features . One mz, gene ident must provided, alternatives must NULL (default = NULL). gene Character string specifying gene find correlated features . One mz, gene ident must provided, alternatives must NULL (default = NULL). ident Character string defining ident column data object's @meta.data slot find correlated features . One mz, gene ident must provided, alternatives must NULL (default = NULL). SM.assay Character string specifying name assay containing spatial metabolomics (SM) data (default = \"SPM\"). ST.assay Character string specifying name assay containing spatial transcriptomics (ST) data. NULL metabolites used (Default = NULL). SM.slot Character string specifying slot SM assay use (default = \"counts\"). ST.slot Character string specifying slot ST assay use (default = \"counts\"). nfeatures Integer specifying number top correlated features return (default = 10).","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/FindCorrelatedFeatures.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find top features and metabolites that are strongly correlated with a given feature — FindCorrelatedFeatures","text":"data frame containing top correlated features columns feature names correlation values.","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/FindCorrelatedFeatures.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find top features and metabolites that are strongly correlated with a given feature — FindCorrelatedFeatures","text":"","code":"# result <- FindCorrelatedFeatures(data = SpaMTP, gene = \"GeneX\", nfeatures = 5)"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/FindDuplicateAnnotations.html","id":null,"dir":"Reference","previous_headings":"","what":"Finds if any metabolite is duplicated across multiple m/z values. — FindDuplicateAnnotations","title":"Finds if any metabolite is duplicated across multiple m/z values. — FindDuplicateAnnotations","text":"Finds metabolite duplicated across multiple m/z values.","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/FindDuplicateAnnotations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Finds if any metabolite is duplicated across multiple m/z values. — FindDuplicateAnnotations","text":"","code":"FindDuplicateAnnotations(data, assay = \"Spatial\")"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/FindDuplicateAnnotations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Finds if any metabolite is duplicated across multiple m/z values. — FindDuplicateAnnotations","text":"data Seurat Spatial Metabolomic Object containing annotated m/z values. assay Character string defining Seurat assay contains annotated metadata corresponding m/z values (default = \"Spatial\").","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/FindDuplicateAnnotations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Finds if any metabolite is duplicated across multiple m/z values. — FindDuplicateAnnotations","text":"Vector character strings describing metabolites assigned multiple m/z values","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/FindDuplicateAnnotations.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Finds if any metabolite is duplicated across multiple m/z values. — FindDuplicateAnnotations","text":"","code":"# FindDuplicateAnnotations(SeuratObj)"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/FindNearestMZ.html","id":null,"dir":"Reference","previous_headings":"","what":"Finds the nearest m/z peak to a given value in a SpaMTP Object — FindNearestMZ","title":"Finds the nearest m/z peak to a given value in a SpaMTP Object — FindNearestMZ","text":"Finds nearest m/z peak given value SpaMTP Object","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/FindNearestMZ.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Finds the nearest m/z peak to a given value in a SpaMTP Object — FindNearestMZ","text":"","code":"FindNearestMZ(data, target_mz, assay = NULL)"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/FindNearestMZ.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Finds the nearest m/z peak to a given value in a SpaMTP Object — FindNearestMZ","text":"data Seurat Spatial Metabolomic object containing mz values target_mz Numeric value defining target m/z peak assay Character string indicating Seurat object assay pull data form. set NULL use current default assay based Seurat's DefaultAssay() function (default = NULL).","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/FindNearestMZ.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Finds the nearest m/z peak to a given value in a SpaMTP Object — FindNearestMZ","text":"String closest m/z value within given dataset","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/FindNearestMZ.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Finds the nearest m/z peak to a given value in a SpaMTP Object — FindNearestMZ","text":"","code":"# FindNearestMZ(SeuratObj, target_mz = 400.01)"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/FindRegionalPathways.html","id":null,"dir":"Reference","previous_headings":"","what":"Regional Pathway Enrichment — FindRegionalPathways","title":"Regional Pathway Enrichment — FindRegionalPathways","text":"function used compute gene/metabolites set enrichment multi-omics spatial data","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/FindRegionalPathways.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Regional Pathway Enrichment — FindRegionalPathways","text":"","code":"FindRegionalPathways(   SpaMTP,   ident,   DE.list,   analyte_types = c(\"genes\", \"metabolites\"),   SM_assay = \"SPM\",   ST_assay = \"SPT\",   SM_slot = \"counts\",   ST_slot = \"counts\",   min_path_size = 5,   max_path_size = 500,   pval_cutoff_mets = 0.05,   pval_cutoff_genes = 0.05,   verbose = TRUE )"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/FindRegionalPathways.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Regional Pathway Enrichment — FindRegionalPathways","text":"SpaMTP SpaMTP Seurat object contains spatial metabolomics(SM)/transcriptomics(ST) data , contains SM data, annotated via SpaMTP::AnnotateSM function. ident name character specific cluster vector regions SpaMTP@meta.data slot. DE.list list consisting differential expression data.frames input modality. Within data.frame column names MUST include 'cluster', 'gene', ('avg_log2FC' 'logFC') ('p_val_adj' 'FDR'). analyte_types Vector character strings defining analyte types use. Options can c(\"genes\"), c(\"metabolites\") (default = c(\"genes\", \"metabolites\")). SM_assay Character string defining describing slot name spatial metabolomics data SpaMTP extract intensity values (default = \"SPM\"). ST_assay Character string defining describing slot name spatial transcriptomics data SpaMTP extract RNA count values (default = \"SPT\"). SM_slot slot name containing SM assay matrix data (default = \"counts\"). ST_slot slot name containing ST assay matrix data (default = \"counts\"). min_path_size min number metabolites specific pathway (default = 5). max_path_size max number metabolites specific pathway (default = 500). pval_cutoff_mets numerical value defining adjusted p value cutoff significant differentially expressed metabolites. NULL cutoff = 0.05 (default = 0.05). pval_cutoff_genes numerical value defining adjusted p value cutoff significant differentially expressed genes. NULL cutoff = 0.05 (default = 0.05). verbose Boolean indicating whether show informative messages. FALSE messages suppressed (default = TRUE).","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/FindRegionalPathways.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Regional Pathway Enrichment — FindRegionalPathways","text":"SpaMTP object set enrichment given analyte types.","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/FindRegionalPathways.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Regional Pathway Enrichment — FindRegionalPathways","text":"","code":"# SpaMTP = FindRegionalPathways(SpaMTP, polarity = \"positive\")"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/FindSpatiallyVariableMetabolites.html","id":null,"dir":"Reference","previous_headings":"","what":"Find Spatially Variable Metabolites — FindSpatiallyVariableMetabolites","title":"Find Spatially Variable Metabolites — FindSpatiallyVariableMetabolites","text":"Finds metabolites display strong spatial patterns using MoransI. m/z value ranked MoransI score results stored SpaMTP Seurat Object feature metadata.","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/FindSpatiallyVariableMetabolites.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find Spatially Variable Metabolites — FindSpatiallyVariableMetabolites","text":"","code":"FindSpatiallyVariableMetabolites(   object,   assay = \"SPM\",   slot = \"counts\",   image = \"slice1\",   nfeatures = 2000,   verbose = TRUE )"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/FindSpatiallyVariableMetabolites.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find Spatially Variable Metabolites — FindSpatiallyVariableMetabolites","text":"object SpaMTP Seurat class object contating intensity values m/z assay Character string indicating Seurat object assay pull data form (default = \"SPM\"). slot Character string indicating assay slot use pull expression values form (default = \"counts\"). image Character string defining image extract tissue coordinates (defualt = \"slice1\"). nfeatures Numeric values defining top number features mark top spatially variable (default = 2000). verbose Boolean indicating whether show message. TRUE message show, else message suppressed (default = TRUE).","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/FindSpatiallyVariableMetabolites.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find Spatially Variable Metabolites — FindSpatiallyVariableMetabolites","text":"Returns SpaMTP object containing MoransI pvalue rank stored assay feature meta.data","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/FindSpatiallyVariableMetabolites.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find Spatially Variable Metabolites — FindSpatiallyVariableMetabolites","text":"","code":"# SpaMTP.obj <- FindSpatiallyVariableMetabolites(SpaMTP)"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/FishersPathwayAnalysis.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates Significant Metabolic Pathways using a Fisher Exact Test — FishersPathwayAnalysis","title":"Calculates Significant Metabolic Pathways using a Fisher Exact Test — FishersPathwayAnalysis","text":"Calculates Significant Metabolic Pathways using Fisher Exact Test","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/FishersPathwayAnalysis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates Significant Metabolic Pathways using a Fisher Exact Test — FishersPathwayAnalysis","text":"","code":"FishersPathwayAnalysis(   Analyte,   max_path_size = 500,   min_path_size = 5,   alternative = \"greater\",   pathway_all_info = FALSE,   pval_cutoff = NULL,   verbose = TRUE,   ... )"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/FishersPathwayAnalysis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates Significant Metabolic Pathways using a Fisher Exact Test — FishersPathwayAnalysis","text":"Analyte list analytes containing combination three possible elements, namely \"mzs\", \"genes\" /\"metabolites\". list must named titles, corresponding relative input datasets. Read supported input formats. max_path_size max number  specific pathway (default = 500). min_path_size min number  specific pathway (default = 5). alternative hypothesis fisher exact test (default = \"greater\"). pathway_all_info Whether included genes/ screened return (default = FALSE). pval_cutoff numerical value defining adjusted p value cutoff keeing significant pathways (default = NULL). verbose Boolean indicating whether show informative messages. FALSE messages suppressed (default = TRUE). ... Additional parameters can passed annotateTable() running mz-based analysis. Please see documentation annotateTable() details.","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/FishersPathwayAnalysis.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculates Significant Metabolic Pathways using a Fisher Exact Test — FishersPathwayAnalysis","text":"Supported metabolites format: strings contain metabolite ID database name. example = \"hmdb:HMDBX\", \"chebi:X\", \"pubchem:X\",\"wikidata:X\" ,\"kegg:X\" ,\"CAS:X\",\"lipidbank:X\",\"chemspider:X\",\"    LIPIDMAPS:X\" (X stands upper case cooresponding ID database) Supported genes data format: strings contain gene name formatting. example = \"entrez:X\", \"gene_symbol:X\", \"uniprot:X\", \"ensembl:X\", \"hmdb:HMDBPX\" Supported mzs format: string numeric vector contains m/z. NOTE: mzs values provided annotateTable() run using default parameters combining Chebi_db, Lipidmaps_db HMDB_db databases.","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/FishersPathwayAnalysis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates Significant Metabolic Pathways using a Fisher Exact Test — FishersPathwayAnalysis","text":"dataframe relevant pathway information","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/FishersPathwayAnalysis.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates Significant Metabolic Pathways using a Fisher Exact Test — FishersPathwayAnalysis","text":"","code":"## Running in 'mzs' mode: # FishersPathwayAnalysis(Analyte = list(\"mzs\" = mz_values), ppm_error = 3)  ## Running in 'metabolites' mode # FishersPathwayAnalysis(Analyte = list(\"metabolites\" = metabolite_ids))  ## Running 'metabolites' and 'genes' combined # FishersPathwayAnalysis(Analyte = list(\"metabolites\" = metabolite_ids, \"genes\" = gene_names))"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/GNPS_db.html","id":null,"dir":"Reference","previous_headings":"","what":"GNPS_db: A cleaned database of metabolites from GNPS — GNPS_db","title":"GNPS_db: A cleaned database of metabolites from GNPS — GNPS_db","text":"object contains collection metabolites Global Natural Products Social Molecular Networking (GNPS) platform.","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/GNPS_db.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GNPS_db: A cleaned database of metabolites from GNPS — GNPS_db","text":"","code":"GNPS_db"},{"path":[]},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/GNPS_db.html","id":"a-data-frame-with-rows-and-variables-","dir":"Reference","previous_headings":"","what":"A data frame with 489 rows and 37 variables:","title":"GNPS_db: A cleaned database of metabolites from GNPS — GNPS_db","text":"formula Chemical formula entity (character) exactmass Exact mass entity (numeric) isomers Presence isomers (character) isomers_inchikey InChIKeys isomers (character) isomers_names Names isomers (character) 2M-H Mass entity 2M-H ion (double) 2M+ACN+H Mass entity 2M+ACN+H ion (double) 2M+ACN+Na Mass entity 2M+ACN+Na ion (double) 2M+FA-H Mass entity 2M+FA-H ion (double) 2M+H Mass entity 2M+H ion (double) 2M+Hac-H Mass entity 2M+Hac-H ion (double) 2M+K Mass entity 2M+K ion (double) 2M+NH4 Mass entity 2M+NH4 ion (double) 2M+Na Mass entity 2M+Na ion (double) 3M-H Mass entity 3M-H ion (double) M+2ACN+H Mass entity M+2ACN+H ion (double) M+2K+H Mass entity M+2K+H ion (double) M+2Na-H Mass entity M+2Na-H ion (double) M+ACN+H Mass entity M+ACN+H ion (double) M+ACN+Na Mass entity M+ACN+Na ion (double) M+Br Mass entity M+Br ion (double) M+CH3OH+H Mass entity M+CH3OH+H ion (double) M+Cl Mass entity M+Cl ion (double) M+DMSO+H Mass entity M+DMSO+H ion (double) M+FA-H Mass entity M+FA-H ion (double) M+H Mass entity M+H ion (double) M+Hac-H Mass entity M+Hac-H ion (double) M+IsoProp+H Mass entity M+IsoProp+H ion (double) M+IsoProp+Na+H Mass entity M+IsoProp+Na+H ion (double) M+K Mass entity M+K ion (double) M+K-2H Mass entity M+K-2H ion (double) M+NH4 Mass entity M+NH4 ion (double) M+Na Mass entity M+Na ion (double) M+Na-2H Mass entity M+Na-2H ion (double) M+TFA-H Mass entity M+TFA-H ion (double) M-H Mass entity M-H ion (double) M-H2O-H Mass entity M-H2O-H ion (double)","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/GNPS_db.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"GNPS_db: A cleaned database of metabolites from GNPS — GNPS_db","text":"https://gnps.ucsd.edu/: https://gnps.ucsd.edu/","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/GetKmeanClusters.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform K-means clustering on a specified reduction — GetKmeanClusters","title":"Perform K-means clustering on a specified reduction — GetKmeanClusters","text":"function runs K-means clustering specified reduction SpaMTP Seurat object adds cluster assignments object metadata.","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/GetKmeanClusters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform K-means clustering on a specified reduction — GetKmeanClusters","text":"","code":"GetKmeanClusters(   data,   reduction = \"SpatialPCA\",   cluster.name = \"spatial_clusters\",   clusters = 8,   iter.max = 10,   nstart = 1,   algorithm = c(\"Hartigan-Wong\", \"Lloyd\", \"Forgy\", \"MacQueen\"),   trace = FALSE,   seed = 888 )"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/GetKmeanClusters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform K-means clustering on a specified reduction — GetKmeanClusters","text":"data SpaMTP Seurat object containing results RunSpatialGraphPCA(). reduction Character string stating name reduction slot use (default = \"SpatialPCA\"). cluster.name Character string name metadata column store cluster labels (default = \"spatial_clusters\"). clusters Integer defining number clusters form (default = 8). iter.max Integer defining maximum number iterations allowed (default = 10). nstart Integer stating number random sets choose (default = 1). algorithm Character string defining K-means algorithm use. One \"Hartigan-Wong\", \"Lloyd\", \"Forgy\", \"MacQueen\" (default = \"Hartigan-Wong\"). trace Logical boolean indicating whether produce tracing information progress algorithm (default = FALSE). seed Integer random seed use reproducibility (default = 888).","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/GetKmeanClusters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform K-means clustering on a specified reduction — GetKmeanClusters","text":"SpaMTP Seurat object new metadata column containing K-means cluster assignments.","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/GetKmeanClusters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform K-means clustering on a specified reduction — GetKmeanClusters","text":"","code":"# seurat_object <- GetKmeanClusters(spamtp_obj, reduction = \"SpatialPCA\", centers = 8, cluster.name = \"test_clusters\") # SpatialDimPlot(spamtp_obj, group.by = \"test_clusters\")"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/GetMZMetadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Gets values from a single metadata column for a respective m/z value. — GetMZMetadata","title":"Gets values from a single metadata column for a respective m/z value. — GetMZMetadata","text":"Gets values single metadata column respective m/z value.","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/GetMZMetadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gets values from a single metadata column for a respective m/z value. — GetMZMetadata","text":"","code":"GetMZMetadata(   obj,   mz,   assay = \"Spatial\",   metadata.column = \"all_IsomerNames\",   separate = TRUE )"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/GetMZMetadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gets values from a single metadata column for a respective m/z value. — GetMZMetadata","text":"obj SpaMTP Spatial Metabolomic Seurat Object containing annotated m/z values. mz Character string specifying m/z value return metadata . assay Character string defining Seurat assay contains annotated metadata corresponding m/z values (default = \"Spatial\"). metadata.column Character string corresponding @meta.data column extract data (default = \"all_IsomerNames\"). separate Boolean indicating whether separate metadata string return vector. Note, TRUE metadata column contain values separate \"; \" (default = TRUE).","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/GetMZMetadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gets values from a single metadata column for a respective m/z value. — GetMZMetadata","text":"Vector character strings containing metadata specific mz value.","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/GetMZMetadata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Gets values from a single metadata column for a respective m/z value. — GetMZMetadata","text":"","code":"# GetMZMetadata(SpaMTP, mz = \"mz-100\", metadata.column = \"all_IsomerNames\")  ##### Example for getting metabolite annotation IDs for a m/z value # GetMZMetadata(SpaMTP, mz = \"mz-100\", metadata.column = \"all_Isomers\")"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/GetSpatiallyVariableMetabolites.html","id":null,"dir":"Reference","previous_headings":"","what":"Get top spatially variable metabolites — GetSpatiallyVariableMetabolites","title":"Get top spatially variable metabolites — GetSpatiallyVariableMetabolites","text":"function returns names top n number spatially variable features.","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/GetSpatiallyVariableMetabolites.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get top spatially variable metabolites — GetSpatiallyVariableMetabolites","text":"","code":"GetSpatiallyVariableMetabolites(object, assay = \"SPM\", n = 10)"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/GetSpatiallyVariableMetabolites.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get top spatially variable metabolites — GetSpatiallyVariableMetabolites","text":"object SpaMTP Seurat class object containing intensity values m/z assay Character string indicating Seurat object assay pull data form (default = \"SPM\"). n Numeric value defining top number metabolites return (default = 10).","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/GetSpatiallyVariableMetabolites.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get top spatially variable metabolites — GetSpatiallyVariableMetabolites","text":"Vector containing m/z feature names corresponding top n number spatially variable metabolites","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/GetSpatiallyVariableMetabolites.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get top spatially variable metabolites — GetSpatiallyVariableMetabolites","text":"","code":"# features <- GetSpatiallyVariableMetabolites(SpaMTP, n = 6)"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/HMDB_db.html","id":null,"dir":"Reference","previous_headings":"","what":"HMDB_db: A cleaned version of the reference metabolomics dataset from the Human Metabolome Database (HMDB) — HMDB_db","title":"HMDB_db: A cleaned version of the reference metabolomics dataset from the Human Metabolome Database (HMDB) — HMDB_db","text":"dataset containing metabolite information HMDB, including chemical formulas, exact masses, isomers, InChIKeys, names.","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/HMDB_db.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"HMDB_db: A cleaned version of the reference metabolomics dataset from the Human Metabolome Database (HMDB) — HMDB_db","text":"","code":"HMDB_db"},{"path":[]},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/HMDB_db.html","id":"a-data-frame-with-rows-and-variables-","dir":"Reference","previous_headings":"","what":"A data frame with 26190 rows and 37 variables:","title":"HMDB_db: A cleaned version of the reference metabolomics dataset from the Human Metabolome Database (HMDB) — HMDB_db","text":"formula Chemical formula entity (character) exactmass Exact mass entity (numeric) isomers Presence isomers (character) isomers_inchikey InChIKeys isomers (character) isomers_names Names isomers (character) 2M-H Mass entity 2M-H ion (double) 2M+ACN+H Mass entity 2M+ACN+H ion (double) 2M+ACN+Na Mass entity 2M+ACN+Na ion (double) 2M+FA-H Mass entity 2M+FA-H ion (double) 2M+H Mass entity 2M+H ion (double) 2M+Hac-H Mass entity 2M+Hac-H ion (double) 2M+K Mass entity 2M+K ion (double) 2M+NH4 Mass entity 2M+NH4 ion (double) 2M+Na Mass entity 2M+Na ion (double) 3M-H Mass entity 3M-H ion (double) M+2ACN+H Mass entity M+2ACN+H ion (double) M+2K+H Mass entity M+2K+H ion (double) M+2Na-H Mass entity M+2Na-H ion (double) M+ACN+H Mass entity M+ACN+H ion (double) M+ACN+Na Mass entity M+ACN+Na ion (double) M+Br Mass entity M+Br ion (double) M+CH3OH+H Mass entity M+CH3OH+H ion (double) M+Cl Mass entity M+Cl ion (double) M+DMSO+H Mass entity M+DMSO+H ion (double) M+FA-H Mass entity M+FA-H ion (double) M+H Mass entity M+H ion (double) M+Hac-H Mass entity M+Hac-H ion (double) M+IsoProp+H Mass entity M+IsoProp+H ion (double) M+IsoProp+Na+H Mass entity M+IsoProp+Na+H ion (double) M+K Mass entity M+K ion (double) M+K-2H Mass entity M+K-2H ion (double) M+NH4 Mass entity M+NH4 ion (double) M+Na Mass entity M+Na ion (double) M+Na-2H Mass entity M+Na-2H ion (double) M+TFA-H Mass entity M+TFA-H ion (double) M-H Mass entity M-H ion (double) M-H2O-H Mass entity M-H2O-H ion (double)","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/HMDB_db.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"HMDB_db: A cleaned version of the reference metabolomics dataset from the Human Metabolome Database (HMDB) — HMDB_db","text":"https://hmdb.ca/","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/HMDB_db.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"HMDB_db: A cleaned version of the reference metabolomics dataset from the Human Metabolome Database (HMDB) — HMDB_db","text":"Wishart DS, et al. (2022). HMDB 5.0: Human Metabolome Database 2022. Nucleic Acids Res. 50(D1):D622-D631.","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/ImageMZAnnotationPlot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot expression of annotated metabolites spatially — ImageMZAnnotationPlot","title":"Plot expression of annotated metabolites spatially — ImageMZAnnotationPlot","text":"plotting annotated SM data SpaMTP Seurat Object contain image(.e. H&E image). function inputs metabolite name 'Glutamine' rather specific m/z value. m/z values please use ImageMZPlot().function inherits Seurat::ImageFeaturePlot().","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/ImageMZAnnotationPlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot expression of annotated metabolites spatially — ImageMZAnnotationPlot","text":"","code":"ImageMZAnnotationPlot(   object,   metabolites,   plusminus = NULL,   fov = NULL,   boundaries = NULL,   cols = if (isTRUE(x = blend)) {      c(\"lightgrey\", \"#ff0000\", \"#00ff00\")  } else {          c(\"lightgrey\", \"firebrick1\")  },   size = 0.5,   min.cutoff = NA,   max.cutoff = NA,   split.by = NULL,   molecules = NULL,   mols.size = 0.1,   mols.cols = NULL,   nmols = 1000,   alpha = 1,   border.color = \"white\",   border.size = NULL,   dark.background = TRUE,   blend = FALSE,   blend.threshold = 0.5,   crop = FALSE,   cells = NULL,   scale = c(\"feature\", \"all\", \"none\"),   overlap = FALSE,   axes = FALSE,   combine = TRUE,   coord.fixed = TRUE,   assay = \"Spatial\",   slot = \"data\",   column.name = \"all_IsomerNames\",   plot.exact = TRUE,   plot.pixel = FALSE,   verbose = TRUE )"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/ImageMZAnnotationPlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot expression of annotated metabolites spatially — ImageMZAnnotationPlot","text":"object Seurat Spatial Metabolomic Object Visualise. metabolites Vector metabolite names plot (e.g. c(\"Glucose\", \"Glutamine\")). Seurat Object provided must contain annotations respective assay metadata. plusminus Numeric value defining range/threshold either side target peak/peaks binned together plotting (default = NULL). fov Character string name FOV plot (default = NULL). boundaries vector segmentation boundaries per image plot (default = NULL). cols Vector character strings defining colours used plotting (default = c(\"lightgrey\", \"firebrick1\")). size Numeric value defining point size cells/spots plotting (default = 0.5). min.cutoff Vector numeric value describing minimum cutoff values m/z feature (default = NA). max.cutoff Vector numeric value describing maximum cutoff values m/z feature (default = NA). split.Character string defining factor Seurat Object metadata split feature plot (default = NULL). molecules Vector character strings describing molecules plot (default = NULL). mols.size Numeric value point size molecules plot (default = 0.1). mols.cols vector colours molecules plot (default = NULL). nmols Integer max number molecule specified 'molecules' plot (default = 1000). alpha Numeric value 0 1 defining spot alpha (default = 1). border.color Character string specifying colour spot/cell border (default = white). border.size Numeric value thickness cell segmentation border (default = NULL). dark.background Boolean value indicating plot background coloured black (default = FALSE). blend Boolean value indicating whether scale blend expression values visualize coexpression two features (default = FALSE). blend.threshold Numeric value defining color cutoff weak signal strong signal; ranges 0 1 (default = 0.5). crop Boolean value whether crop plots area cells (default = FALSE). cells Vector character strings defining group cells plot (default = NUll; plots cells). scale Set color scaling across multiple plots; c(\"features\", \"\", \"none\"). overlap Overlay boundaries single image create single plot (default = FALSE). axes Boolean defining keep axes panel background (default = FALSE). combine Boolean value stating combine plots single patchworked ggplot object (default = TRUE). coord.fixed Boolean value plot cartesian coordinates fixed aspect ratio (default = TURE). assay Character string indicating Seurat object assay pull data form (default = \"Spatial\"). slot Character string indicating assay slot use pull expression values form (default = \"counts\"). column.name Character string defining column name annotations stored slot meta.data (default = \"all_IsomerNames\"). plot.exact Boolean value describing plot exact matches metabolite search terms, else plot metabolites contain serach word name (default = TRUE). plot.pixel Boolean indicating plot display pixel square shapes, false plot spots (deafult = FALSE). verbose Boolean indicating whether show message. TRUE message show, else message suppressed (default = TRUE).","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/ImageMZAnnotationPlot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot expression of annotated metabolites spatially — ImageMZAnnotationPlot","text":"ggplot showing Spatial representation expression data specified metabolites.","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/ImageMZAnnotationPlot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot expression of annotated metabolites spatially — ImageMZAnnotationPlot","text":"","code":"# ImageMZPlot(SeuratObj, mzs = c(\"Glucose\", \"Glutamine\")) # ImageMZPlot(SeuratObj, mzs = c(\"Glucose\", \"Glutamine\"), plusminus = 0.05)"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/ImageMZPlot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot expression of m/z values spatially — ImageMZPlot","title":"Plot expression of m/z values spatially — ImageMZPlot","text":"plotting SM data SpaMTP Seurat Object contain image(.e. H&E image). function inherits Seurat::ImageFeaturePlot().","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/ImageMZPlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot expression of m/z values spatially — ImageMZPlot","text":"","code":"ImageMZPlot(   object,   mzs,   plusminus = NULL,   fov = NULL,   boundaries = NULL,   cols = if (isTRUE(x = blend)) {      c(\"lightgrey\", \"#ff0000\", \"#00ff00\")  } else {          c(\"lightgrey\", \"firebrick1\")  },   size = 0.5,   min.cutoff = NA,   max.cutoff = NA,   split.by = NULL,   molecules = NULL,   mols.size = 0.1,   mols.cols = NULL,   nmols = 1000,   alpha = 1,   border.color = \"white\",   border.size = NULL,   dark.background = TRUE,   blend = FALSE,   blend.threshold = 0.5,   crop = FALSE,   cells = NULL,   scale = c(\"feature\", \"all\", \"none\"),   overlap = FALSE,   axes = FALSE,   combine = TRUE,   coord.fixed = TRUE,   assay = \"Spatial\",   slot = \"data\",   plot.pixel = FALSE,   verbose = TRUE )"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/ImageMZPlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot expression of m/z values spatially — ImageMZPlot","text":"object Seurat Spatial Metabolomic Object Visualise. mzs Vector numeric m/z values plot (e.g. c(400.1578, 300.1)). function FindNearestMZ() used automatically find nearest m/z value ones given. plusminus Numeric value defining range/threshold either side target peak/peaks binned together plotting (default = NULL). fov Character string name FOV plot (default = NULL). boundaries vector segmentation boundaries per image plot (default = NULL). cols Vector character strings defining colours used plotting (default = c(\"lightgrey\", \"firebrick1\")). size Numeric value defining point size cells/spots plotting (default = 0.5). min.cutoff Vector numeric value describing minimum cutoff values m/z feature (default = NA). max.cutoff Vector numeric value describing maximum cutoff values m/z feature (default = NA). split.Character string defining factor Seurat Object metadata split feature plot (default = NULL). molecules Vector character strings describing molecules plot (default = NULL). mols.size Numeric value point size molecules plot (default = 0.1). mols.cols vector colours molecules plot (default = NULL). nmols Integer max number molecule specified 'molecules' plot (default = 1000). alpha Numeric value 0 1 defining image alpha (default = 1). border.color Character string specifying colour spot/cell border (default = white). border.size Numeric value thickness cell segmentation border (default = NULL). dark.background Boolean value indicating plot background coloured black (default = FALSE). blend Boolean value indicating whether scale blend expression values visualize coexpression two features (default = FALSE). blend.threshold Numeric value defining color cutoff weak signal strong signal; ranges 0 1 (default = 0.5). crop Boolean value whether crop plots area cells (default = FALSE). cells Vector character strings defining group cells plot (default = NUll; plots cells). scale Set color scaling across multiple plots; c(\"features\", \"\", \"none\"). overlap Overlay boundaries single image create single plot (default = FALSE). axes Boolean defining keep axes panel background (default = FALSE). combine Boolean value stating combine plots single patchworked ggplot object (default = TRUE). coord.fixed Boolean value plot cartesian coordinates fixed aspect ratio (default = TURE). assay Character string indicating Seurat object assay pull data form (default = \"Spatial\"). slot Character string indicating assay slot use pull expression values form (default = \"counts\"). plot.pixel Boolean indicating plot display pixel square shapes, false plot spots (deafult = FALSE). verbose Boolean indicating whether show message. TRUE message show, else message suppressed (default = TRUE).","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/ImageMZPlot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot expression of m/z values spatially — ImageMZPlot","text":"ggplot showing Spatial representation expression data specified m/z values","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/ImageMZPlot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot expression of m/z values spatially — ImageMZPlot","text":"","code":"# ImageMZPlot(SeuratObj, mzs = c(400.678, 300.1)) # ImageMZPlot(SeuratObj, mzs = c(400.678, 300.1), plusminus = 0.05)"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/InteractiveSpatialPlot.html","id":null,"dir":"Reference","previous_headings":"","what":"Interactive Spatial Plot for visualising different m/z bin sizes — InteractiveSpatialPlot","title":"Interactive Spatial Plot for visualising different m/z bin sizes — InteractiveSpatialPlot","text":"function implements shinyApp interactive viusalisation samples mean mass intensity spectra. Users can adjust resolution/bin size observe changes spatial expression respectively.","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/InteractiveSpatialPlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interactive Spatial Plot for visualising different m/z bin sizes — InteractiveSpatialPlot","text":"","code":"InteractiveSpatialPlot(   obj,   assay = \"Spatial\",   slot = \"counts\",   image = \"slice1\" )"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/InteractiveSpatialPlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interactive Spatial Plot for visualising different m/z bin sizes — InteractiveSpatialPlot","text":"obj SpaMTP object containing intensity data plot. assay Character defining Seurat object assay extract intensity data (default = \"Spatial\"). slot Character defining Seurat object assay slot extract intensity data (default = \"counts\"). image Character defining name image use tissue coordinates spatial plotting (default = \"slice1\").","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/InteractiveSpatialPlot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Interactive Spatial Plot for visualising different m/z bin sizes — InteractiveSpatialPlot","text":"","code":"#InteractiveSpatialPlot(spamtp)"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/Lipidmaps_db.html","id":null,"dir":"Reference","previous_headings":"","what":"Lipidmaps_db: A cleaned version of the lipid database from LIPID MAPS — Lipidmaps_db","title":"Lipidmaps_db: A cleaned version of the lipid database from LIPID MAPS — Lipidmaps_db","text":"object contains collection lipids LIPID MAPS Structure Database.","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/Lipidmaps_db.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lipidmaps_db: A cleaned version of the lipid database from LIPID MAPS — Lipidmaps_db","text":"","code":"Lipidmaps_db"},{"path":[]},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/Lipidmaps_db.html","id":"a-data-frame-with-rows-and-variables-","dir":"Reference","previous_headings":"","what":"A data frame with 9493 rows and 37 variables:","title":"Lipidmaps_db: A cleaned version of the lipid database from LIPID MAPS — Lipidmaps_db","text":"formula Chemical formula entity (character) exactmass Exact mass entity (numeric) isomers Presence isomers (character) isomers_inchikey InChIKeys isomers (character) isomers_names Names isomers (character) 2M-H Mass entity 2M-H ion (double) 2M+ACN+H Mass entity 2M+ACN+H ion (double) 2M+ACN+Na Mass entity 2M+ACN+Na ion (double) 2M+FA-H Mass entity 2M+FA-H ion (double) 2M+H Mass entity 2M+H ion (double) 2M+Hac-H Mass entity 2M+Hac-H ion (double) 2M+K Mass entity 2M+K ion (double) 2M+NH4 Mass entity 2M+NH4 ion (double) 2M+Na Mass entity 2M+Na ion (double) 3M-H Mass entity 3M-H ion (double) M+2ACN+H Mass entity M+2ACN+H ion (double) M+2K+H Mass entity M+2K+H ion (double) M+2Na-H Mass entity M+2Na-H ion (double) M+ACN+H Mass entity M+ACN+H ion (double) M+ACN+Na Mass entity M+ACN+Na ion (double) M+Br Mass entity M+Br ion (double) M+CH3OH+H Mass entity M+CH3OH+H ion (double) M+Cl Mass entity M+Cl ion (double) M+DMSO+H Mass entity M+DMSO+H ion (double) M+FA-H Mass entity M+FA-H ion (double) M+H Mass entity M+H ion (double) M+Hac-H Mass entity M+Hac-H ion (double) M+IsoProp+H Mass entity M+IsoProp+H ion (double) M+IsoProp+Na+H Mass entity M+IsoProp+Na+H ion (double) M+K Mass entity M+K ion (double) M+K-2H Mass entity M+K-2H ion (double) M+NH4 Mass entity M+NH4 ion (double) M+Na Mass entity M+Na ion (double) M+Na-2H Mass entity M+Na-2H ion (double) M+TFA-H Mass entity M+TFA-H ion (double) M-H Mass entity M-H ion (double) M-H2O-H Mass entity M-H2O-H ion (double)","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/Lipidmaps_db.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Lipidmaps_db: A cleaned version of the lipid database from LIPID MAPS — Lipidmaps_db","text":"https://www.lipidmaps.org/","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/LoadSM.html","id":null,"dir":"Reference","previous_headings":"","what":"Loads spatial metabolic data into a SpaMTP Seurat Object — LoadSM","title":"Loads spatial metabolic data into a SpaMTP Seurat Object — LoadSM","text":"function loads raw spatial metabolic data .imzML .ibd format generates SpaMTP Seurat Object. function adapts readImzML function implmented Cardinal correctly import large data.","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/LoadSM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Loads spatial metabolic data into a SpaMTP Seurat Object — LoadSM","text":"","code":"LoadSM(   file,   mass.range = NULL,   resolution = NA,   units = \"ppm\",   verbose = TRUE,   assay = \"Spatial\",   multi.run = FALSE )"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/LoadSM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Loads spatial metabolic data into a SpaMTP Seurat Object — LoadSM","text":"file Character string defining directory path file file name. mass.range Vector numeric values indicating mass range use imported data (default = NULL). resolution Numeric value defining accuracy m/z values binned reading. value can either \"ppm\" \"mz\" depending units type specified (default = 10). units Character string defining resolution value unit type, either c(\"ppm\", \"mz\") (default = \"ppm\") verbose Boolean indicating whether show informative processing messages. TRUE message show, else message suppressed (default = TRUE) assay Character string describing name new assay stores imported data (default = \"Spatial\"). multi.run Boolean indicating multiple runs within imported data. TRUE, index added pixel names per run, individual FOV generated per run Seurat Object (default = FALSE).","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/LoadSM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Loads spatial metabolic data into a SpaMTP Seurat Object — LoadSM","text":"new SpaMTP Seurat object contain imported spatial metabolic intensity values","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/LoadSM.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Loads spatial metabolic data into a SpaMTP Seurat Object — LoadSM","text":"","code":"# data <-LoadSM(name = \"run1\", folder = \"/Documents/SpaMTP_test_data/\", mass.range = c(160,1500), resolution = 10, assay = \"Spatial\")"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/Load_METASPACE.html","id":null,"dir":"Reference","previous_headings":"","what":"Load METASPACE Data and Create Seurat Object — Load_METASPACE","title":"Load METASPACE Data and Create Seurat Object — Load_METASPACE","text":"Downloads METASPACE data, converts feature matrix, packages Seurat object spatial metadata.","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/Load_METASPACE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load METASPACE Data and Create Seurat Object — Load_METASPACE","text":"","code":"Load_METASPACE(   dataset_id,   fdr = 0.1,   database = c(\"HMDB\", \"v4\"),   api_key = NULL,   relative = FALSE,   transform = FALSE,   verbose = TRUE )"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/Load_METASPACE.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load METASPACE Data and Create Seurat Object — Load_METASPACE","text":"dataset_id Character string METASPACE dataset ID. fdr Numeric, FDR level threshold (default = 0.1). database Character vector, specifying database name version (default = c(\"HMDB\", \"v4\")). api_key Optional character string, METASPACE API key (default = NULL). relative Logical, TRUE, normalizes pixel intensities (0-1 range) (default = FALSE). transform Boolean specifiying whether transform/flip image (default = FALSE). verbose Boolean indicating whether show message. TRUE message show, else message suppressed (default = TRUE).","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/Load_METASPACE.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load METASPACE Data and Create Seurat Object — Load_METASPACE","text":"Seurat object initialized METASPACE data 'Spatial' assay.","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/Load_METASPACE.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load METASPACE Data and Create Seurat Object — Load_METASPACE","text":"","code":"# Load_METASPACE(dataset_id = \"2020-12-07_03h16m14s\", fdr = 0.1, database= c(\"HMDB\", \"v4\"), relative = TRUE)"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/MZBoxPlot.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates a Boxplot of spatial metabolic intensity data — MZBoxPlot","title":"Generates a Boxplot of spatial metabolic intensity data — MZBoxPlot","text":"Generates Boxplot spatial metabolic intensity data","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/MZBoxPlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates a Boxplot of spatial metabolic intensity data — MZBoxPlot","text":"","code":"MZBoxPlot(   seurat.obj,   group.by = NULL,   mzs = NULL,   assay = \"Spatial\",   slot = \"counts\",   title = \"BoxPlot\",   x.lab = \"var\",   y.lab = \"intensity\",   show.points = TRUE,   bottom.cutoff = NULL,   top.cutoff = NULL,   log.data = FALSE,   cols = NULL,   verbose = FALSE )"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/MZBoxPlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates a Boxplot of spatial metabolic intensity data — MZBoxPlot","text":"seurat.obj Seurat object containing metabolomic intensity data. group.Character string specifying meta.data column group (default = NULL). mzs Vector characters defining features (m/z's) label plot. NULL features labeled (default = NULL). assay Character string defining name Seurat Object assay pull corresponding intensity data (default = \"Spatial\"). slot Character string defining name slot within Seurat Object assay pull corresponding intensity data (default = \"counts\"). title Character string plot title (default = \"BoxPlot\"). x.lab Character string x-axis label (default = \"var\"). y.lab Character string y-axis label (default = \"intensity\"). show.points Boolean value describing whether show individual data point (default = TRUE). bottom.cutoff Numeric value defining percent data exclude lower end distribution. bottom.cutoff = 0.05 remove bottom 5% data point (default = NULL). top.cutoff Numeric value defining percent data exclude upper end distribution. top.cutoff = 0.05 remove top 5% data point (default = NULL). log.data Boolean value indicating whether log transform y-axis values (default = FALSE). cols Vector strings defining colours use plotting. vector match length unique groups (default = NULL). verbose Boolean indicating whether show message. TRUE message show, else message suppressed (default = FALSE).","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/MZBoxPlot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generates a Boxplot of spatial metabolic intensity data — MZBoxPlot","text":"","code":"# MZBoxPlot(SeuratObj, group.by = \"sample\",  bottom.cutoff = 0.05)"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/MZRidgePlot.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates a ridge plot of spatial metabolic intensity data — MZRidgePlot","title":"Generates a ridge plot of spatial metabolic intensity data — MZRidgePlot","text":"Generates ridge plot spatial metabolic intensity data","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/MZRidgePlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates a ridge plot of spatial metabolic intensity data — MZRidgePlot","text":"","code":"MZRidgePlot(   seurat.obj,   group.by = NULL,   mzs = NULL,   assay = \"Spatial\",   slot = \"counts\",   title = \"RidgePlot\",   x.lab = \"intensity\",   y.lab = \"var\",   bottom.cutoff = NULL,   top.cutoff = NULL,   bins = 1000,   log.data = FALSE,   cols = NULL,   verbose = FALSE )"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/MZRidgePlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates a ridge plot of spatial metabolic intensity data — MZRidgePlot","text":"seurat.obj Seurat object containing metabolomic intensity data. group.Character string specifying meta.data column group (default = NULL). mzs Vector characters defining features (m/z's) label plot. NULL features labeled (default = NULL). assay Character string defining name Seurat Object assay pull corresponding intensity data (default = \"Spatial\"). slot Character string defining name slot within Seurat Object assay pull corresponding intensity data (default = \"counts\"). title Character string plot title (default = \"RidgePlot\"). x.lab Character string x-axis label (default = \"var\"). y.lab Character string y-axis label (default = \"intensity\"). bottom.cutoff Numeric value defining percent data exclude lower end distribution. bottom.cutoff = 0.05 remove bottom 5% data point (default = NULL). top.cutoff Numeric value defining percent data exclude upper end distribution. top.cutoff = 0.05 remove top 5% data point (default = NULL). bins number bins group log.data Boolean value indicating whether log transform y-axis values (default = FALSE). cols Vector strings defining colours use plotting. vector match length unique groups (default = NULL). verbose Boolean indicating whether show message. TRUE message show, else message suppressed (default = FALSE).","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/MZRidgePlot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generates a ridge plot of spatial metabolic intensity data — MZRidgePlot","text":"","code":"# MZRidgePlot(SeuratObj, group.by = \"sample\")"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/MZVlnPlot.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates a violin plot of spatial metabolic intensity data — MZVlnPlot","title":"Generates a violin plot of spatial metabolic intensity data — MZVlnPlot","text":"Generates violin plot spatial metabolic intensity data","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/MZVlnPlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates a violin plot of spatial metabolic intensity data — MZVlnPlot","text":"","code":"MZVlnPlot(   seurat.obj,   group.by = NULL,   mzs = NULL,   assay = \"Spatial\",   slot = \"counts\",   title = \"VlnPlot\",   x.lab = \"var\",   y.lab = \"intensity\",   show.points = TRUE,   bottom.cutoff = NULL,   top.cutoff = NULL,   log.data = FALSE,   cols = NULL,   verbose = FALSE )"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/MZVlnPlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates a violin plot of spatial metabolic intensity data — MZVlnPlot","text":"seurat.obj Seurat object containing metabolomic intensity data. group.Character string specifying meta.data column group (default = NULL). mzs Vector characters defining features (m/z's) label plot. NULL features labeled (default = NULL). assay Character string defining name Seurat Object assay pull corresponding intensity data (default = \"Spatial\"). slot Character string defining name slot within Seurat Object assay pull corresponding intensity data (default = \"counts\"). title Character string plot title (default = \"VlnPlot\"). x.lab Character string x-axis label (default = \"var\"). y.lab Character string y-axis label (default = \"intensity\"). show.points Boolean value describing whether show individual data point (default = TRUE). bottom.cutoff Numeric value defining percent data exclude lower end distribution. bottom.cutoff = 0.05 remove bottom 5% data point (default = NULL). top.cutoff Numeric value defining percent data exclude upper end distribution. top.cutoff = 0.05 remove top 5% data point (default = NULL). log.data Boolean value indicating whether log transform y-axis values (default = FALSE). cols Vector strings defining colours use plotting. vector match length unique groups (default = NULL). verbose Boolean indicating whether show message. TRUE message show, else message suppressed (default = FALSE).","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/MZVlnPlot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generates a violin plot of spatial metabolic intensity data — MZVlnPlot","text":"","code":"# MZVlnPlot(SeuratObj, group.by = \"sample\",  bottom.cutoff = 0.05)"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/MapSpatialOmics.html","id":null,"dir":"Reference","previous_headings":"","what":"Maps Spatial Metabolomic (MALDI) data to corresponding Spatial Transcriptomics data and coordinates. — MapSpatialOmics","title":"Maps Spatial Metabolomic (MALDI) data to corresponding Spatial Transcriptomics data and coordinates. — MapSpatialOmics","text":"Maps Spatial Metabolomic (MALDI) data corresponding Spatial Transcriptomics data coordinates.","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/MapSpatialOmics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Maps Spatial Metabolomic (MALDI) data to corresponding Spatial Transcriptomics data and coordinates. — MapSpatialOmics","text":"","code":"MapSpatialOmics(   SM.data,   ST.data,   ST.hires = FALSE,   SM.assay = \"Spatial\",   ST.assay = \"Spatial\",   SM.fov = \"fov\",   ST.image = \"slice1\",   ST.scale.factor = \"hires\",   SM.pixel.width = NULL,   overlap.threshold = 0.2,   annotations = TRUE,   add.metadata = TRUE,   merge.unique.metadata = TRUE,   map.data = FALSE,   new_SPT.assay = \"SPT\",   new_SPM.assay = \"SPM\",   verbose = FALSE )"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/MapSpatialOmics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Maps Spatial Metabolomic (MALDI) data to corresponding Spatial Transcriptomics data and coordinates. — MapSpatialOmics","text":"SM.data SpaMTP Seurat object representing Spatial Metabolomics data. ST.data Seurat object representing Spatial Transcriptomics data. ST.hires Boolean string defining ST data higher resolution compared SM pixel data. example, generally Visium data lower res whereas Xenium/single-cell resolution spatial data higher resolution (default = FALSE). SM.assay Character string defining Seurat assay contains annotated counts metadata corresponding m/z values (default = \"Spatial\"). ST.assay Character string specifying current assay use extract transcriptional data (default = \"Spatial\"). SM.fov Character string image fov associated spatial metabolomic data (default = \"fov\"). ST.image Character string matching image name associated ST data 'fov' 'slice1' object (default = \"slice1\"). ST.scale.factor Character string defining image resolution associated Visium image pixel data. NULL full-res coordinates used scaling performed. Note: parameter required aligning lowres ST data (default = \"hires\"). SM.pixel.width Numeric value defining width SM pixel. set NULL, median pixel width calculated based distance pixel (default = NULL). overlap.threshold Numeric value defining overlap proportion threshold SM pixel associated ST spot. example, res_increase = 0.2 pixels least 20% area overlap respective visium spot assigned match. Note: parameter required aligning lowres ST data (default = 0.2). annotations Boolean value indicating Spatial Metabolomics (MALDI) Seurat object contains annotations assigned m/z values (default = TRUE). add.metadata Boolean defining whether add current metadata stored SM object new mapped multi-omic SpaMTP object (default = TRUE) merge.unique.metadata Boolean indicating whether summaries duplicated metadata terms store unique values metadata. Note: parameter required aligning lowres ST data, add.metadata must set TRUE functionality implemented (default = TRUE). map.data Boolean indicating whether map normalised/additional data stored data slot SpaMTP assay. Note: process computationally expensive large datasets (default = FALSE). new_SPT.assay Character string defining assay name new overlaid SpaMTP Seurat object containing updated transcriptomics data (default = \"SPT\"). new_SPM.assay Character string defining assay name new overlaid SpaMTP Seurat object containing updated metabolomic data (default = \"SPM\"). verbose Boolean value indicating whether print informative progression update messages progress bars (default = TRUE).","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/MapSpatialOmics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Maps Spatial Metabolomic (MALDI) data to corresponding Spatial Transcriptomics data and coordinates. — MapSpatialOmics","text":"SpaMTP Seurat object Spatial Metabolomic data mapped equivalent Spatial Transcripomics coordinates (Visium spots/Xenium cells).","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/MapSpatialOmics.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Maps Spatial Metabolomic (MALDI) data to corresponding Spatial Transcriptomics data and coordinates. — MapSpatialOmics","text":"","code":"## Mapping MALDI data to equivalent Visium spots # MapSpatialOmics(VisiumObj, SeuratObj, ST.scale.factor = \"hires\", SM.assay = \"Spatial\", ST.assay = \"Spatial\")  #' ## Mapping MALDI data to equivalent Xenium cells # MapSpatialOmics(VisiumObj, SeuratObj, SM.assay = \"Spatial\", ST.assay = \"Xenium\")"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/MassIntensityPlot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot mass intensity spectra — MassIntensityPlot","title":"Plot mass intensity spectra — MassIntensityPlot","text":"function plots mean mass spectra intensity values given SpaMTP Seurat Object, groups/splits categories supplied.","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/MassIntensityPlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot mass intensity spectra — MassIntensityPlot","text":"","code":"MassIntensityPlot(   data,   group.by = NULL,   split.by = NULL,   cols = NULL,   assay = \"Spatial\",   slot = \"counts\",   label.annotations = FALSE,   annotation.column = \"all_IsomerNames\",   mz.labels = NULL,   metabolite.labels = NULL,   xlab = \"m/z\",   ylab = \"intensity\",   mass.range = NULL,   y.lim = NULL,   labelCex = 5,   labelAdj = -1,   labelOffset = 0,   labelCol = \"#eb4034\",   nlabels.to.show = NULL )"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/MassIntensityPlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot mass intensity spectra — MassIntensityPlot","text":"data Seurat object containing data plot. group.Character string defining name meta.data column group data . Results group overlayed one plot (default = NULL). split.Character string defining name meta.data column group split data . Results group plotted individually (default = NULL). cols Vector character strings defining colours used identify group (default = NULL). assay Character string defining relative Seurat Object assay pull required intensity data (default = \"Spatial\"). slot Character string defining relative slot Seurat Object assay pull required intensity data (default = \"counts\"). label.annotations Boolean value defining whether plot metabolite annotations supplied mz.labels metabolite.labels plot (default = FALSE). annotation.column Character string defining name feature meta.data column contains stored m/z annotations (default = \"all_IsomerNames\"). mz.labels Vector character strings defining m/z values display plot (default = NULL). metabolite.labels Vector character strings defining metabolite names display plot (default = NULL). xlab Character string describing x-axis title (default = \"m/z\"). ylab Character string describing y-axis title (default = \"intensity\"). mass.range Vector numeric values defining range m/z values include (default = NULL). y.lim Vector numeric values defining range intensity values include (default = NULL). labelCex Numeric values character expansion factor. Seen graphics::text() details (default = 0.7). labelAdj One two values [0,1] specify x y adjustments label. Seen graphics::text() details (default = NULL). labelOffset Value controls distance text label specified coordinates. Seen graphics::text() details (default = 0). labelCol Character string defining colour annotation labels (default = \"#eb4034\"). nlabels..show Numeric value defining number annotations show per m/z (default = NULL).","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/MassIntensityPlot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot mass intensity spectra — MassIntensityPlot","text":"mass spectrometry plot displaying mean intensity values","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/MassIntensityPlot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot mass intensity spectra — MassIntensityPlot","text":"","code":"## Plot mean of whole tissue section # MassIntensityPlot(SeuratObj)  ## Plot ssc segmentation groups on the same plot # MassIntensityPlot(SeuratObj, group.by = \"ssc\")  ## Plot mean of each ssc segmentation of separate plot with mz annotations # MassIntensityPlot(SeuratObj, split.by= \"ssc\", mz.labels = c(329.166), plot.layout = c(5,2))  ## Plot mean of each ssc segmentation of separate plot with metabolite annotations # MassIntensityPlot(SeuratObj, split.by= \"ssc\", mz.labels = c(329.166), label.annotations = TRUE)"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/MultiOmicIntegration.html","id":null,"dir":"Reference","previous_headings":"","what":"Mult-Omic data integration — MultiOmicIntegration","title":"Mult-Omic data integration — MultiOmicIntegration","text":"function performs multi-omic integration Spatial Metabolomics Spatial Transcriptomics data using Seurat's Weighted Nearest Neighbours function.","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/MultiOmicIntegration.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mult-Omic data integration — MultiOmicIntegration","text":"","code":"MultiOmicIntegration(   multiomic.data,   weight.list = NULL,   reduction.list = list(\"spt.pca\", \"spm.pca\"),   dims.list = list(1:30, 1:30),   return.intermediate = FALSE,   verbose = FALSE,   ... )"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/MultiOmicIntegration.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mult-Omic data integration — MultiOmicIntegration","text":"multiomic.data SpaMTP dataset contain Spatial Transcriptomics Metabolomic datasets two different assays weight.list List containing relative weightings modality, matching reduction order. NULL, weights automatically calculated else, two values must add 1 (default = NULL). reduction.list List containing character strings defining reduction use modality, order matching weight.list applicable (default = list(\"spt.pca\", \"spm.pca\")). dims.list List containing numeric range principle component dimension include modality (default = list(1:30,1:30)). return.intermediate Boolean value indicating whether store intermediate results misc slot SpaMTP Seurat class object (default = FALSE). verbose Boolean indicating whether show message. TRUE message show, else message suppressed (default = TRUE). ... Additional arguments can parsed Seurat's FindMultModalNeighbors function. possible inputs please visit: https://www.rdocumentation.org/packages/Seurat/versions/5.0.3/topics/FindMultiModalNeighbors.","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/MultiOmicIntegration.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Mult-Omic data integration — MultiOmicIntegration","text":"SpaMTP Seurat class object containing weighted nearest neighbours graph integrates Metabolic Transcriptomic modalities. graph can used clustering.","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/MultiOmicIntegration.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Mult-Omic data integration — MultiOmicIntegration","text":"","code":"# SpaMTP.obj <- MultiOmicIntegration(SpaMTP.obj, weight.list = list(0.5, 0.5), reduction.list =  list(\"spt.pca\", \"spm.pca\"), dims.list = list(1:30, 1:30))"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/NormalizeSMData.html","id":null,"dir":"Reference","previous_headings":"","what":"Normalizes m/z intensity data stored in a SpaMTP Seurat Object — NormalizeSMData","title":"Normalizes m/z intensity data stored in a SpaMTP Seurat Object — NormalizeSMData","text":"function can used normalising data already stored SpaMTP Seurat Object. Normalisation methods include total ion count (TIC), log normalisation counts per million (RC).","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/NormalizeSMData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normalizes m/z intensity data stored in a SpaMTP Seurat Object — NormalizeSMData","text":"","code":"NormalizeSMData(   data,   normalisation.type = \"TIC\",   scale.factor = NULL,   assay = \"Spatial\",   slot = \"counts\",   verbose = TRUE )"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/NormalizeSMData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Normalizes m/z intensity data stored in a SpaMTP Seurat Object — NormalizeSMData","text":"data Seurat Object normalized. normalisation.type Character string defining normalization method run. Options either c(\"TIC\", \"LogNormalize\", \"RC\") represent Total Ion Current (TIC) normalization, Log Normalization counts per million (RC), respectively (default = \"TIC\"). scale.factor Numeric value sets scale factor pixel/spot level normalization. Following normalization total intensity value across pixel equal value. scale.factor = NULL, TIC normalization use scale factor = number m/z Log Normalisation use scale factor = 10000 (default = NULL). assay Character string defining name Seurat Object assay pull corresponding intensity data (default = \"Spatial\"). slot Character string defining name slot within Seurat Object assay pull corresponding intensity data (default = \"counts\"). verbose Boolean indicating whether show message. TRUE message show, else message suppressed (default = TRUE).","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/NormalizeSMData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Normalizes m/z intensity data stored in a SpaMTP Seurat Object — NormalizeSMData","text":"Seurat Object intensity values normalized. Normalized data stored $data slot specified assay","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/NormalizeSMData.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Normalizes m/z intensity data stored in a SpaMTP Seurat Object — NormalizeSMData","text":"","code":"# normalised_data <- NormalizeSMData(SeuratObject)"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/PathwayNetworkPlots.html","id":null,"dir":"Reference","previous_headings":"","what":"Constructs an interactive network for exploring spatial metabolomics and transcriptomics data. — PathwayNetworkPlots","title":"Constructs an interactive network for exploring spatial metabolomics and transcriptomics data. — PathwayNetworkPlots","text":"Constructs interactive network exploring spatial metabolomics transcriptomics data.","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/PathwayNetworkPlots.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Constructs an interactive network for exploring spatial metabolomics and transcriptomics data. — PathwayNetworkPlots","text":"","code":"PathwayNetworkPlots(   SpaMTP,   ident,   regpathway,   DE.list,   selected_pathways = NULL,   path = getwd(),   SM_slot = \"counts\",   ST_slot = \"counts\",   colour_palette = NULL,   SM_assay = \"SPM\",   ST_assay = \"SPT\",   analyte_types = c(\"genes\", \"metabolites\"),   image = \"slice1\",   verbose = T )"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/PathwayNetworkPlots.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Constructs an interactive network for exploring spatial metabolomics and transcriptomics data. — PathwayNetworkPlots","text":"SpaMTP SpaMTP Seurat object containing spatial metabolomics (SM) /spatial transcriptomics (ST) data. SM data included, must annotated using SpaMTP::AnnotateSM() function. ident character string specifying cluster identifier used group regions, corresponding column name SpaMTP@meta.data slot. regpathway dataframe output SpaMTP::FindRegionalPathways() function, containing identified regional pathways. DE.list list containing differential expression results FindAllMarkers() function, items matching order analyte_types argument. selected_pathways character vector specifying names IDs pathways used construct network (e.g., c(\"Amino acid metabolism\", \"WP1902\", \"Aspartate asparagine metabolism\")). argument case-sensitive. path directory save output. provided, default current working directory. SM_slot slot name containing spatial metabolomics assay matrix (default: \"counts\"). ST_slot slot name containing spatial transcriptomics assay matrix (default: \"counts\"). colour_palette color palette used plot spatial image output HTML file. Default: grDevices::colorRampPalette(rev(RColorBrewer::brewer.pal(11, \"Spectral\")))(100). SM_assay character string specifying assay name spatial metabolomics data SpaMTP extract intensity values (default: \"SPM\"). ST_assay character string specifying assay name spatial transcriptomics data SpaMTP extract RNA count values (default: \"SPT\"). analyte_types subset c(\"genes\", \"metabolites\"). Can c(\"genes\"), c(\"metabolites\"), . image Character string specifying image stored within SpaMTP object use plotting (default = \"slice1\"). verbose logical value indicating whether display detailed messages execution (default: FALSE).","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/PathwayNetworkPlots.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Constructs an interactive network for exploring spatial metabolomics and transcriptomics data. — PathwayNetworkPlots","text":"interactive HTML file visualizing network structure specified pathways.","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/PathwayNetworkPlots.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Constructs an interactive network for exploring spatial metabolomics and transcriptomics data. — PathwayNetworkPlots","text":"","code":"#PathwayNetworkPlots(SpaMTP, ident = \"Custom_ident\", regpathway = regpathway, DE.list = DE.list, selected_pathways = selected_pathways)"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/Plot3DFeature.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates a 3D spatial feature plot from a SpaMTP object — Plot3DFeature","title":"Generates a 3D spatial feature plot from a SpaMTP object — Plot3DFeature","text":"function generates interactive plotly 3D spatial plot 2 specified features. features can include combination metabolites /genes expression values, numerical meta.data values. Features must numeric values. Please see  SpaMTP Additional Features vignette instructions plot catagorical data, > 2 features.","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/Plot3DFeature.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates a 3D spatial feature plot from a SpaMTP object — Plot3DFeature","text":"","code":"Plot3DFeature(   data,   features,   assays = c(\"SPT\", \"SPM\"),   slots = \"counts\",   between.layer.height = 100,   names = NULL,   size = 3,   col.palette = \"Reds\",   x.axis.label = \"x\",   y.axis.label = \"y\",   z.axis.label = \"z\",   show.x.ticks = FALSE,   show.y.ticks = FALSE,   show.z.ticks = FALSE,   show.image = NULL,   plot.height = 800,   plot.width = 1500,   image.sf = \"lowres\",   downscale.image = NULL )"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/Plot3DFeature.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates a 3D spatial feature plot from a SpaMTP object — Plot3DFeature","text":"data SpaMTP Seurat Object. features character vector specifying features plotted. assays character vector specifying Seurat Object assays used plotting (default = c(\"SPT\", \"SPM\")). slots character vector specifying assay slots used plotting (deafult = \"counts\"). .layer.height numeric value specifying height layers (default = 100). names character vector specifying custom names features. NULL use feature names (default = NULL). size numeric value specifying size markers plot (default = 3). col.palette Character list defining colour palettes use plotting. 1 supplied used variables. Possible palettes use : Blackbody,Bluered,Blues,Cividis,Earth,Electric,Greens,Greys,Hot,Jet,Picnic,Portland,Rainbow,RdBu,Reds,Viridis,YlGnBu,YlOrRd (default = \"Reds\"). x.axis.label character string specifying label x-axis (default = \"x\"). y.axis.label character string specifying label y-axis (default = \"y\"). z.axis.label character string specifying label z-axis (default = \"z\"). show.x.ticks logical value specifying whether show ticks x-axis (default = FALSE). show.y.ticks logical value specifying whether show ticks y-axis (default = FALSE). show.z.ticks logical value specifying whether show ticks z-axis (default = FALSE). show.image Character string specifying image name plot. NULL image plot (default = NULL). plot.height Numeric value defining height returned plot (default = 800). plot.width Numeric value defining width returned plot (default = 1500). image.sf Character string defining image scalefactor use (default = \"lowres\"). downscale.image Numeric value defining amount downscale image . parameter necessary show.image != NULL. Downscaling image necessary, however rendering plotly HTML excessively large images can cause issues whereby setting downscaling value can improve (default = NULL).","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/Plot3DFeature.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates a 3D spatial feature plot from a SpaMTP object — Plot3DFeature","text":"3D Plotly plot","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/Plot3DFeature.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generates a 3D spatial feature plot from a SpaMTP object — Plot3DFeature","text":"","code":"# Plot3DFeature(data = my_data, features = c(\"gene1\", \"gene2\"), assays = c(\"SPT\", \"SPM\"), show.image = \"slice1\")"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/PlotPathways.html","id":null,"dir":"Reference","previous_headings":"","what":"Plots the expression profile of a feature set corresponding to specified pathways onto a 2D scatter plot based on a dimensionality reduction technique. — PlotPathways","title":"Plots the expression profile of a feature set corresponding to specified pathways onto a 2D scatter plot based on a dimensionality reduction technique. — PlotPathways","text":"function adapted fgsea package. detail function inputs please visit documentation.","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/PlotPathways.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plots the expression profile of a feature set corresponding to specified pathways onto a 2D scatter plot based on a dimensionality reduction technique. — PlotPathways","text":"","code":"PlotPathways(   pathways,   object,   title = NULL,   assay = DefaultAssay(object),   slot = \"scale.data\",   reduction = NULL,   colors = c(\"darkblue\", \"lightgrey\", \"darkred\"),   guide = \"colourbar\",   ... )"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/PlotPathways.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plots the expression profile of a feature set corresponding to specified pathways onto a 2D scatter plot based on a dimensionality reduction technique. — PlotPathways","text":"pathways Character vector pathway names plot. pathways must stored chempathway object. check call unique(chempathway$pathwayName). object SpaMTP Seurat object containing dimensionality reduction use plotting. title Optional title plot. set NULL title pathway name (default = NULL). assay Character string defining name assay use data extraction. assay contain RAMP_IDs feature names (default = SeuratObject::DefaultAssay(object)). slot Character string defining name slot extract data (default = \"scale.data\"). reduction Character string defining dimensionality reduction use. specified, first searches 'umap', 'tsne', 'pca' (default = NULL). colors Vector colors gradient (default = c(\"darkblue\", \"lightgrey\", \"darkred\")). guide Character string stating type legend display (default = \"colourbar\"). ... Additional inputs taken Seurat::FeaturePlot(). Check relative documentation infomation.","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/PlotPathways.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plots the expression profile of a feature set corresponding to specified pathways onto a 2D scatter plot based on a dimensionality reduction technique. — PlotPathways","text":"ggplot object visualizing score pathway across relative reduction.","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/PlotPathways.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plots the expression profile of a feature set corresponding to specified pathways onto a 2D scatter plot based on a dimensionality reduction technique. — PlotPathways","text":"","code":"#PlotPathways(c(\"Glycolysis\", \"Acylcarnitine 3-Butenylcarnitine\", \"ABC transporters\"), spamtp_obj, reduction = \"umap\"))"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/PlotPathwaysSpatially.html","id":null,"dir":"Reference","previous_headings":"","what":"Plots the spatial expression profile of a feature set corresponding to specified pathways — PlotPathwaysSpatially","title":"Plots the spatial expression profile of a feature set corresponding to specified pathways — PlotPathwaysSpatially","text":"function adapted fgsea package. detail function inputs please visit documentation.","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/PlotPathwaysSpatially.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plots the spatial expression profile of a feature set corresponding to specified pathways — PlotPathwaysSpatially","text":"","code":"PlotPathwaysSpatially(   pathways,   object,   images,   title = NULL,   image.alpha = 1,   assay = SeuratObject::DefaultAssay(object),   slot = \"scale.data\",   colors = c(\"darkblue\", \"lightgrey\", \"darkred\"),   guide = \"colourbar\",   crop = TRUE,   min.cutoff = NA,   max.cutoff = NA,   ncol = NULL,   pt.size.factor = 1.6,   alpha = c(1, 1),   image.scale = \"lowres\",   shape = 21,   stroke = NA,   interactive = FALSE,   information = NULL,   image.labels = NULL )"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/PlotPathwaysSpatially.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plots the spatial expression profile of a feature set corresponding to specified pathways — PlotPathwaysSpatially","text":"pathways Character vector pathway names plot. pathways must stored chempathway object. check call unique(chempathway$pathwayName). object SpaMTP Seurat object containing spatial data coordinates plotting. images Character vector specifying images use plotting SpaMTP Seurat Object. title Optional title plot. set NULL title pathway name (default = NULL). image.alpha Numeric value 0 1 controlling transparency underlying image (default = 1). assay Character string defining name assay use data extraction. assay contain RAMP_IDs feature names (default = SeuratObject::DefaultAssay(object)). slot Character string defining name slot extract data (default = \"scale.data\"). colors Vector colors gradient (default = c(\"darkblue\", \"lightgrey\", \"darkred\")). guide Character string stating type legend display (default = \"colourbar\"). crop Boolean logical indicating whether crop images (default = TRUE). min.cutoff Numeric value defining minimum cutoff value color scale. NA value determined based minimum value dataset (default = NA). max.cutoff Numeric value defining maximum cutoff value color scale. NA value determined based maximum value dataset (default = NA). ncol Numeric value defining Number columns arranging plots. Note useful multiple images supplied/containing within one SpaMTP Seurat Object (default = NULL). pt.size.factor Numeric value defining spot point size plotting (default = 1.6). alpha Numeric vector controlling transparency points (default = c(1,1). image.scale Character string defining image resolution use. can either \"hires\" \"lowres\" (default = \"lowres\"). shape Integer value defining shape points. shape = 21, circles plotted (default = 21). stroke Numeric value stating stroke width points (default = NA). interactive Boolean logical indicating whether create interactive plots. NOTE: functionality implemented Seurat::SpatialFeaturePlot (default = FALSE). information optional data.frame matrix extra information displayed hover. NOTE: functionality implemented Seurat::SpatialFeaturePlot (default = NULL). image.labels Character vector specifying optional labels multiple images (default = NULL).","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/PlotPathwaysSpatially.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plots the spatial expression profile of a feature set corresponding to specified pathways — PlotPathwaysSpatially","text":"ggplot object visualizing pathway score spatially.","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/PlotPathwaysSpatially.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plots the spatial expression profile of a feature set corresponding to specified pathways — PlotPathwaysSpatially","text":"","code":"#PlotPathwaysSpatially(c(\"Glycolysis\", \"Acylcarnitine 3-Butenylcarnitine\", \"ABC transporters\"), spamtp_obj)"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/PlotRegionalPathways.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot significantly enriched pathways per region — PlotRegionalPathways","title":"Plot significantly enriched pathways per region — PlotRegionalPathways","text":"Visualisation Set Enrichment Analysis Results SpaMTP::FindRegionalPathways().","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/PlotRegionalPathways.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot significantly enriched pathways per region — PlotRegionalPathways","text":"","code":"PlotRegionalPathways(   regpathway,   ident.column = \"Cluster_id\",   selected_pathways = NULL,   sig_cutoff = NULL,   num_display = NULL,   text_size = NULL,   verbose = TRUE )"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/PlotRegionalPathways.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot significantly enriched pathways per region — PlotRegionalPathways","text":"regpathway dataframe generated SpaMTP::FindRegionalPathways() function, containing identified regional pathways. ident.column character string specifying column name regpathway dataframe containing idents clusters compare (default = \"Cluster_id\"). selected_pathways character vector specifying names IDs pathways included analysis (e.g., c(\"Amino acid metabolism\", \"WP1902\", \"Aspartate asparagine metabolism\")). argument case-sensitive (default = NULL). sig_cutoff numeric value defining p-value cutoff classifying significant pathways. NULL p-value cutoff = 0.05 (default = NULL). num_display integer specifying number pathways display plot. set null plot smaller either 10 pathways number unique pathways provided 'regpathway' (default = NULL). text_size numeric value controlling size text elements plot. NULL default text size 12 (default = NULL). verbose Boolean indicating whether show message. TRUE message show, else message suppressed (default = TRUE).","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/PlotRegionalPathways.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot significantly enriched pathways per region — PlotRegionalPathways","text":"ggplot object representing set enrichment analysis results.","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/PlotRegionalPathways.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot significantly enriched pathways per region — PlotRegionalPathways","text":"","code":"# PlotRegionalPathways(SpaMTP, ident = \"clusters\", regpathway = pathway_df)"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/PlotSinglePathway.html","id":null,"dir":"Reference","previous_headings":"","what":"Plots the expression profile of a feature set corresponding to specified pathways onto a 2D scatter plot based on a dimensionality reduction technique. — PlotSinglePathway","title":"Plots the expression profile of a feature set corresponding to specified pathways onto a 2D scatter plot based on a dimensionality reduction technique. — PlotSinglePathway","text":"NOTE: helper function PlotPathways. function adapted fgsea package. detail function inputs please visit documentation.","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/PlotSinglePathway.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plots the expression profile of a feature set corresponding to specified pathways onto a 2D scatter plot based on a dimensionality reduction technique. — PlotSinglePathway","text":"","code":"PlotSinglePathway(   pathway,   object,   title = NULL,   assay = DefaultAssay(object),   slot = \"scale.data\",   reduction = NULL,   colors = c(\"darkblue\", \"lightgrey\", \"darkred\"),   guide = \"colourbar\",   ... )"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/PlotSinglePathway.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plots the expression profile of a feature set corresponding to specified pathways onto a 2D scatter plot based on a dimensionality reduction technique. — PlotSinglePathway","text":"pathway Character vector pathway names plot. pathways must stored chempathway object. check call unique(chempathway$pathwayName). object SpaMTP Seurat object containing spatial data coordinates plotting. title Optional title plot. set NULL title pathway name (default = NULL). assay Character string defining name assay use data extraction. assay contain RAMP_IDs feature names (default = SeuratObject::DefaultAssay(object)). slot Character string defining name slot extract data (default = \"scale.data\"). reduction Character string defining dimensionality reduction use. specified, first searches 'umap', 'tsne', 'pca' (default = NULL). colors Vector colors gradient (default = c(\"darkblue\", \"lightgrey\", \"darkred\")). guide Character string stating type legend display (default = \"colourbar\"). ... Additional inputs taken Seurat::FeaturePlot(). Check relative documentation infomation.","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/PlotSinglePathway.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plots the expression profile of a feature set corresponding to specified pathways onto a 2D scatter plot based on a dimensionality reduction technique. — PlotSinglePathway","text":"ggplot object visualizing pathway score spatially.","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/PlotSinglePathway.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plots the expression profile of a feature set corresponding to specified pathways onto a 2D scatter plot based on a dimensionality reduction technique. — PlotSinglePathway","text":"","code":"#glycolysis_list <- list(\"Glycolysis\" = c(\"RAMP_C_000218730\",\"RAMP_G_000012583\",\"RAMP_G_000001171\",\"RAMP_G_000007564\",\"RAMP_C_000218226\",\"RAMP_C_000040403\",\"RAMP_C_000001115\",\"RAMP_G_000008859\")) #PlotSinglePathway(glycolysis_list, spamtp_obj, reduction = \"umap\")"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/PlotSinglePathwaySpatially.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot expression profile of a single RAMP pathway spatially — PlotSinglePathwaySpatially","title":"Plot expression profile of a single RAMP pathway spatially — PlotSinglePathwaySpatially","text":"NOTE: helper function PlotPathwaysSpatially. function adapted fgsea package. detail function inputs please visit documentation.","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/PlotSinglePathwaySpatially.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot expression profile of a single RAMP pathway spatially — PlotSinglePathwaySpatially","text":"","code":"PlotSinglePathwaySpatially(   pathway,   object,   images,   title = NULL,   image.alpha = 1,   assay = SeuratObject::DefaultAssay(object),   slot = \"scale.data\",   colors = c(\"darkblue\", \"lightgrey\", \"darkred\"),   guide = \"colourbar\",   crop = TRUE,   min.cutoff = NA,   max.cutoff = NA,   ncol = NULL,   pt.size.factor = 1.6,   alpha = c(1, 1),   image.scale = \"lowres\",   shape = 21,   stroke = NA,   interactive = FALSE,   information = NULL,   image.labels = NULL )"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/PlotSinglePathwaySpatially.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot expression profile of a single RAMP pathway spatially — PlotSinglePathwaySpatially","text":"pathway Character vector analyte IDs (genes metabolites) pathway. object SpaMTP Seurat object containing spatial data coordinates plotting. images Character vector specifying images use plotting SpaMTP Seurat Object. title Optional title plot. set NULL title pathway name (default = NULL). image.alpha Numeric value 0 1 controlling transparency underlying image (default = 1). assay Character string defining name assay use data extraction. assay contain RAMP_IDs feature names (default = SeuratObject::DefaultAssay(object)). slot Character string defining name slot extract data (default = \"scale.data\"). colors Vector colors gradient (default = c(\"darkblue\", \"lightgrey\", \"darkred\")). guide Character string stating type legend display (default = \"colourbar\"). crop Boolean logical indicating whether crop images (default = TRUE). min.cutoff Numeric value defining minimum cutoff value color scale. NA value determined based minimum value dataset (default = NA). max.cutoff Numeric value defining maximum cutoff value color scale. NA value determined based maximum value dataset (default = NA). ncol Numeric value defining Number columns arranging plots. Note useful multiple images supplied/containing within one SpaMTP Seurat Object (default = NULL). pt.size.factor Numeric value defining spot point size plotting (default = 1.6). alpha Numeric vector controlling transparency points (default = c(1,1). image.scale Character string defining image resolution use. can either \"hires\" \"lowres\" (default = \"lowres\"). shape Integer value defining shape points. shape = 21, circles plotted (default = 21). stroke Numeric value stating stroke width points (default = NA). interactive Boolean logical indicating whether create interactive plots. NOTE: functionality implemented Seurat::SpatialFeaturePlot (default = FALSE). information optional data.frame matrix extra information displayed hover. NOTE: functionality implemented Seurat::SpatialFeaturePlot (default = NULL). image.labels Character vector specifying optional labels multiple images (default = NULL).","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/PlotSinglePathwaySpatially.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot expression profile of a single RAMP pathway spatially — PlotSinglePathwaySpatially","text":"ggplot object visualizing pathway score spatially.","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/PlotSinglePathwaySpatially.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot expression profile of a single RAMP pathway spatially — PlotSinglePathwaySpatially","text":"","code":"#glycolysis_list <- list(\"Glycolysis\" = c(\"RAMP_C_000218730\",\"RAMP_G_000012583\",\"RAMP_G_000001171\",\"RAMP_G_000007564\",\"RAMP_C_000218226\",\"RAMP_C_000040403\",\"RAMP_C_000001115\",\"RAMP_G_000008859\")) #PlotSinglePathwaySpatially(glycolysis_list, spamtp_obj)"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/Pseudo_msms.html","id":null,"dir":"Reference","previous_headings":"","what":"Find all library spectra10 above a cosine threshold for each imaging peak, restricting to a global precursor-mz range. — Pseudo_msms","title":"Find all library spectra10 above a cosine threshold for each imaging peak, restricting to a global precursor-mz range. — Pseudo_msms","text":"Find library spectra10 cosine threshold imaging peak, restricting global precursor-mz range.","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/Pseudo_msms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find all library spectra10 above a cosine threshold for each imaging peak, restricting to a global precursor-mz range. — Pseudo_msms","text":"","code":"Pseudo_msms(   raw_mz,   counts,   spectra10_list,   ppm_tol = 10,   frag_tol_da = 0.01,   cos_threshold = 0.7,   min_precursor = 0,   max_precursor = Inf )"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/Pseudo_msms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find all library spectra10 above a cosine threshold for each imaging peak, restricting to a global precursor-mz range. — Pseudo_msms","text":"raw_mz Numeric vector length n_peaks counts Numeric matrix n_peaks × n_pixels spectra10_list List Spectrum2 objects (length N_lib) ppm_tol Precursor‐matching tolerance ppm (default 10) frag_tol_da Fragment‐matching tolerance Da (default 0.01) cos_threshold Minimum cosine similarity report (default 0.7) min_precursor Minimum allowed precursor m/z (default = 0, .e. lower bound) max_precursor Maximum allowed precursor m/z (default = Inf, .e. upper bound)","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/Pseudo_msms.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find all library spectra10 above a cosine threshold for each imaging peak, restricting to a global precursor-mz range. — Pseudo_msms","text":"list length n_peaks. element integer vector giving indices spectra10_list library spectra10 cosine ≥ cos_threshold (integer(0) none).","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/RAMP_Reactome.html","id":null,"dir":"Reference","previous_headings":"","what":"RAMP_Reactome: A list containing network plot information about pathways from the Reactome database — RAMP_Reactome","title":"RAMP_Reactome: A list containing network plot information about pathways from the Reactome database — RAMP_Reactome","text":"object contains collection information RAMP Reactome network, including source, destination, direction, reaction type proteins metabolites.","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/RAMP_Reactome.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"RAMP_Reactome: A list containing network plot information about pathways from the Reactome database — RAMP_Reactome","text":"","code":"RAMP_Reactome"},{"path":[]},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/RAMP_Reactome.html","id":"a-list-with-elements-","dir":"Reference","previous_headings":"","what":"A list with 10 elements:","title":"RAMP_Reactome: A list containing network plot information about pathways from the Reactome database — RAMP_Reactome","text":"id Reactome pathway identifier (character) title Pathway title (character) database Source database (character) species Species (character) protEdges data frame 1 row 4 variables protein edges, including src, dest, directed, reaction_type (various types) protPropEdges data frame 747 rows 4 variables protein-protein interactions: src (character), dest (character), directed (integer), reaction_type (integer) metabolEdges data frame 1 row 4 variables metabolite edges, including src, dest, directed, reaction_type (various types) metabolPropEdges data frame 88 rows 4 variables metabolite interactions: src (character), dest (character), directed (integer), reaction_type (integer) mixedEdges data frame 311 rows 4 variables mixed interactions proteins metabolites: src (character), dest (character), directed (integer), reaction_type (integer) timestamp date data extraction (Date)","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/RAMP_hmdb.html","id":null,"dir":"Reference","previous_headings":"","what":"RAMP_hmdb: A list containing network plot information about pathways from the HMDB database — RAMP_hmdb","title":"RAMP_hmdb: A list containing network plot information about pathways from the HMDB database — RAMP_hmdb","text":"object contains collection information RAMP HMDB network, including source, destination, direction, reaction type proteins metabolites.","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/RAMP_hmdb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"RAMP_hmdb: A list containing network plot information about pathways from the HMDB database — RAMP_hmdb","text":"","code":"RAMP_hmdb"},{"path":[]},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/RAMP_hmdb.html","id":"a-list-with-elements-","dir":"Reference","previous_headings":"","what":"A list with 10 elements:","title":"RAMP_hmdb: A list containing network plot information about pathways from the HMDB database — RAMP_hmdb","text":"id HMDB pathway identifier (character) title Pathway title (character) database Source database (character) species Species (character) protEdges data frame 1 row 4 variables protein edges, including src, dest, directed, reaction_type (various types) protPropEdges data frame 747 rows 4 variables protein-protein interactions: src (character), dest (character), directed (integer), reaction_type (integer) metabolEdges data frame 1 row 4 variables metabolite edges, including src, dest, directed, reaction_type (various types) metabolPropEdges data frame 88 rows 4 variables metabolite interactions: src (character), dest (character), directed (integer), reaction_type (integer) mixedEdges data frame 311 rows 4 variables mixed interactions proteins metabolites: src (character), dest (character), directed (integer), reaction_type (integer) timestamp date data extraction (Date)","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/RAMP_kegg.html","id":null,"dir":"Reference","previous_headings":"","what":"RAMP_kegg: A list containing network plot information about pathways from the KEGG database — RAMP_kegg","title":"RAMP_kegg: A list containing network plot information about pathways from the KEGG database — RAMP_kegg","text":"object contains collection information RAMP KEGG network, including source, destination, direction, reaction type proteins metabolites.","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/RAMP_kegg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"RAMP_kegg: A list containing network plot information about pathways from the KEGG database — RAMP_kegg","text":"","code":"RAMP_kegg"},{"path":[]},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/RAMP_kegg.html","id":"a-list-with-elements-","dir":"Reference","previous_headings":"","what":"A list with 10 elements:","title":"RAMP_kegg: A list containing network plot information about pathways from the KEGG database — RAMP_kegg","text":"id KEGG pathway identifier (character) title Pathway title (character) database Source database (character) species Species (character) protEdges data frame 1 row 4 variables protein edges, including src, dest, directed, reaction_type (various types) protPropEdges data frame 747 rows 4 variables protein-protein interactions: src (character), dest (character), directed (integer), reaction_type (integer) metabolEdges data frame 1 row 4 variables metabolite edges, including src, dest, directed, reaction_type (various types) metabolPropEdges data frame 88 rows 4 variables metabolite interactions: src (character), dest (character), directed (integer), reaction_type (integer) mixedEdges data frame 311 rows 4 variables mixed interactions proteins metabolites: src (character), dest (character), directed (integer), reaction_type (integer) timestamp date data extraction (Date)","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/RAMP_wikipathway.html","id":null,"dir":"Reference","previous_headings":"","what":"RAMP_wikipathway: A list containing network plot information about pathways from the Wiki database — RAMP_wikipathway","title":"RAMP_wikipathway: A list containing network plot information about pathways from the Wiki database — RAMP_wikipathway","text":"object contains collection information RAMP Wiki network, including source, destination, direction, reaction type proteins metabolites.","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/RAMP_wikipathway.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"RAMP_wikipathway: A list containing network plot information about pathways from the Wiki database — RAMP_wikipathway","text":"","code":"RAMP_wikipathway"},{"path":[]},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/RAMP_wikipathway.html","id":"a-list-with-elements-","dir":"Reference","previous_headings":"","what":"A list with 10 elements:","title":"RAMP_wikipathway: A list containing network plot information about pathways from the Wiki database — RAMP_wikipathway","text":"id Wiki pathway identifier (character) title Pathway title (character) database Source database (character) species Species (character) protEdges data frame 1 row 4 variables protein edges, including src, dest, directed, reaction_type (various types) protPropEdges data frame 747 rows 4 variables protein-protein interactions: src (character), dest (character), directed (integer), reaction_type (integer) metabolEdges data frame 1 row 4 variables metabolite edges, including src, dest, directed, reaction_type (various types) metabolPropEdges data frame 88 rows 4 variables metabolite interactions: src (character), dest (character), directed (integer), reaction_type (integer) mixedEdges data frame 311 rows 4 variables mixed interactions proteins metabolites: src (character), dest (character), directed (integer), reaction_type (integer) timestamp date data extraction (Date)","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/ReadSM_mtx.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Spatial Metabolomics matrix file (.csv format) — ReadSM_mtx","title":"Read Spatial Metabolomics matrix file (.csv format) — ReadSM_mtx","text":"function reads SM data stored table format. table must contain two rows named 'x' 'y' storing respective pixel coordinates. columns relative m/z values containing intensity values pixel.","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/ReadSM_mtx.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Spatial Metabolomics matrix file (.csv format) — ReadSM_mtx","text":"","code":"ReadSM_mtx(   mtx.file,   assay = \"Spatial\",   verbose = TRUE,   feature.start.column = 1,   mz.prefix = NULL,   project.name = \"SpaMTP\" )"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/ReadSM_mtx.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Spatial Metabolomics matrix file (.csv format) — ReadSM_mtx","text":"mtx.file Character string defining path spatial metabolomic image matrix .csv file. assay Character string Seurat object assay name store relative intensity data (default = \"Spatial\"). verbose Boolean indicating whether show message. TRUE, message shown; else, suppressed (default = TRUE). feature.start.column Numeric value defining start index containing x, y, m/z value columns within table (default = 1). mz.prefix Character string matching prefix string front m/z name (default = NULL). project.name Character string defining name sample assigned orig.ident (default = \"SpaMTP\").","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/ReadSM_mtx.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read Spatial Metabolomics matrix file (.csv format) — ReadSM_mtx","text":"SpaMTP Seurat class object containing intensity values counts slot designated assay.","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/ReadSM_mtx.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read Spatial Metabolomics matrix file (.csv format) — ReadSM_mtx","text":"NOTE: input file must format similar table :   first two columns (x, y) contain respective spatial coordinates. subsequent columns contain m/z values intensities spatial pixel.","code":"A data.frame: 5 × 5    x   y   mz1  mz2  mz3 1  0   1    0    0   11 2  0   2    0    0    0 3  0   3    0    0    0 4  0   4   20    0    0 5  0   5    0    0    0"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/ReadSM_mtx.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read Spatial Metabolomics matrix file (.csv format) — ReadSM_mtx","text":"","code":"# msi_data <- ReadSM_mtx(\"~/Documents/msi_mtx.csv\")"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/RefineLipids.html","id":null,"dir":"Reference","previous_headings":"","what":"Uses common lipid nomenclature to simplify lipid annotations — RefineLipids","title":"Uses common lipid nomenclature to simplify lipid annotations — RefineLipids","text":"Based rgoslin, function ability simplify lipid annotations general terms, groups classes. function can input data frame containing column storing annotation refine entries annotated known lipid structures.","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/RefineLipids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Uses common lipid nomenclature to simplify lipid annotations — RefineLipids","text":"","code":"RefineLipids(   data,   annotation.column = \"annotations\",   database = \"HMDB\",   lipid_info = \"simple\" )"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/RefineLipids.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Uses common lipid nomenclature to simplify lipid annotations — RefineLipids","text":"data data.frame containing column lipid annotations annotation.column Character string matching column name containing lipid annotations provided df (default = \"annotations\"). database Character string defining database matching lipid annotations. Possible entries include c('Shorthand2020','Goslin','FattyAcids','LipidMaps','SwissLipids','HMDB') (default = \"HMDB\"). lipid_info Character string defining level information return lipid. Options either \"\" \"simple\". \"Simple\" returns smaller, simplified list annotations lipid. Please visit https://bioconductor.org/packages/release/bioc/vignettes/rgoslin/inst/doc/introduction.html see possible outputs (default = \"simple\")).","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/RefineLipids.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Uses common lipid nomenclature to simplify lipid annotations — RefineLipids","text":"Data.frame containing additional columns simplified lipid names","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/RefineLipids.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Uses common lipid nomenclature to simplify lipid annotations — RefineLipids","text":"","code":"# RefineLipids(DEPs_df)"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/RowVar.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the row variances for each m/z value — RowVar","title":"Compute the row variances for each m/z value — RowVar","text":"Compute row variances m/z value","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/RowVar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the row variances for each m/z value — RowVar","text":"","code":"RowVar(x)"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/RowVar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the row variances for each m/z value — RowVar","text":"x Matrix containing count values used correlation","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/RowVar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the row variances for each m/z value — RowVar","text":"Vector contating row variances m/z value","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/RowVar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute the row variances for each m/z value — RowVar","text":"","code":"#HELPER FUNCTION"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/RunMetabolicPCA.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates PCA analysis results for a SpaMTP Seurat Object — RunMetabolicPCA","title":"Generates PCA analysis results for a SpaMTP Seurat Object — RunMetabolicPCA","text":"function run PCA analaysis SpaMTP Seurat Object. user can provide bin/resolution size increase bin size reduce dimensionality/noise SM dataset prior calculating PCAs.","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/RunMetabolicPCA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates PCA analysis results for a SpaMTP Seurat Object — RunMetabolicPCA","text":"","code":"RunMetabolicPCA(   SpaMTP,   npcs = 30,   variance_explained_threshold = 0.9,   assay = \"SPM\",   slot = \"counts\",   show_variance_plot = FALSE,   bin_resolution = NULL,   resolution_units = \"ppm\",   bin_method = \"sum\",   reduction.name = \"pca\",   verbose = TRUE )"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/RunMetabolicPCA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates PCA analysis results for a SpaMTP Seurat Object — RunMetabolicPCA","text":"SpaMTP SpaMTP Seurat class object contains spatial metabolic information. npcs integer value indicated preferred number PCs retain (default = 30). variance_explained_threshold Numeric value defining explained variance threshold (default = 0.9). assay Character string defining SpaMTP assay extract intensity values (default = \"SPM\"). slot Character string defining assay slot containing intensity values (default = \"counts\"). show_variance_plot Boolean indicating weather display variance plot output analysis (default = FALSE). bin_resolution Numeric value defining resolution use binning m/z peaks. set NULL, binning performed (default = NULL). resolution_units Character string specifying units bin_resolution. Either 'ppm' 'mz' can provided. bin_resolution must provided parameter implemented (default = \"ppm\"). bin_method Character string defining method use binning respective m/z peaks fall within bin. Options parameter can one \"sum\", \"mean\", \"max\" \"min\". bin_resolution must provided parameter implemented (default = \"sum\"). reduction.name Character string indicating name associated PCA results stored output SpaMTP Seurat object (default = \"pca\"). verbose Boolean indicating whether show message. TRUE message show, else message suppressed (default = TRUE).","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/RunMetabolicPCA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates PCA analysis results for a SpaMTP Seurat Object — RunMetabolicPCA","text":"SpaMTP object pca results stored ","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/RunMetabolicPCA.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generates PCA analysis results for a SpaMTP Seurat Object — RunMetabolicPCA","text":"","code":"## For running PCA on un-adjusted peak bin sizes # spamtp_obj <- RunMetabolicPCA(spamtp_obj, npcs = 50)  ## For running PCA on increased peak bin sizes # spamtp_obj <- RunMetabolicPCA(spamtp_obj, npcs = 50, bin_resolution = 50)"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/RunRAMPgeseca.html","id":null,"dir":"Reference","previous_headings":"","what":"Runs multilevel Monte-Carlo variant for performing gene sets co-regulation analysis using the RAMP_DB metabolite/gene database. — RunRAMPgeseca","title":"Runs multilevel Monte-Carlo variant for performing gene sets co-regulation analysis using the RAMP_DB metabolite/gene database. — RunRAMPgeseca","text":"function adapted fgsea::geseca package identify significantly expressed RAMP_DB pathways based expression/feature embedding matrix.","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/RunRAMPgeseca.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Runs multilevel Monte-Carlo variant for performing gene sets co-regulation analysis using the RAMP_DB metabolite/gene database. — RunRAMPgeseca","text":"","code":"RunRAMPgeseca(   E,   minSize = 1,   maxSize = nrow(E) - 1,   center = TRUE,   scale = FALSE,   sampleSize = 101,   eps = 1e-50,   nproc = 0,   BPPARAM = NULL,   nPermSimple = 1000 )"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/RunRAMPgeseca.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Runs multilevel Monte-Carlo variant for performing gene sets co-regulation analysis using the RAMP_DB metabolite/gene database. — RunRAMPgeseca","text":"E expression matrix, rows corresponds RAMP_IDs, columns corresponds cell barcodes. minSize Minimal size gene set test. pathways threshold excluded (default = 1). maxSize Maximal size gene set test. pathways threshold excluded (default = nrow(E) - 1). center logical value indicating whether gene expression centered zero mean analysis takes place (default = TRUE). scale logical value indicating whether gene expression scaled unit variance analysis takes place (default = FALSE). sampleSize sample size conditional sampling (default = 101). eps parameter sets boundary calculating P-values (default = 1e-50). nproc equal zero sets BPPARAM use nproc workers (default = 0). BPPARAM Parallelization parameter used bplapply (default = NULL). nPermSimple Number permutations simple geseca implementation preliminary estimation P-values (default = 1000).","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/RunRAMPgeseca.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Runs multilevel Monte-Carlo variant for performing gene sets co-regulation analysis using the RAMP_DB metabolite/gene database. — RunRAMPgeseca","text":"table GESECA results. row corresponds tested RAMP_DB pathway.","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/RunRAMPgeseca.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Runs multilevel Monte-Carlo variant for performing gene sets co-regulation analysis using the RAMP_DB metabolite/gene database. — RunRAMPgeseca","text":"","code":"# E <- SpaMTP@reductions$pca.rev@feature.loadings # sig_pathways <- RunRAMPgeseca(E, minSize=15, maxSize=500)"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/RunSpatialGraphPCA.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform Dimensionality Reduction using Graph-Regularised PCA on Spatial Data — RunSpatialGraphPCA","title":"Perform Dimensionality Reduction using Graph-Regularised PCA on Spatial Data — RunSpatialGraphPCA","text":"Computes graph-regularised PCA using spatial coordinates scaled expression data. k-nearest neighbour (k-NN) graph computed using spatial locations used regularise PCA decomposition via graph Laplacian. result stored @reductions section returned SpaMTP Seurat object.","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/RunSpatialGraphPCA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform Dimensionality Reduction using Graph-Regularised PCA on Spatial Data — RunSpatialGraphPCA","text":"","code":"RunSpatialGraphPCA(   data,   n_components = 50,   assay = \"Spatial\",   slot = \"scale.data\",   image = NULL,   platform = \"Visium\",   lambda = 0.5,   n_neighbors = NULL,   include_self = FALSE,   alg = \"kd_tree\",   fast = TRUE,   graph_name = \"SpatialKNN\",   reduction_name = \"SpatialPCA\",   verbose = TRUE )"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/RunSpatialGraphPCA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform Dimensionality Reduction using Graph-Regularised PCA on Spatial Data — RunSpatialGraphPCA","text":"data SpaMTP Seurat object containing spatial data (feature data spatial coordinates). n_components Integer specifying number principal components compute (default = 50). assay Character string defining name assay use data (default = \"Spatial\"). slot Character string defining name slot extract scaled data (default = \"scale.data\"). image Character string matching name image use extracting spatial coordinates (default = NULL). platform Character string matching either \"Visium\" \"ST\" determine k-NN graph constructed. \"Visium\" k-nns handle hexagon spot arrangement, including setting n_neighbors = 6, else \"ST\" assignment set n_neighbors = 4 unless value specifically provided (default = \"Visium\"). lambda Numeric value defining regularisation parameter controls influence graph Laplacian (default = 0.5). n_neighbors Integer value specifying number spatial neighbours use. NULL, default 6 \"Visium\" data 4 \"ST\" platforms (default = NULL). include_self Boolean logical value indicating whether include self-connections graph (default = FALSE). alg Character string specifying algorithm use nearest neighbour search (passed FNN::get.knn()) (default =\"kd_tree\"). fast Boolean logical value stating whether use fast approximate eigendecomposition via RSpectra::eigs_sym(). large datasets recommended (default =TRUE). graph_name Character string name use storing computed spatial graph @graphs(default =\"SpatialKNN\"). reduction_name Character string stating name dimensionality reduction stored @reductions(default =\"SpatialPCA\"). verbose Boolean indicating whether show message. TRUE message show, else message suppressed (default = TRUE).","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/RunSpatialGraphPCA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform Dimensionality Reduction using Graph-Regularised PCA on Spatial Data — RunSpatialGraphPCA","text":"SpaMTP Seurat object new graph stored @graphs spatially-aware PCA reduction values stored @reductions.","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/RunSpatialGraphPCA.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Perform Dimensionality Reduction using Graph-Regularised PCA on Spatial Data — RunSpatialGraphPCA","text":"Note: method adapted GraphPCA python package.","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/RunSpatialGraphPCA.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform Dimensionality Reduction using Graph-Regularised PCA on Spatial Data — RunSpatialGraphPCA","text":"","code":"# spamtp_obj <- RunSpatialGraphPCA(spamtp_obj, platform = \"Visium\")"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/SaveSpaMTPData.html","id":null,"dir":"Reference","previous_headings":"","what":"Saves SpaMTP Object — SaveSpaMTPData","title":"Saves SpaMTP Object — SaveSpaMTPData","text":"function saves SpaMTP Seurat Object standard single-cell/spatial file format. includes filtered_feature_bc_matrix folder containing files storing features, barcode/pixels intensity matrix. Metadata sapatial files (scale factors hires/lowres images) also stored.","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/SaveSpaMTPData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Saves SpaMTP Object — SaveSpaMTPData","text":"","code":"SaveSpaMTPData(   data,   outdir,   assay = \"Spatial\",   slot = \"counts\",   image = NULL,   annotations = FALSE,   generate.h5 = TRUE,   verbose = TRUE )"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/SaveSpaMTPData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Saves SpaMTP Object — SaveSpaMTPData","text":"data Spatial Metabolomic SpaMTP Seurat Object saved. outdir Character string directory save mtx.mtx, barcode.tsv, features.tsv, barcode_metadata.csv feature_metadata.csv . assay Character string defining Seurat assay contains m/z count data (default = \"Spatial\"). slot Character string defining Seurat assay slot contains m/z values directly (default = \"counts\"). image Character string defining image stored within SpaMTP Seurat object save. NULL image saved (default = NULL). annotations Boolean values defining Seurat Object contains annotations saved (default = FALSE). generate.h5 Boolean value indicating whether generate filtered_feature_bc_matrix.h5 file. Often used data loading functions (e.g. scanpy.load_visium). FALSE, filtered_feature_bc_matrix folder generated (default = TRUE). verbose Boolean indicating whether show informative processing messages. TRUE message show, else message suppressed (default = TRUE).","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/SaveSpaMTPData.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Saves SpaMTP Object — SaveSpaMTPData","text":"can used saving data transfer python. Can read Anndata using scanpy.read_10x_mtx(). saving R saveRDS() recommended.","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/SaveSpaMTPData.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Saves SpaMTP Object — SaveSpaMTPData","text":"","code":"# saveSpaMTPData(SeuratObject, \"../output\", annotations = TRUE)"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/SearchAnnotations.html","id":null,"dir":"Reference","previous_headings":"","what":"Find Annotation — SearchAnnotations","title":"Find Annotation — SearchAnnotations","text":"Searches annotated m/z values return contain metabolite search term provided","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/SearchAnnotations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find Annotation — SearchAnnotations","text":"","code":"SearchAnnotations(   data,   metabolite,   assay = \"Spatial\",   search.exact = FALSE,   column.name = \"all_IsomerNames\" )"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/SearchAnnotations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find Annotation — SearchAnnotations","text":"data Seurat Spatial Metabolomic Object containing annotated m/z values. metabolite Character string metabolite search term. assay Character string defining Seurat assay contains annotated metadata corresponding m/z values (default = \"Spatial\"). search.exact Boolean value defining return m/z values contain exact match metabolite search term (default = FALSE). column.name Character string defining column name annotations stored slot meta.data (default = \"all_IsomerNames\").","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/SearchAnnotations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find Annotation — SearchAnnotations","text":"Data.Frame containing peak metadata corresponding metabolite search term provided","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/SearchAnnotations.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find Annotation — SearchAnnotations","text":"","code":"# SearchAnnotations(SeuratObj, \"Glucose\", search.exact = TRUE)"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/SelectROIs.html","id":null,"dir":"Reference","previous_headings":"","what":"Launch an Interactive ROI Annotation App for Seurat Spatial Data — SelectROIs","title":"Launch an Interactive ROI Annotation App for Seurat Spatial Data — SelectROIs","text":"function opens Shiny app allow users manually annotate Regions Interest (ROIs) spatial transcriptomics metabolomics data stored Seurat object. Users can interactively select regions using lasso selection, assign custom names ROI, save results binary (0/1) metadata columns Seurat object.","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/SelectROIs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Launch an Interactive ROI Annotation App for Seurat Spatial Data — SelectROIs","text":"","code":"SelectROIs(seurat_obj, image = \"fov\")"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/SelectROIs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Launch an Interactive ROI Annotation App for Seurat Spatial Data — SelectROIs","text":"seurat_obj Seurat object containing spatial coordinates metadata. image character string specifying spatial image source used GetTissueCoordinates(). Default \"fov\". Set \"VisiumV2\" Visium-style spatial data.","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/SelectROIs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Launch an Interactive ROI Annotation App for Seurat Spatial Data — SelectROIs","text":"modified Seurat object added metadata columns saved ROI (1 = inside ROI, 0 = outside).","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/SelectROIs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Launch an Interactive ROI Annotation App for Seurat Spatial Data — SelectROIs","text":"app includes options : Choose metadata column display. Adjust spot size display. Use lasso select spots name ROI. Save ROI Seurat object metadata. Export final Seurat object upon clicking \"Finish\". Spatial selection uses sf geometry tools. plot rendered using plotly.","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/SpatialMZAnnotationPlot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot expression of metabolites in spatially from a Spatial SpaMTP Objects. — SpatialMZAnnotationPlot","title":"Plot expression of metabolites in spatially from a Spatial SpaMTP Objects. — SpatialMZAnnotationPlot","text":"plotting values annotated metabolites stored SpaMTP Seurat Object containing image(.e. H&E image). function inherits Seurat::ImageFeaturePlot(). Look detailed documentation inputs.","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/SpatialMZAnnotationPlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot expression of metabolites in spatially from a Spatial SpaMTP Objects. — SpatialMZAnnotationPlot","text":"","code":"SpatialMZAnnotationPlot(   object,   metabolites,   plusminus = NULL,   images = NULL,   crop = TRUE,   assay = \"Spatial\",   slot = \"counts\",   keep.scale = \"feature\",   min.cutoff = NA,   max.cutoff = NA,   ncol = NULL,   combine = TRUE,   pt.size.factor = 1.6,   alpha = c(1, 1),   image.alpha = 1,   stroke = 0.25,   interactive = FALSE,   information = NULL,   column.name = \"all_IsomerNames\",   plot.exact = TRUE,   verbose = TRUE )"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/SpatialMZAnnotationPlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot expression of metabolites in spatially from a Spatial SpaMTP Objects. — SpatialMZAnnotationPlot","text":"object Seurat Spatial Metabolomic Object Visualise. metabolites Vector metabolite names plot (e.g. c(\"Glucose\", \"Glutamine\")). Seurat Object provided must contain annotations respective assay metadata. plusminus Numeric value defining range/threshold either side target peak/peaks binned together plotting (default = NULL). images Character string name image plot (default = NULL). crop Boolean value indicating crop plot focus points plotted (default = TRUE). assay Character string indicating Seurat object assay pull data form (default = \"Spatial\"). slot Character string indicating assay slot use pull expression values form (default = \"counts\"). keep.scale Character string describing handle color scale across multiple plots. Check Seurat::SpatialFeaturePlot() options (default = \"feature\"). min.cutoff Vector numeric value describing minimum cutoff values m/z feature (default = NA). max.cutoff Vector numeric value describing maximum cutoff values m/z feature (default = NA). ncol Integer defining number columns plotting multiple plots (default = NULL). combine Boolean value stating combine plots single patchworked ggplot object (default = TRUE). pt.size.factor Numeric value defining point size spots plotting (default = 1.6). alpha Numeric value 0 1 defining spot alpha (default = 1). image.alpha Numeric value 0 1 defining image alpha (default = 1). stroke Numeric value describing width border around spot (default. =0.25). interactive Boolean value launch interactive SpatialDimPlot SpatialFeaturePlot session, see Seurat::ISpatialDimPlot() Seurat::ISpatialFeaturePlot() details (default = FALSE). information optional dataframe matrix extra infomation displayed hover (default = NULL). column.name Character string defining column name annotations stored slot meta.data (default = \"all_IsomerNames\"). plot.exact Boolean value describing plot exact matches metabolite search terms, else plot metabolites contain serach word name (default = TRUE). verbose Boolean indicating whether show message. TRUE message show, else message suppressed (default = TRUE).","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/SpatialMZAnnotationPlot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot expression of metabolites in spatially from a Spatial SpaMTP Objects. — SpatialMZAnnotationPlot","text":"ggplot showing Spatial representation expression data specified m/z values Spatial data H&E Image","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/SpatialMZAnnotationPlot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot expression of metabolites in spatially from a Spatial SpaMTP Objects. — SpatialMZAnnotationPlot","text":"","code":"# SpatialMZAnnotationPlot(SeuratObj, mzs = c(\"Glucose\", \"Glutamine\")) # SpatialMZAnnotationPlot(SeuratObj, mzs = c(\"Glucose\", \"Glutamine\"), plusminus = 0.05)"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/SpatialMZPlot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot expression of m/z values spatially for a Spatial SpaMTP Seurat Objects. — SpatialMZPlot","title":"Plot expression of m/z values spatially for a Spatial SpaMTP Seurat Objects. — SpatialMZPlot","text":"plotting SM m/z data SpaMTP Seurat Object contains image (.e. H&E image). function inherits Seurat::SpatialFeaturePlot(). Look detailed documentation inputs.","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/SpatialMZPlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot expression of m/z values spatially for a Spatial SpaMTP Seurat Objects. — SpatialMZPlot","text":"","code":"SpatialMZPlot(   object,   mzs,   plusminus = NULL,   images = NULL,   crop = TRUE,   assay = \"Spatial\",   slot = \"counts\",   keep.scale = \"feature\",   min.cutoff = NA,   max.cutoff = NA,   ncol = NULL,   combine = TRUE,   pt.size.factor = 1.6,   alpha = c(1, 1),   image.alpha = 1,   stroke = 0.25,   interactive = FALSE,   information = NULL,   verbose = TRUE )"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/SpatialMZPlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot expression of m/z values spatially for a Spatial SpaMTP Seurat Objects. — SpatialMZPlot","text":"object Seurat Spatial Metabolomic Object Visualise. mzs Vector numeric m/z values plot (e.g. c(400.1578, 300.1)). function FindNearestMZ() used automatically find nearest m/z value ones given. plusminus Numeric value defining range/threshold either side target peak/peaks binned together plotting (default = NULL). images Character string name image plot (default = NULL). crop Boolean value indicating crop plot focus points plotted (default = TRUE). assay Character string indicating Seurat object assay pull data form (default = \"Spatial\"). slot Character string indicating assay slot use pull expression values form (default = \"counts\"). keep.scale Character string describing handle color scale across multiple plots. Check Seurat::SpatialFeaturePlot() options (default = \"feature\"). min.cutoff Vector numeric value describing minimum cutoff values m/z feature (default = NA). max.cutoff Vector numeric value describing maximum cutoff values m/z feature (default = NA). ncol Integer defining number columns plotting multiple plots (default = NULL). combine Boolean value stating combine plots single patchworked ggplot object (default = TRUE). pt.size.factor Numeric value defining point size spots plotting (default = 1.6). alpha Numeric value 0 1 defining spot alpha (default = 1). image.alpha Numeric value 0 1 defining image alpha (default = 1). stroke Numeric value describing width border around spot (default = 0.25). interactive Boolean value launch interactive SpatialDimPlot SpatialFeaturePlot session, see Seurat::ISpatialDimPlot() Seurat::ISpatialFeaturePlot() details (default = FALSE). information optional dataframe matrix extra information displayed hover (default = NULL). verbose Boolean indicating whether show message. TRUE message show, else message suppressed (default = TRUE).","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/SpatialMZPlot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot expression of m/z values spatially for a Spatial SpaMTP Seurat Objects. — SpatialMZPlot","text":"ggplot showing Spatial representation expression data specified m/z values Spatial data H&E Image","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/SpatialMZPlot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot expression of m/z values spatially for a Spatial SpaMTP Seurat Objects. — SpatialMZPlot","text":"","code":"# SpatialMZPlot(SeuratObj, mzs = c(400.678, 300.1)) # SpatialMZPlot(SeuratObj, mzs = c(400.678, 300.1), plusminus = 0.05)"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/SubsetMZFeatures.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset a SpaMTP Seurat Spatial Metabolomic object by a list of m/z's — SubsetMZFeatures","title":"Subset a SpaMTP Seurat Spatial Metabolomic object by a list of m/z's — SubsetMZFeatures","text":"Subset SpaMTP Seurat Spatial Metabolomic object list m/z's","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/SubsetMZFeatures.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset a SpaMTP Seurat Spatial Metabolomic object by a list of m/z's — SubsetMZFeatures","text":"","code":"SubsetMZFeatures(data, features, assay = \"Spatial\")"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/SubsetMZFeatures.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset a SpaMTP Seurat Spatial Metabolomic object by a list of m/z's — SubsetMZFeatures","text":"data Seurat Spatial Metabolomic Object subsetting. features list character strings defining features/mz values subset . assay character string identifying Seurat assay contains count data subset.","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/SubsetMZFeatures.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subset a SpaMTP Seurat Spatial Metabolomic object by a list of m/z's — SubsetMZFeatures","text":"subset Seurat object containing m/z values specified","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/SubsetMZFeatures.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Subset a SpaMTP Seurat Spatial Metabolomic object by a list of m/z's — SubsetMZFeatures","text":"","code":"# SubsetMZFeatures(SeuratObj, c(\"mz-160\",\"mz-170\",\"mz-180\"))"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/TMMNormalize.html","id":null,"dir":"Reference","previous_headings":"","what":"Performs TMM normalization between categories based on a specified ident — TMMNormalize","title":"Performs TMM normalization between categories based on a specified ident — TMMNormalize","text":"function mainly used normalising merged SpaMTP Seurat Object containing multiple samples.","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/TMMNormalize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Performs TMM normalization between categories based on a specified ident — TMMNormalize","text":"","code":"TMMNormalize(   combined.obj,   ident,   refIdent,   normalisation.type = \"CPM\",   CPM.scale.factor = 1e+06,   assay = \"Spatial\",   slot = \"counts\",   verbose = FALSE )"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/TMMNormalize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Performs TMM normalization between categories based on a specified ident — TMMNormalize","text":"combined.obj Seurat object contains groups normalized. ident Character string defining column name ident group normalize . refIdent Character string specifying one class/group type use reference TMM normalisation. normalisation.type Character string defining normalization method run. Options either c(\"CPM\", \"TIC\", \"LogNormalize\") represent counts per million (CPM), Total Ion Current (TIC) normalization Log Normalization, respectively (default = \"CPM\"). CPM.scale.factor Numeric value sets scale factor pixel/spot level normalization. Following normalization total intensity value across pixel equal value (default = 1e6). assay Character string defining name Seurat Object assay pull corresponding intensity data (default = \"Spatial\"). slot Character string defining name slot within Seurat Object assay pull corresponding intensity data (default = \"counts\"). verbose Boolean indicating whether show message. TRUE message show, else message suppressed (default = FALSE).","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/TMMNormalize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Performs TMM normalization between categories based on a specified ident — TMMNormalize","text":"Seurat object count values normalised corrected categories","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/TMMNormalize.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Performs TMM normalization between categories based on a specified ident — TMMNormalize","text":"","code":"# norm.data <- TMMNormalize(SeuratObj, ident = \"samples\", refIdent = \"sample1\", normalisation.type = \"CPM\")"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/VisualisePathways.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualise Significant Pathways — VisualisePathways","title":"Visualise Significant Pathways — VisualisePathways","text":"Displays pathway analysis results form running 'FishersPathwayAnalysis()' function","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/VisualisePathways.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualise Significant Pathways — VisualisePathways","text":"","code":"VisualisePathways(   SpaMTP,   pathway_df,   assay = \"SPM\",   slot = \"counts\",   min_n = 3,   p_val_threshold = 0.1,   method = \"ward.D2\",   verbose = TRUE,   ... )"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/VisualisePathways.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualise Significant Pathways — VisualisePathways","text":"SpaMTP SpaMTP Seurat object used run FishersPathwayAnalysis function. pathway_df Dataframe containing pathway enrichment results (output SpaMTP::FishersPathwayAnalysis function). assay Character string defining SpaMTP assay contains m/z values (default = \"SPM\"). slot Character string defining assay slot contain intensity values (default = \"counts\"). min_n Integer value specifying minimum number analytes required present pathway (default = 3). p_val_threshold p-val cutoff keep pathways generated fisher exact test (default = \"0.1\"). method Character string defining statistical method used calculate hclust (default = \"ward.D2\"). verbose Boolean indicating whether show informative messages. FALSE messages suppressed (default = TRUE). ... arguments pass stats::hclust","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/VisualisePathways.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualise Significant Pathways — VisualisePathways","text":"combined gg, ggplot object pathway dendrogram","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/VisualisePathways.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualise Significant Pathways — VisualisePathways","text":"","code":"#SpaMTP:::VisualisePathways(SpaMTP =seurat,pathway_df = pathway_df,p_val_threshold = 0.1,assay = \"Spatial\",slot = \"counts\")"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/addGesecaScores.html","id":null,"dir":"Reference","previous_headings":"","what":"Add GESECA Scores to SpaMTP Object — addGesecaScores","title":"Add GESECA Scores to SpaMTP Object — addGesecaScores","text":"Adds Feature Set Enrichment Score specific pathway SpaMTP Seurat object's metadata. helper function PlotPathwaysSpatially.","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/addGesecaScores.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add GESECA Scores to SpaMTP Object — addGesecaScores","text":"","code":"addGesecaScores(   pathways,   object,   assay = SeuratObject::DefaultAssay(object),   slot = \"scale.data\",   prefix = \"\",   scale = FALSE )"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/addGesecaScores.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add GESECA Scores to SpaMTP Object — addGesecaScores","text":"pathways List gene/metabolite sets list names (pathway name) become metadata column names. object SpaMTP Seurat object add pathway scores . assay Character string defining name assay use data extraction (default  = `SeuratObject::DefaultAssay(object)). slot Character string stating name slot extract data (default = \"scale.data\"). prefix Character string append pathway name metadata columns (default = \"\"). scale Boolean logical value indicating whether scale GESECA score (default = FALSE).","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/addGesecaScores.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add GESECA Scores to SpaMTP Object — addGesecaScores","text":"SpaMTP Seurat object added GESECA scores metadata.","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/addGesecaScores.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add GESECA Scores to SpaMTP Object — addGesecaScores","text":"","code":"### HELPER FUNCTION #glycolysis_list <- list(\"Glycolysis\" = c(\"RAMP_C_000218730\",\"RAMP_G_000012583\",\"RAMP_G_000001171\",\"RAMP_G_000007564\",\"RAMP_C_000218226\",\"RAMP_C_000040403\",\"RAMP_C_000001115\",\"RAMP_G_000008859\")) #spamtp_obj <- addGesecaScores(pathways = glycolysis_list, object = spamtp_obj ,assay = \"RNA\", scale = TRUE)"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/add_backslashes_to_specialfeatures.html","id":null,"dir":"Reference","previous_headings":"","what":"Adds in backslashes required to take into account special using grepl such as brackets and + — add_backslashes_to_specialfeatures","title":"Adds in backslashes required to take into account special using grepl such as brackets and + — add_backslashes_to_specialfeatures","text":"Adds backslashes required take account special using grepl brackets +","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/add_backslashes_to_specialfeatures.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adds in backslashes required to take into account special using grepl such as brackets and + — add_backslashes_to_specialfeatures","text":"","code":"add_backslashes_to_specialfeatures(input_string)"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/add_backslashes_to_specialfeatures.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adds in backslashes required to take into account special using grepl such as brackets and + — add_backslashes_to_specialfeatures","text":"input_string Character string requiring additional backslashes","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/add_backslashes_to_specialfeatures.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adds in backslashes required to take into account special using grepl such as brackets and + — add_backslashes_to_specialfeatures","text":"Character string containing double backslashes around special features","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/add_ssc_annotation.html","id":null,"dir":"Reference","previous_headings":"","what":"Adds Cardinal ssc segmentation annotation to m/z count data object — add_ssc_annotation","title":"Adds Cardinal ssc segmentation annotation to m/z count data object — add_ssc_annotation","text":"Add Spatial Shrunked Centroid (ssc) results non-intensity based Cardinal Object pixelData slot provided Cardinal Object containing intensity values m/z (e.g. MSImagingExperiment). function additional functionality can run Cardinal Objects .","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/add_ssc_annotation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adds Cardinal ssc segmentation annotation to m/z count data object — add_ssc_annotation","text":"","code":"add_ssc_annotation(data, data_ssc, resolution)"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/add_ssc_annotation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adds Cardinal ssc segmentation annotation to m/z count data object — add_ssc_annotation","text":"data Cardinal Object containing raw/binned m/z count data. data_ssc Cardinal Object containing ssc segmentation results. Note: Cardinal's spatialShrunkenCentroids() must run generate object. resolution integer (< v3.6.0) string (>= v3.6.0) defining ssc segmentation resolution add raw Cardinal object.","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/add_ssc_annotation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adds Cardinal ssc segmentation annotation to m/z count data object — add_ssc_annotation","text":"Cardinal Object containing raw m/z counts relative ssc segmentation annotations per pixel.","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/add_ssc_annotation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Adds Cardinal ssc segmentation annotation to m/z count data object — add_ssc_annotation","text":"","code":"# ssc_data <- Cardinal::spatialShrunkenCentroids(CardinalObj, ...) # new_CardinalObj <- add_ssc_annotation(CardinalObj, ssc_data, resolution =\"r=2,k=8,s=32\")"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/adduct_file.html","id":null,"dir":"Reference","previous_headings":"","what":"adduct_file: A dataframe containing possible adducts used for pathway analysis — adduct_file","title":"adduct_file: A dataframe containing possible adducts used for pathway analysis — adduct_file","text":"object contains collection adducts relative ion.mass, change polarity","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/adduct_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"adduct_file: A dataframe containing possible adducts used for pathway analysis — adduct_file","text":"","code":"adduct_file"},{"path":[]},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/adduct_file.html","id":"a-data-frame-with-rows-and-variables-","dir":"Reference","previous_headings":"","what":"A data frame with 47 rows and 6 variables:","title":"adduct_file: A dataframe containing possible adducts used for pathway analysis — adduct_file","text":"adduct_name Chemical formula adduct (character) ion.mass Mass molecular ion formula (character) charge Relative charge adduct (integer) mult Multiplication factor based original molecule mass (double) add_mass true mass ion added reduced (double) pol Polarity ion (reduced = negative, added = positive) (character)","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/analyte.html","id":null,"dir":"Reference","previous_headings":"","what":"analyte: A dataframe containing ID's of possible RAMP analytes — analyte","title":"analyte: A dataframe containing ID's of possible RAMP analytes — analyte","text":"object contains collection Ramp_DB analytes, along annotation analyte type","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/analyte.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"analyte: A dataframe containing ID's of possible RAMP analytes — analyte","text":"","code":"analyte"},{"path":[]},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/analyte.html","id":"a-data-frame-with-rows-and-variables-","dir":"Reference","previous_headings":"","what":"A data frame with 276,356 rows and 2 variables:","title":"analyte: A dataframe containing ID's of possible RAMP analytes — analyte","text":"rampId Ramp_DB analyte ID/Name (character) type Analyte type (character)","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/analytehaspathway.html","id":null,"dir":"Reference","previous_headings":"","what":"analytehaspathway: A dataframe containing RAMP_pathway ID's — analytehaspathway","title":"analytehaspathway: A dataframe containing RAMP_pathway ID's — analytehaspathway","text":"object contains collection RAMP_DB ID's, Pathway ID's relative pathway database source","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/analytehaspathway.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"analytehaspathway: A dataframe containing RAMP_pathway ID's — analytehaspathway","text":"","code":"analytehaspathway"},{"path":[]},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/analytehaspathway.html","id":"a-data-frame-with-rows-and-variables-","dir":"Reference","previous_headings":"","what":"A data frame with 825,296 rows and 3 variables:","title":"analytehaspathway: A dataframe containing RAMP_pathway ID's — analytehaspathway","text":"rampId Ramp_DB analyte ID/Name (character) pathwayRampId Ramp_DB pathway ID (character) pathwaySource Relative source database respective pathway (character)","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/annotateTable.html","id":null,"dir":"Reference","previous_headings":"","what":"Annotates m/z values sotred in a data.frame based on reference metabolite dataset — annotateTable","title":"Annotates m/z values sotred in a data.frame based on reference metabolite dataset — annotateTable","text":"Helper function AnnotatesSM() FishersPathwayAnalysis().","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/annotateTable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Annotates m/z values sotred in a data.frame based on reference metabolite dataset — annotateTable","text":"","code":"annotateTable(   mz_df,   db,   ppm_error = NULL,   adducts = NULL,   polarity = \"positive\",   tof_resolution = 30000,   verbose = TRUE )"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/annotateTable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Annotates m/z values sotred in a data.frame based on reference metabolite dataset — annotateTable","text":"mz_df dataframe containing m/z values annotation. db Reference metabolite dataset form Data.Frame. ppm_error Numeric value indicating size ppm error allowed matching molecular weights Seurat object reference dataset. want exact matches set ppm = 0 (default = NULL). adducts List adducts use searching database (e.g. \"M+NH4\",\"M+Na\",\"M+CH3OH+H\",\"M+K\" etc.). possible adducts please visit . NULL take full list adducts (default = NULL). polarity Character string defining polarity adducts use, either \"positive\", \"negative\" \"neutral\" (default = \"positive\"). tof_resolution tof resolution instrument used MALDI run, calculated ion [ion mass,m/z]/[Full width half height]. value used estimate ppm_error set NULL (default = 30000). verbose Boolean indicating whether show message. TRUE message show, else message suppressed (default = TRUE).","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/annotateTable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Annotates m/z values sotred in a data.frame based on reference metabolite dataset — annotateTable","text":"Generates intermediate annotated m/z dataframe","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/annotateTable.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Annotates m/z values sotred in a data.frame based on reference metabolite dataset — annotateTable","text":"","code":"### HelperFunction"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/bin.mz.html","id":null,"dir":"Reference","previous_headings":"","what":"Bins multiple m/z values into one. — bin.mz","title":"Bins multiple m/z values into one. — bin.mz","text":"function helper function BinMetabolites.","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/bin.mz.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bins multiple m/z values into one. — bin.mz","text":"","code":"bin.mz(   data,   mz_list,   assay = \"Spatial\",   slot = \"counts\",   stored.in.metadata = FALSE )"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/bin.mz.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bins multiple m/z values into one. — bin.mz","text":"data Seurat Spatial Metabolomic object containing mz values mz_list Vector m/z names binned one value assay Character string indicating Seurat object assay pull data form (default = \"Spatial\"). slot Character string indicating assay slot use pull expression values form (default = \"counts\"). stored..metadata Boolean value indicating mz_list searched metadata DataFrame. FALSE searches Seurat object assay slot, TRUE searches metadata slot (default = FALSE).","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/bin.mz.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bins multiple m/z values into one. — bin.mz","text":"Vector binned mz counts spot/pixel","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/bin.mz.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bins multiple m/z values into one. — bin.mz","text":"","code":"# mz_values <- plusminus(SeuratObj, 448.2, 0.05) # bin.mz(SeuratObj, mz_values)"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/calculate_bounds.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates the mz range of the observed_df — calculate_bounds","title":"Calculates the mz range of the observed_df — calculate_bounds","text":"Calculates mz range observed_df","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/calculate_bounds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates the mz range of the observed_df — calculate_bounds","text":"","code":"calculate_bounds(input_df)"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/calculate_bounds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates the mz range of the observed_df — calculate_bounds","text":"input_df DataFrame observed dataframe annotated","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/calculate_bounds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates the mz range of the observed_df — calculate_bounds","text":"list containing lower upper mz range provided sample","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/calculate_bounds.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates the mz range of the observed_df — calculate_bounds","text":"","code":"# mz_df <- SeuratObject`[[\"Spatial\"]][[\"mz\"]]` # mz_df$row_id <- seq(1, length(mz_df$mz))  # mass_range <- calculate_bounds(mz_df) # lower_bound <- mass_range$lower_bound # upper_bound <- mass_range$upper_bound"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/check_and_truncate_adduct_vector.html","id":null,"dir":"Reference","previous_headings":"","what":"Checks if the complete adduct is in the data base, else returns a truncated adduct — check_and_truncate_adduct_vector","title":"Checks if the complete adduct is in the data base, else returns a truncated adduct — check_and_truncate_adduct_vector","text":"Checks complete adduct data base, else returns truncated adduct","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/check_and_truncate_adduct_vector.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Checks if the complete adduct is in the data base, else returns a truncated adduct — check_and_truncate_adduct_vector","text":"","code":"check_and_truncate_adduct_vector(adduct, db, verbose = TRUE)"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/check_and_truncate_adduct_vector.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Checks if the complete adduct is in the data base, else returns a truncated adduct — check_and_truncate_adduct_vector","text":"adduct Character string defining adduct checked. db DataFrame current reference database. verbose Boolean indicating whether show message. TRUE message show, else message suppressed (default = TRUE).","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/check_and_truncate_adduct_vector.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Checks if the complete adduct is in the data base, else returns a truncated adduct — check_and_truncate_adduct_vector","text":"Character string complete truncated adduct","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/check_and_truncate_adduct_vector.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Checks if the complete adduct is in the data base, else returns a truncated adduct — check_and_truncate_adduct_vector","text":"","code":"# HMDB_db <- load(\"data/HMDB_1_names.rds\") # check_and_truncate_adduct_vector(c(\"M+H\"), HMDB_db)"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/check_cardinal_version.html","id":null,"dir":"Reference","previous_headings":"","what":"Check Cardinal Version — check_cardinal_version","title":"Check Cardinal Version — check_cardinal_version","text":"Checks Cardinal Package installed >= version 3.6.0","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/check_cardinal_version.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check Cardinal Version — check_cardinal_version","text":"","code":"check_cardinal_version()"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/check_cardinal_version.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check Cardinal Version — check_cardinal_version","text":"Boolean indicating version Cardinal >= 3.6.0","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/check_column_type.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to determine if a column contains categorical or continuous Data — check_column_type","title":"Helper function to determine if a column contains categorical or continuous Data — check_column_type","text":"Helper function determine column contains categorical continuous Data","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/check_column_type.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to determine if a column contains categorical or continuous Data — check_column_type","text":"","code":"check_column_type(col)"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/check_column_type.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to determine if a column contains categorical or continuous Data — check_column_type","text":"col data.frame column containing data interest.","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/check_column_type.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function to determine if a column contains categorical or continuous Data — check_column_type","text":"Character string defining data type contained withing column","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/check_column_type.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Helper function to determine if a column contains categorical or continuous Data — check_column_type","text":"","code":"#HELPER FUNCTION"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/chem_props.html","id":null,"dir":"Reference","previous_headings":"","what":"chem_props: A database containing the chemical properties and metadata of each RAMP_DB analyte — chem_props","title":"chem_props: A database containing the chemical properties and metadata of each RAMP_DB analyte — chem_props","text":"object contains collection RAMP_DB analytes corresponding metadata including chemical structure key (smiles), isotop mass, common name molecular fomular","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/chem_props.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"chem_props: A database containing the chemical properties and metadata of each RAMP_DB analyte — chem_props","text":"","code":"chem_props"},{"path":[]},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/chem_props.html","id":"a-data-frame-with-rows-and-variables-","dir":"Reference","previous_headings":"","what":"A data frame with 283,382 rows and 11 variables:","title":"chem_props: A database containing the chemical properties and metadata of each RAMP_DB analyte — chem_props","text":"rampId Ramp_DB analyte ID/Name (character) chem_data_source Relative source database respective analyte (character) chem_source_id Relative source database ID analyste (character) iso_smiles Smile structure relative analyte (character) inchi_key_prefix InChlKey prefix Internation Chemical Identifier (InChl) (character) inchi_key Full InChlKey corresponding analyte (character) inchi Full InChl identifier structure analyte (character) mw Molecular weight analyte (double) monoisotop_mass Relative monoisotopic mass analyate (double) common_name Analytes common name (character) mol_formula Analytes simplified molecular fomula (character)","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/combine.tr.html","id":null,"dir":"Reference","previous_headings":"","what":"Combines rigid tranformation matrices — combine.tr","title":"Combines rigid tranformation matrices — combine.tr","text":"Combines rigid tranformation matrices following order: translation points origin (0, 0) -> reflection points -> rotation alpha degrees translation points new center","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/combine.tr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combines rigid tranformation matrices — combine.tr","text":"","code":"combine.tr(center.cur, center.new, alpha, mirror.x = FALSE, mirror.y = FALSE)"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/combine.tr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combines rigid tranformation matrices — combine.tr","text":"center.cur (x, y) image pixel coordinates specifying current center tissue (stored slot \"tools\" \"centers\") center.new (x, y) image pixel coordinates specifying new center (image center) alpha Rotation angle mirror.x, mirror.y Logical: mirrors x y axis set TRUE","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/combine.tr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Combines rigid tranformation matrices — combine.tr","text":"","code":"if (FALSE) { # \\dontrun{ library(imager) library(tidyverse) im <- load.image(\"https://upload.wikimedia.org/wikipedia/commons/thumb/f/fd/Aster_Tataricus.JPG/1024px-Aster_Tataricus.JPG\") d <- sRGBtoLab(im) %>% as.data.frame(wide=\"c\")%>%   dplyr::select(-x,-y)  km <- kmeans(d, 2)  # Run a segmentation to extract flower seg <- as.cimg(abs(km$cluster - 2), dim = c(dim(im)[1:2], 1, 1)) plot(seg); highlight(seg == 1)  # Detect edges dx <- imgradient(seg, \"x\") dy <- imgradient(seg, \"y\") grad.mag <- sqrt(dx^2 + dy^2) plot(grad.mag)  # Extract points at edges edges.px <- which(grad.mag > max(grad.mag[, , 1, 1])/2, arr.ind = TRUE) points(edges.px, col = \"green\", cex = 0.1)  # Apply transformations to point set tr1 <- combine.tr(center.cur = apply(edges.px[, 1:2], 2, mean),                   center.new = c(1200, 1200), alpha = 90) tr2 <- combine.tr(center.cur = apply(edges.px[, 1:2], 2, mean),                   center.new = c(500, 1200), mirror.x = T, alpha = 30) tr3 <- combine.tr(center.cur = apply(edges.px[, 1:2], 2, mean),                   center.new = c(1200, 500), mirror.y = T, alpha = 270) plot(edges.px, xlim = c(0, 1700), ylim = c(0, 1700), cex = 0.1) points(t(tr1%*%t(edges.px[, 1:3])), cex = 0.1, col = \"red\") points(t(tr2%*%t(edges.px[, 1:3])), cex = 0.1, col = \"yellow\") points(t(tr3%*%t(edges.px[, 1:3])), cex = 0.1, col = \"blue\") } # }"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/db_adduct_filter.html","id":null,"dir":"Reference","previous_headings":"","what":"Filters the provided metabolomic database by polarity and adducts — db_adduct_filter","title":"Filters the provided metabolomic database by polarity and adducts — db_adduct_filter","text":"Filters provided metabolomic database polarity adducts","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/db_adduct_filter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filters the provided metabolomic database by polarity and adducts — db_adduct_filter","text":"","code":"db_adduct_filter(db, adduct, polarity = \"neg\", verbose = TRUE)"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/db_adduct_filter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filters the provided metabolomic database by polarity and adducts — db_adduct_filter","text":"db DataFrame current reference database. adduct Character string defining adduct checked. polarity Character string defining polarity adducts (default = \"neg\"). verbose Boolean indicating whether show message. TRUE message show, else message suppressed (default = TRUE).","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/db_adduct_filter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filters the provided metabolomic database by polarity and adducts — db_adduct_filter","text":"filtered reference metabolomic database DataFrame","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/db_adduct_filter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filters the provided metabolomic database by polarity and adducts — db_adduct_filter","text":"","code":"# HMDB_db <- load(\"data/HMDB_1_names.rds\") # db_adduct_filter(HMDB_db,c(\"M+H\"), polarity = \"pos\")"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/filtered_fmp10.html","id":null,"dir":"Reference","previous_headings":"","what":"filtered_fmp10: data.frame containing FMP10+ metabolite mappings — filtered_fmp10","title":"filtered_fmp10: data.frame containing FMP10+ metabolite mappings — filtered_fmp10","text":"dataset contains metabolite information various m/z values corresponding metabolite ID's HMDB, LipidMaps ChEMI databases.","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/filtered_fmp10.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"filtered_fmp10: data.frame containing FMP10+ metabolite mappings — filtered_fmp10","text":"","code":"filtered_fmp10"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/filtered_fmp10.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"filtered_fmp10: data.frame containing FMP10+ metabolite mappings — filtered_fmp10","text":"data frame following columns: mass (numeric) mass--charge ratio (m/z) metabolite. annotation (character) metabolite name structural description. Adduct (character) ionisation adduct associated metabolite, e.g., [M+K]. Formula (character) chemical formula metabolite, e.g., C9H16O. Isomers (character) unique identifier isomers metabolite, often linked external databases. Isomers_IDs (character) database-specific IDs isomers, LIPIDMAPS:LMFA05000118. Error (numeric) mass error difference observed theoretical m/z, typically parts-per-million (ppm). IsomerNames (character) Names isomers metabolite. Reference_mz (numeric) reference mass--charge ratio (m/z) used comparison alignment.","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/formula_filter.html","id":null,"dir":"Reference","previous_headings":"","what":"Filters reference Database to only select natural elements — formula_filter","title":"Filters reference Database to only select natural elements — formula_filter","text":"Filters reference Database select natural elements","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/formula_filter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filters reference Database to only select natural elements — formula_filter","text":"","code":"formula_filter(df, elements = NULL)"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/formula_filter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filters reference Database to only select natural elements — formula_filter","text":"df DataFrame reference database. elements Vector character strings elements include (default = c(\"H\", \"C\", \"N\", \"O\", \"S\", \"Cl\", \"Br\", \"F\", \"Na\", \"P\", \"\", \"Si\")).","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/formula_filter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filters reference Database to only select natural elements — formula_filter","text":"refined DataFrame includes annotations containing specified elements","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/formula_filter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filters reference Database to only select natural elements — formula_filter","text":"","code":"## Get filtered DB by adduct # db_1 <- db_adduct_filter(db, test_add_pos, polarity = \"pos\")  ## Refine to only include natural elements # db_2 <- formula_filter(db_1)"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/getRefinedAnnotations.html","id":null,"dir":"Reference","previous_headings":"","what":"Refines and reduces m/z annotations — getRefinedAnnotations","title":"Refines and reduces m/z annotations — getRefinedAnnotations","text":"Used subset dataset include annotations n number entries. example peaks can multiple annotations. Peaks n number annotations assigned removed Seurat Object.","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/getRefinedAnnotations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Refines and reduces m/z annotations — getRefinedAnnotations","text":"","code":"getRefinedAnnotations(obj, assay = \"Spatial\", n = 1)"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/getRefinedAnnotations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Refines and reduces m/z annotations — getRefinedAnnotations","text":"obj Seurat object needing annotation refinement. object must annotations present 'obj[[assay]]@meta.data' assay Character string defining Seurat object assay annotation data stored (default = \"Spatial\"). n Integer defining number entries annotation can assigned. higher counts removed (default = 1).","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/getRefinedAnnotations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Refines and reduces m/z annotations — getRefinedAnnotations","text":"Refined Seurat object contains annotated mz values n number annotations assigned (per mz value)","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/getRefinedAnnotations.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Refines and reduces m/z annotations — getRefinedAnnotations","text":"","code":"# HMDB_db <- load(\"data/HMDB_1_names.rds\") # AnnotatedSeuratObj <- AnnotateSeuratMALDI(SeuratObj, HMDB_db)  # getRefinedAnnotations(AnnotatedSeuratObj, n = 2)"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/get_analytes_db.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function for building a pathway db based on detected — get_analytes_db","title":"Helper function for building a pathway db based on detected — get_analytes_db","text":"Helper function building pathway db based detected","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/get_analytes_db.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function for building a pathway db based on detected — get_analytes_db","text":"","code":"get_analytes_db(input_id, analytehaspathway, chem_props, pathway)"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/get_analytes_db.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function for building a pathway db based on detected — get_analytes_db","text":"input_id Vector characters defining detected . analytehaspathway dataframe containing RAMP_pathway ID's. chem_props database containing chemical properties metadata RAMP_DB analyte. pathway dataframe containing RAMP_DB pathways relative metadata","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/get_analytes_db.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function for building a pathway db based on detected — get_analytes_db","text":"analyte database containing corresponding pathways associated detected metabolite","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/get_analytes_db.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Helper function for building a pathway db based on detected — get_analytes_db","text":"","code":"#HELPER FUNCTION"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/get_metaspace.html","id":null,"dir":"Reference","previous_headings":"","what":"Core METASPACE Data Retrieval — get_metaspace","title":"Core METASPACE Data Retrieval — get_metaspace","text":"main user-facing function download annotations ion images METASPACE dataset.","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/get_metaspace.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Core METASPACE Data Retrieval — get_metaspace","text":"","code":"get_metaspace(   dataset_id,   fdr = 0.1,   database = c(\"HMDB\", \"v4\"),   include_images = TRUE,   api_key = NULL,   isotope_idx = 1,   relative = TRUE )"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/get_metaspace.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Core METASPACE Data Retrieval — get_metaspace","text":"dataset_id Character string METASPACE dataset ID. fdr Numeric, FDR level threshold (default = 0.1). database Character vector, specifying database name version (default = c(\"HMDB\", \"v4\")). include_images Logical, TRUE, downloads ion image matrices (default = TRUE). api_key Optional character string, METASPACE API key (default = NULL). isotope_idx Integer, index isotope image download annotations (1 main peak) (default = 1). relative Logical, TRUE, normalizes pixel intensities (0-1 range) (default = TRUE).","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/get_metaspace.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Core METASPACE Data Retrieval — get_metaspace","text":"list two elements: annotations (data.frame) images (list 2D matrices).","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/get_metaspace.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Core METASPACE Data Retrieval — get_metaspace","text":"","code":"# get_metaspace(dataset_id = \"2020-12-07_03h16m14s\", fdr = 0.1, database= c(\"HMDB\", \"v4\"), relative = TRUE)"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/get_square_coordinates.html","id":null,"dir":"Reference","previous_headings":"","what":"This function computes the coordinates of a square's four corners based on a given center point and width. — get_square_coordinates","title":"This function computes the coordinates of a square's four corners based on a given center point and width. — get_square_coordinates","text":"function computes coordinates square's four corners based given center point width.","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/get_square_coordinates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function computes the coordinates of a square's four corners based on a given center point and width. — get_square_coordinates","text":"","code":"get_square_coordinates(center_x, center_y, width, name)"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/get_square_coordinates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function computes the coordinates of a square's four corners based on a given center point and width. — get_square_coordinates","text":"center_x Numeric value defining x-coordinate square's center. center_y Numeric value defining y-coordinate square's center. width Numeric value indicating width square. name Character string specifying label assigned square identification.","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/get_square_coordinates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This function computes the coordinates of a square's four corners based on a given center point and width. — get_square_coordinates","text":"data frame columns Selection, X, Y representing square's name corner coordinates.","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/get_square_coordinates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"This function computes the coordinates of a square's four corners based on a given center point and width. — get_square_coordinates","text":"","code":"get_square_coordinates(center_x = 5, center_y = 5, width = 4, name = \"MySquare\") #>   Selection X Y #> 1  MySquare 3 3 #> 2  MySquare 7 3 #> 3  MySquare 7 7 #> 4  MySquare 3 7 #> 5  MySquare 3 3"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/hiresMapping.html","id":null,"dir":"Reference","previous_headings":"","what":"Maps SM pixels to high resolution ST data — hiresMapping","title":"Maps SM pixels to high resolution ST data — hiresMapping","text":"Function used MapSpatialOmics align SM data ST spots higher resolution (.e. Xenium cells)","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/hiresMapping.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Maps SM pixels to high resolution ST data — hiresMapping","text":"","code":"hiresMapping(   SM.data,   ST.data,   SM.assay = \"Spatial\",   ST.assay = \"Xenium\",   SM.fov = \"fov\",   ST.image = \"fov\",   SM.pixel.width = NULL,   annotations = TRUE,   add.metadata = TRUE,   map.data = FALSE,   new_SPT.assay = \"SPT\",   new_SPM.assay = \"SPM\",   verbose = FALSE )"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/hiresMapping.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Maps SM pixels to high resolution ST data — hiresMapping","text":"SM.data SpaMTP Seurat object representing Spatial Metabolomics data. ST.data Seurat object representing Xenium Spatial Transcriptomics data. SM.assay Character string defining Seurat assay contains annotated counts metadata corresponding m/z values (default = \"Spatial\"). ST.assay Character string specifying current assay use extract transcriptional data (default = \"Spatial\"). SM.fov Character string image fov associated spatial metabolomic data (default = \"fov\"). ST.image Character string matching image name associated ST data stored Xenium object (default = \"slice1\"). SM.pixel.width Numeric value defining width SM pixel. set NULL, median pixel width calculated based distance pixel (default = NULL). annotations Boolean value indicating Spatial Metabolomics (MALDI) Seurat object contains annotations assigned m/z values (default = TRUE). add.metadata Boolean defining whether add current metadata stored SM object new mapped multi-omic SpaMTP object (default = TRUE) map.data Boolean indicating whether map normalised/additional data stored data slot SpaMTP assay. Note: process computationally expensive large datasets (default = FALSE). new_SPT.assay Character string defining assay name new overlaid SpaMTP Seurat object containing updated transcriptomics data (default = \"SPT\"). new_SPM.assay Character string defining assay name new overlaid SpaMTP Seurat object containing updated metabolomic data (default = \"SPM\"). verbose Boolean value indicating whether print informative progression update messages progress bars (default = TRUE).","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/hiresMapping.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Maps SM pixels to high resolution ST data — hiresMapping","text":"SpaMTP Seurat object Spatial Metabolomic data mapped equivalent Spatial Transcripomics (Xenium) cells.","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/hiresMapping.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Maps SM pixels to high resolution ST data — hiresMapping","text":"","code":"# Helper function for MapSpatialOmics"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/is_formula_valid.html","id":null,"dir":"Reference","previous_headings":"","what":"Checks if a formula contains only the allowed elements — is_formula_valid","title":"Checks if a formula contains only the allowed elements — is_formula_valid","text":"Checks formula contains allowed elements","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/is_formula_valid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Checks if a formula contains only the allowed elements — is_formula_valid","text":"","code":"is_formula_valid(formula, allowed_elements)"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/is_formula_valid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Checks if a formula contains only the allowed elements — is_formula_valid","text":"formula Character string defining t allowed_elements Vector character strings defining allowed elements","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/is_formula_valid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Checks if a formula contains only the allowed elements — is_formula_valid","text":"","code":"### Helper function ###"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/kneighbors_graph.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct a k-Nearest Neighbour Graph from Spatial Coordinates. — kneighbors_graph","title":"Construct a k-Nearest Neighbour Graph from Spatial Coordinates. — kneighbors_graph","text":"Builds sparse adjacency matrix representing k-nearest neighbour relationships spots cells, using Euclidean distance spatial coordinates.","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/kneighbors_graph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct a k-Nearest Neighbour Graph from Spatial Coordinates. — kneighbors_graph","text":"","code":"kneighbors_graph(   location,   n_neighbors,   platform,   include_self = FALSE,   alg = \"kd_tree\" )"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/kneighbors_graph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct a k-Nearest Neighbour Graph from Spatial Coordinates. — kneighbors_graph","text":"location data frame matrix columns x y representing spatial coordinates, rownames match barcode/cell names. n_neighbors Integer value defining number neighbours consider. platform Character string either \"Visium\" \"ST\", specifying platform dataset analysed. Determines distance thresholds adjacency calculated whereby \"Visium\" data handled slightly differently compensate hexagon shape spots. include_self Boolean logical value stating whether include self-connections (default = FALSE). alg Character string specifying algorithm use nearest neighbour search. Passed FNN::get.knn() (default = \"kd_tree\").","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/kneighbors_graph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct a k-Nearest Neighbour Graph from Spatial Coordinates. — kneighbors_graph","text":"sparse adjacency matrix (dgCMatrix) representing k-NN graph.","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/kneighbors_graph.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Construct a k-Nearest Neighbour Graph from Spatial Coordinates. — kneighbors_graph","text":"","code":"### HELPER FUNCTION"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/labels_to_show.html","id":null,"dir":"Reference","previous_headings":"","what":"Filters the annotation list to only include the first n number of annotations per m/z — labels_to_show","title":"Filters the annotation list to only include the first n number of annotations per m/z — labels_to_show","text":"Filters annotation list include first n number annotations per m/z","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/labels_to_show.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filters the annotation list to only include the first n number of annotations per m/z — labels_to_show","text":"","code":"labels_to_show(annotation_column, n = 3)"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/labels_to_show.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filters the annotation list to only include the first n number of annotations per m/z — labels_to_show","text":"annotation_column Vector meta.data column containing m/z annotations. n Numeric value defining number annotations keep (default = 3).","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/labels_to_show.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filters the annotation list to only include the first n number of annotations per m/z — labels_to_show","text":"Vector containing first n number annotations","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/labels_to_show.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filters the annotation list to only include the first n number of annotations per m/z — labels_to_show","text":"","code":"# labels_to_show(`SeuratObject[[\"Spatial\"]]@meta.data$annotations`, n = 3)"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/list_to_pprcomp.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates a pprcomp object based on an input list — list_to_pprcomp","title":"Creates a pprcomp object based on an input list — list_to_pprcomp","text":"Creates pprcomp object based input list","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/list_to_pprcomp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates a pprcomp object based on an input list — list_to_pprcomp","text":"","code":"list_to_pprcomp(lst)"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/list_to_pprcomp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates a pprcomp object based on an input list — list_to_pprcomp","text":"lst List containing PCA results","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/list_to_pprcomp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates a pprcomp object based on an input list — list_to_pprcomp","text":"pprcomp object contating results PCA analysis","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/list_to_pprcomp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creates a pprcomp object based on an input list — list_to_pprcomp","text":"","code":"#HELPER FUNCTION"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/lowresMapping.html","id":null,"dir":"Reference","previous_headings":"","what":"Maps SM pixels to low resolution ST data — lowresMapping","title":"Maps SM pixels to low resolution ST data — lowresMapping","text":"Function used MapSpatialOmics align SM data ST spots lower resolution (.e. Visium Spots)","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/lowresMapping.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Maps SM pixels to low resolution ST data — lowresMapping","text":"","code":"lowresMapping(   SM.data,   ST.data,   SM.assay = \"Spatial\",   ST.assay = \"Spatial\",   SM.fov = \"fov\",   ST.image = \"slice1\",   ST.scale.factor = \"hires\",   SM.pixel.width = NULL,   overlap.threshold = 0.2,   annotations = TRUE,   add.metadata = TRUE,   merge.unique.metadata = TRUE,   map.data = FALSE,   new_SPT.assay = \"SPT\",   new_SPM.assay = \"SPM\",   verbose = FALSE )"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/lowresMapping.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Maps SM pixels to low resolution ST data — lowresMapping","text":"SM.data SpaMTP Seurat object representing Spatial Metabolomics data. ST.data Seurat object representing Visium Spatial Transcriptomics data. SM.assay Character string defining Seurat assay contains annotated counts metadata corresponding m/z values (default = \"Spatial\"). ST.assay Character string specifying current assay use extract transcriptional data (default = \"Spatial\"). SM.fov Character string image fov associated spatial metabolomic data (default = \"fov\"). ST.image Character string matching image name associated ST data stored Visium object (default = \"slice1\"). ST.scale.factor Character string defining image resolution associated Visium image pixel data. NULL full-res coordinates used scaling performed (default = \"hires\"). SM.pixel.width Numeric value defining width SM pixel. set NULL, median pixel width calculated based distance pixel (default = NULL). overlap.threshold Numeric value defining overlap proportion threshold SM pixel associated ST spot. example, res_increase = 0.2 pixels least 20% area overlap respective visium spot assigned match (default = 0.2). annotations Boolean value indicating Spatial Metabolomics (MALDI) Seurat object contains annotations assigned m/z values (default = TRUE). add.metadata Boolean defining whether add current metadata stored SM object new mapped multi-omic SpaMTP object (default = TRUE) merge.unique.metadata Boolean indicating whether summaries duplicated metadata terms store unique values metadata. Note: add.metadata must set TRUE functionality implmented (default = TRUE). map.data Boolean indicating whether map normalised/additional data stored data slot SpaMTP assay. Note: process computationally expensive large datasets (default = FALSE). new_SPT.assay Character string defining assay name new overlaid SpaMTP Seurat object containing updated transcriptomics data (default = \"SPT\"). new_SPM.assay Character string defining assay name new overlaid SpaMTP Seurat object containing updated metabolomic data (default = \"SPM\"). verbose Boolean value indicating whether print informative progression update messages progress bars (default = TRUE).","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/lowresMapping.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Maps SM pixels to low resolution ST data — lowresMapping","text":"SpaMTP Seurat object Spatial Metabolomic data mapped equivalent Spatial Transcripomics (Visium) spots.","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/lowresMapping.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Maps SM pixels to low resolution ST data — lowresMapping","text":"","code":"# Helper function for MapSpatialOmics"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/metaspace_client.html","id":null,"dir":"Reference","previous_headings":"","what":"Metaspace R Client Constructor — metaspace_client","title":"Metaspace R Client Constructor — metaspace_client","text":"Creates client object methods interact METASPACE GraphQL API.","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/metaspace_client.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Metaspace R Client Constructor — metaspace_client","text":"","code":"metaspace_client(host = \"https://metaspace2020.org\", api_key = NULL)"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/metaspace_client.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Metaspace R Client Constructor — metaspace_client","text":"host Character string specifying METASPACE host URL (default = \"https://metaspace2020.org\"). api_key Optional. METASPACE API key accessing private datasets. accessing public dataset can left NULL (default = NULL).","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/metaspace_client.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Metaspace R Client Constructor — metaspace_client","text":"list containing functions querying METASPACE data.","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/metaspace_client.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Metaspace R Client Constructor — metaspace_client","text":"","code":"# ms <- metaspace_client()"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/metaspace_to_feature_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert METASPACE Images to Feature Matrix — metaspace_to_feature_matrix","title":"Convert METASPACE Images to Feature Matrix — metaspace_to_feature_matrix","text":"Transforms list 2D ion image matrices get_metaspace single matrix suitable spatial analysis packages.","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/metaspace_to_feature_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert METASPACE Images to Feature Matrix — metaspace_to_feature_matrix","text":"","code":"metaspace_to_feature_matrix(metaspace_data, transform = FALSE, verbose = TRUE)"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/metaspace_to_feature_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert METASPACE Images to Feature Matrix — metaspace_to_feature_matrix","text":"metaspace_data list object returned get_metaspace. transform Logical. TRUE, transposes image matrix flattening (e.g., align coordinate systems) (default = FALSE). verbose Boolean indicating whether show message. TRUE message show, else message suppressed (default = TRUE).","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/metaspace_to_feature_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert METASPACE Images to Feature Matrix — metaspace_to_feature_matrix","text":"numeric matrix rows molecular features (m/z) columns spatial pixels (named 'x_y').","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/metaspace_to_feature_matrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert METASPACE Images to Feature Matrix — metaspace_to_feature_matrix","text":"","code":"# metaspace_to_feature_matrix(mtx, transform = TRUE)"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/mirror.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates a transformation matrix that mirrors an object in 2D along either the x axis or y axis around its center of mass — mirror","title":"Creates a transformation matrix that mirrors an object in 2D along either the x axis or y axis around its center of mass — mirror","text":"Creates transformation matrix mirrors object 2D along either x axis y axis around center mass","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/mirror.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates a transformation matrix that mirrors an object in 2D along either the x axis or y axis around its center of mass — mirror","text":"","code":"mirror(mirror.x = FALSE, mirror.y = FALSE, center.cur)"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/mirror.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates a transformation matrix that mirrors an object in 2D along either the x axis or y axis around its center of mass — mirror","text":"mirror.x, mirror.y Logical specifying whether object reflected center.cur Coordinates current center mass","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/pathway.html","id":null,"dir":"Reference","previous_headings":"","what":"pathway: A dataframe containing RAMP_DB pathways and their relative metadata — pathway","title":"pathway: A dataframe containing RAMP_DB pathways and their relative metadata — pathway","text":"object contains collection RAMP_DB pathways, source ID, pathway catagory common name","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/pathway.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"pathway: A dataframe containing RAMP_DB pathways and their relative metadata — pathway","text":"","code":"pathway"},{"path":[]},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/pathway.html","id":"a-data-frame-with-rows-and-variables-","dir":"Reference","previous_headings":"","what":"A data frame with 54,024 rows and 5 variables:","title":"pathway: A dataframe containing RAMP_DB pathways and their relative metadata — pathway","text":"pathwayRampId Relative source database ID analyste (character) rampId RAMP_DB pathway ID (character) IDtype Relative source database respective pathway (character) geneOrCompound Catagory grouping respecitive pathway (character) pathwayName Common name pathway (character)","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/pixelPlot.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function for converting Seurat Class ggplots from spot to pixel layout — pixelPlot","title":"Helper function for converting Seurat Class ggplots from spot to pixel layout — pixelPlot","text":"Helper function converting Seurat Class ggplots spot pixel layout","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/pixelPlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function for converting Seurat Class ggplots from spot to pixel layout — pixelPlot","text":"","code":"pixelPlot(plot)"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/pixelPlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function for converting Seurat Class ggplots from spot to pixel layout — pixelPlot","text":"plot ggplot object contating doplot converted pixel layout","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/pixelPlot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function for converting Seurat Class ggplots from spot to pixel layout — pixelPlot","text":"plot spots pixel layout rather spot","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/pixelPlot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Helper function for converting Seurat Class ggplots from spot to pixel layout — pixelPlot","text":"","code":"#pixelPlot(SpatialFeaturPlot(SpaMTP.obj, features = \"nFeature_Spatial\"))"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/plot_plus_minus.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper Function to generate merged counts within the plus minus range provided — plot_plus_minus","title":"Helper Function to generate merged counts within the plus minus range provided — plot_plus_minus","text":"Helper Function generate merged counts within plus minus range provided","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/plot_plus_minus.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper Function to generate merged counts within the plus minus range provided — plot_plus_minus","text":"","code":"plot_plus_minus(object, mz_list, plusminus)"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/plot_plus_minus.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper Function to generate merged counts within the plus minus range provided — plot_plus_minus","text":"object Seurat Spatial Metabolomic object containing mz values. mz_list Vector numeric m/z values plot (e.g. c(mz-400.1578, mz-300.1)). plusminus Numeric value defining range/threshold either side mz peak provided.","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/plot_plus_minus.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper Function to generate merged counts within the plus minus range provided — plot_plus_minus","text":"List contatining Seurat data object contains binned counts @metadata slot, column name data stored title binned plotted.","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/plot_plus_minus.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Helper Function to generate merged counts within the plus minus range provided — plot_plus_minus","text":"","code":"### HELPER FUNCTION ###"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/plusminus.html","id":null,"dir":"Reference","previous_headings":"","what":"Identifies all mz peaks within a plus-minus range of the target_mz — plusminus","title":"Identifies all mz peaks within a plus-minus range of the target_mz — plusminus","text":"Identifies mz peaks within plus-minus range target_mz","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/plusminus.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identifies all mz peaks within a plus-minus range of the target_mz — plusminus","text":"","code":"plusminus(data, target_mz, plus_minus)"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/plusminus.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identifies all mz peaks within a plus-minus range of the target_mz — plusminus","text":"data Seurat Spatial Metabolomic object containing mz values target_mz Numeric value defining target m/z peak plus_minus Numeric value defining range/threshold either side target peak also identified","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/plusminus.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identifies all mz peaks within a plus-minus range of the target_mz — plusminus","text":"Vector m/z values within plus-minus range target mz value","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/plusminus.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Identifies all mz peaks within a plus-minus range of the target_mz — plusminus","text":"","code":"# plusminus(SeuratObj, target_mz = 400.01, plus_minus = 0.005)"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/ppm_error.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates the ppm error as a valve — ppm_error","title":"Calculates the ppm error as a valve — ppm_error","text":"Calculates ppm error valve","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/ppm_error.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates the ppm error as a valve — ppm_error","text":"","code":"ppm_error(observed_mz, reference_mz, ppm)"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/ppm_error.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates the ppm error as a valve — ppm_error","text":"observed_mz Numeric value defining observed mz value. reference_mz Numeric value defining reference mz value. ppm Numeric value defining maximum acceptable ppm_error/threshold searching.","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/ppm_error.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates the ppm error as a valve — ppm_error","text":"Numeric value defining ppm_error observed reference mz value","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/ppm_error.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates the ppm error as a valve — ppm_error","text":"","code":"### Helper Function ###"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/ppm_range_match.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates the ppm range and check if mz values are within the range  Returns TRUE if match is found and false if no match.  — ppm_range_match","title":"Calculates the ppm range and check if mz values are within the range  Returns TRUE if match is found and false if no match.  — ppm_range_match","text":"Calculates ppm range check mz values within range Returns TRUE match found false match.","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/ppm_range_match.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates the ppm range and check if mz values are within the range  Returns TRUE if match is found and false if no match.  — ppm_range_match","text":"","code":"ppm_range_match(observed_mz, reference_mz, ppm)"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/ppm_range_match.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates the ppm range and check if mz values are within the range  Returns TRUE if match is found and false if no match.  — ppm_range_match","text":"observed_mz Numeric value defining observed mz value. reference_mz Numeric value defining reference mz value. ppm Numeric value defining maximum acceptable ppm_error/threshold searching.","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/ppm_range_match.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates the ppm range and check if mz values are within the range  Returns TRUE if match is found and false if no match.  — ppm_range_match","text":"Boolean value indicating match found (TRUE) (FALSE)","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/ppm_range_match.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates the ppm range and check if mz values are within the range  Returns TRUE if match is found and false if no match.  — ppm_range_match","text":"","code":"### Helper Function ###"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/proc_db.html","id":null,"dir":"Reference","previous_headings":"","what":"Searches observed mz values against the data base list and returns matching annotations — proc_db","title":"Searches observed mz values against the data base list and returns matching annotations — proc_db","text":"Searches observed mz values data base list returns matching annotations","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/proc_db.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Searches observed mz values against the data base list and returns matching annotations — proc_db","text":"","code":"proc_db(observed_df, reference_df, ppm_threshold = 10)"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/proc_db.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Searches observed mz values against the data base list and returns matching annotations — proc_db","text":"observed_df DataFrame containing observed mz values reference_df DataFrame contating reference mz values relative annotations. ppm_threshold Numeric value defining maximum acceptable ppm_error/threshold allowed observed reference mz values","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/proc_db.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Searches observed mz values against the data base list and returns matching annotations — proc_db","text":"DataFrame containing matched mz values observed reference dataframes","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/proc_db.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Searches observed mz values against the data base list and returns matching annotations — proc_db","text":"","code":"# HMDB_db <- load(\"data/HMDB_1_names.rds\") # mz_df <- SeuratObject[[\"Spatial\"]][[\"mz\"]] # mz_df$row_id <- seq(1, length(mz_df$mz))  ## 1) Filter DB by adduct. # db_1 <- db_adduct_filter(HMDB_db, c(\"M+H\"), polarity = \"pos\")  ## 2) only select natural elements # db_2 <- formula_filter(db_1)  ## 3) search db against mz df return results # db_3 <- proc_db(mz_df, db_2, ppm_threshold = 5)"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/reaction_type.html","id":null,"dir":"Reference","previous_headings":"","what":"reaction_type: data.frame containing reaction type mappings — reaction_type","title":"reaction_type: data.frame containing reaction type mappings — reaction_type","text":"data frame provides mapping reaction types associated attributes, reaction name, linetype, arrowhead type, colour used network visualization.","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/reaction_type.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"reaction_type: data.frame containing reaction type mappings — reaction_type","text":"","code":"reaction_type"},{"path":[]},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/reaction_type.html","id":"a-data-frame-with-rows-and-variables-","dir":"Reference","previous_headings":"","what":"A data frame with 11 rows and 5 variables:","title":"reaction_type: data.frame containing reaction type mappings — reaction_type","text":"reaction_type Numerical code representing type reaction (integer) reaction_name Description reaction process (character) linetype Line type used represent reaction network plots (character) arrowhead Arrowhead type indicating direction reaction (character) colour Colour used represent reaction network plots (character)","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/rigid.refl.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates a transformation matrix for reflection — rigid.refl","title":"Creates a transformation matrix for reflection — rigid.refl","text":"Creates transformation matrix reflection mirror.x reflect points along x axis mirror.y reflect thepoints along y axis. Points assumed centered (0, 0)","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/rigid.refl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates a transformation matrix for reflection — rigid.refl","text":"","code":"rigid.refl(mirror.x, mirror.y)"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/rigid.refl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates a transformation matrix for reflection — rigid.refl","text":"mirror.x, mirror.y Logical: mirrors x y axis set TRUE","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/rigid.rot.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates a transformation matrix for rotation — rigid.rot","title":"Creates a transformation matrix for rotation — rigid.rot","text":"Creates transformation matrix clockwise rotation 'alpha' degrees","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/rigid.rot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates a transformation matrix for rotation — rigid.rot","text":"","code":"rigid.rot(alpha = 0, forward = TRUE)"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/rigid.rot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates a transformation matrix for rotation — rigid.rot","text":"alpha rotation angle forward rotation done forward direction?","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/rigid.stretch.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates a transformation matrix for stretching — rigid.stretch","title":"Creates a transformation matrix for stretching — rigid.stretch","text":"Creates transformation matrix stretching factor r along x axis.","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/rigid.stretch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates a transformation matrix for stretching — rigid.stretch","text":"","code":"rigid.stretch(r)"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/rigid.stretch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates a transformation matrix for stretching — rigid.stretch","text":"r stretching factor","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/rigid.transf.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates a transformation matrix for rotation and translation — rigid.transf","title":"Creates a transformation matrix for rotation and translation — rigid.transf","text":"Creates transformation matrix clockwise rotation 'alpha' degrees followed translation offset (h, k). Points assumed centered (0, 0).","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/rigid.transf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates a transformation matrix for rotation and translation — rigid.transf","text":"","code":"rigid.transf(h = 0, k = 0, alpha = 0)"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/rigid.transf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates a transformation matrix for rotation and translation — rigid.transf","text":"h Numeric: offset along x axis k Numeric: offset along y axis alpha rotation angle","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/rigid.transl.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates a transformation matrix for translation with an offset of (h, k) — rigid.transl","title":"Creates a transformation matrix for translation with an offset of (h, k) — rigid.transl","text":"Creates transformation matrix translation offset (h, k)","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/rigid.transl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates a transformation matrix for translation with an offset of (h, k) — rigid.transl","text":"","code":"rigid.transl(h = 0, k = 0)"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/rigid.transl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates a transformation matrix for translation with an offset of (h, k) — rigid.transl","text":"h Numeric: offset along x axis k Numeric: offset along y axis","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/run_DE.html","id":null,"dir":"Reference","previous_headings":"","what":"Runs EdgeR analysis for pooled data — run_DE","title":"Runs EdgeR analysis for pooled data — run_DE","text":"Worker function calculating differentially abundant metabolites per pooling group. function used FindAllDEMs().","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/run_DE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Runs EdgeR analysis for pooled data — run_DE","text":"","code":"run_DE(   pooled_data,   seurat_data,   ident,   output_dir,   run_name,   n,   logFC_threshold,   annotation.column,   assay,   return.individual = FALSE,   verbose = TRUE )"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/run_DE.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Runs EdgeR analysis for pooled data — run_DE","text":"pooled_data SingleCellExperiment object contains pooled pseudo-replicate data. seurat_data Seurat object containing merged Xenium data analysed (subset). ident character string defining ident column perform differential expression analysis . output_dir character string defining ident column perform differential expression analysis . run_name character string defining title DE analysis (used saving DEMs .csv file). n integer defines number pseudo-replicates per sample (default = 3). logFC_threshold numeric value indicating logFC threshold use defining significant genes (default = 1.2). annotation.column Character string defining column annotation information stored assay metadata. requires AnnotateSeuratMALDI() run default column store annotations \"all_IsomerNames\" (default = \"None\"). assay character string defining assay mz count data annotations stored (default = \"Spatial\"). return.individual Boolean value defining whether return list individual edgeR objects designated ident. FALSE, one merged edgeR object returned (default = FALSE). verbose Boolean indicating whether show message. TRUE message show, else message suppressed (default = TRUE).","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/run_DE.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Runs EdgeR analysis for pooled data — run_DE","text":"modified edgeR object contains relative pseudo-bulking analysis outputs, including DEMs data.frame list differential expressed m/z metabolites","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/run_DE.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Runs EdgeR analysis for pooled data — run_DE","text":"","code":"# pooled_obj <- run_pooling(SeuratObj, \"sample\", n = 3) # run_DE(pooled_obj, SeuratObj, \"sample\", \"~/Documents/DE_output/\", \"run_1\", n = 3, logFC_threshold = 1.2, annotation.column = \"all_IsomerNames\", assay = \"Spatial\")"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/run_pooling.html","id":null,"dir":"Reference","previous_headings":"","what":"Pools SpaMTP Seurat object into random pools for pseudo-bulking. — run_pooling","title":"Pools SpaMTP Seurat object into random pools for pseudo-bulking. — run_pooling","text":"Runs pooling SpaMTP dataset generate pseudo-replicates unique identity provided. function used FindAllDEMs().","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/run_pooling.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pools SpaMTP Seurat object into random pools for pseudo-bulking. — run_pooling","text":"","code":"run_pooling(data.filt, idents, n, assay, slot, seed = 1234, verbose = TRUE)"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/run_pooling.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pools SpaMTP Seurat object into random pools for pseudo-bulking. — run_pooling","text":"data.filt Seurat Object containing count values pooling. idents character string defining idents column pool data . n integer defining amount pseudo-replicates generate sample (default = 3). assay Character string defining assay mz count data annotations stored (default = \"Spatial\"). slot Character string defining assay storage slot pull relative mz intensity values (default = \"counts\"). seed Numeric value used set seed reproducible randomisation (default = 1234). verbose Boolean indicating whether show message. TRUE message show, else message suppressed (default = TRUE).","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/run_pooling.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pools SpaMTP Seurat object into random pools for pseudo-bulking. — run_pooling","text":"SinglCellExpereiment object contains pooled (n)-pseudo-replicate counts data based Seurat Object input","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/run_pooling.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pools SpaMTP Seurat object into random pools for pseudo-bulking. — run_pooling","text":"","code":"# run_pooling <- list(seuratObj, idents = \"sample\", n = 3, assay = \"Spatial\", slot = \"counts\")"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/save_pheatmap_as_pdf.html","id":null,"dir":"Reference","previous_headings":"","what":"Saves a DEMsHeatmap as a PDF — save_pheatmap_as_pdf","title":"Saves a DEMsHeatmap as a PDF — save_pheatmap_as_pdf","text":"Saves DEMsHeatmap PDF","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/save_pheatmap_as_pdf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Saves a DEMsHeatmap as a PDF — save_pheatmap_as_pdf","text":"","code":"save_pheatmap_as_pdf(pheatmap, filename, width = 20, height = 20)"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/save_pheatmap_as_pdf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Saves a DEMsHeatmap as a PDF — save_pheatmap_as_pdf","text":"pheatmap pheatmap plot object saved. filename Character string defining full filepath name plot saved . width Integer value representing width saved pdf plot (default = 20). height Integer value representing height saved pdf plot (default = 20).","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/save_pheatmap_as_pdf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Saves a DEMsHeatmap as a PDF — save_pheatmap_as_pdf","text":"","code":"# save_pheatmap_as_pdf(pheatmap, filename = \"/Documents/plots/pheatmap1\")"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/source_df.html","id":null,"dir":"Reference","previous_headings":"","what":"source_df: A dataframe containing source information about RAMP_ID analyte used for analysis — source_df","title":"source_df: A dataframe containing source information about RAMP_ID analyte used for analysis — source_df","text":"object contains collection RAMP_DB analytes, source ID, common name pathway count","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/source_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"source_df: A dataframe containing source information about RAMP_ID analyte used for analysis — source_df","text":"","code":"source_df"},{"path":[]},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/source_df.html","id":"a-data-frame-with-rows-and-variables-","dir":"Reference","previous_headings":"","what":"A data frame with 810,652 rows and 8 variables:","title":"source_df: A dataframe containing source information about RAMP_ID analyte used for analysis — source_df","text":"sourceId Ramp_DB analyte ID(character) rampId Analyte source ID (character) type Analyte type (character) commonName Common name analyte (character) priorityHMDBStatus Priority level analyte (character) dataSource Relative source databases analyte represented (character) pathwayCount Number pathways analyte present (integer)","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/spectral_binning.html","id":null,"dir":"Reference","previous_headings":"","what":"Spectral binning of intensity values stored in a Matrix object, converted from matter. — spectral_binning","title":"Spectral binning of intensity values stored in a Matrix object, converted from matter. — spectral_binning","text":"Spectral binning intensity values stored Matrix object, converted matter.","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/spectral_binning.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Spectral binning of intensity values stored in a Matrix object, converted from matter. — spectral_binning","text":"","code":"spectral_binning(   matrix,   ref,   index,   method = c(\"sum\", \"mean\", \"max\", \"min\"),   tolerance )"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/spectral_binning.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Spectral binning of intensity values stored in a Matrix object, converted from matter. — spectral_binning","text":"matrix matter matrix object containing intensity values binned. ref vector reference mass--charge (m/z) values binning. left unspecified, mass range used generate reference peaks. index Character string specifying column name m/z values (default = \"mz\"). method character vector specifying binning method. Options include \"sum\", \"mean\", \"max\", \"min\". specified default method used \"sum\". tolerance Numeric value specifying tolerance m/z matching (default = NA).","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/spectral_binning.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Spectral binning of intensity values stored in a Matrix object, converted from matter. — spectral_binning","text":"Matrix object containing binned intensity values matching provided reference list.","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/spectral_binning.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Spectral binning of intensity values stored in a Matrix object, converted from matter. — spectral_binning","text":"","code":"#Helper function for binning data in Matrix format"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/statPlot.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function for QC plots by generating intensity count data — statPlot","title":"Helper function for QC plots by generating intensity count data — statPlot","text":"Helper function QC plots generating intensity count data","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/statPlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function for QC plots by generating intensity count data — statPlot","text":"","code":"statPlot(   seurat.obj,   group.by = NULL,   assay = \"Spatial\",   slot = \"counts\",   bottom.cutoff = NULL,   top.cutoff = NULL,   log.data = FALSE,   verbose = FALSE )"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/statPlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function for QC plots by generating intensity count data — statPlot","text":"seurat.obj Seruat object containing intensity data. group.Character string specifying meta.data column group (default = NULL). assay Character string defining name Seurat Object assay pull corresponding intensity data (default = \"Spatial\"). slot Character string defining name slot within Seurat Object assay pull corresponding intensity data (default = \"counts\"). bottom.cutoff Numeric value defining percent data exclude lower end distribution. bottom.cutoff = 0.05 remove bottom 5% data point (default = NULL). top.cutoff Numeric value defining percent data exclude upper end distribution. top.cutoff = 0.05 remove top 5% data point (default = NULL). log.data Boolean value indicating whether log transform y-axis values (default = FALSE). verbose Boolean indicating whether show message. TRUE message show, else message suppressed (default = FALSE).","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/statPlot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function for QC plots by generating intensity count data — statPlot","text":"data.frame containing relative transformed sum counts required various QC plots","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/statPlot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Helper function for QC plots by generating intensity count data — statPlot","text":"","code":"# df <- statPlot(SeuratObj, group.by = \"sample\", bottom.cutoff = 0.05, top.cutoff = 0.05, log.data = TRUE)"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/stretch.html","id":null,"dir":"Reference","previous_headings":"","what":"Stretch along angle — stretch","title":"Stretch along angle — stretch","text":"Creates transformation matrix stretches object along specific axis","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/stretch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stretch along angle — stretch","text":"","code":"stretch(r, alpha, center.cur)"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/stretch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stretch along angle — stretch","text":"r stretching factor alpha angle center.cur Coordinates current center mass","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/subset_SPM.html","id":null,"dir":"Reference","previous_headings":"","what":"Subsets SpaMTP Seurat Object containing FOVs — subset_SPM","title":"Subsets SpaMTP Seurat Object containing FOVs — subset_SPM","text":"Intermediate solution subset(): subset FOVs/centroids selected cells found FOV NOTE: code parts args taken SeuratObject","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/subset_SPM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subsets SpaMTP Seurat Object containing FOVs — subset_SPM","text":"","code":"subset_SPM(   object = NULL,   subset = NULL,   cells = NULL,   idents = NULL,   features = NULL,   Update.slots = TRUE,   Update.object = TRUE,   verbose = FALSE,   ... )"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/subset_SPM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subsets SpaMTP Seurat Object containing FOVs — subset_SPM","text":"object S4 object FOV object subset Logical expression indicating features/variables keep cells vector cells keep; NULL, defaults cells idents vector identity classes keep features vector feature names indices keep Update.slots update slots object Update.object update final object, default TRUE. verbose Boolean indicating whether show message. TRUE message show, else message suppressed (default = FALSE). ... Arguments passed subset() methods","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/subset_SPM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subsets SpaMTP Seurat Object containing FOVs — subset_SPM","text":"subset Seurat object","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/subset_SPM.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Subsets SpaMTP Seurat Object containing FOVs — subset_SPM","text":"Function params/args:","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/subset_SPM.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Subsets SpaMTP Seurat Object containing FOVs — subset_SPM","text":"","code":"# sub <- subset_obt(seurat.obj, idents = \"Sample1\")"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/translate.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates a transformation matrix that translates an object in 2D — translate","title":"Creates a transformation matrix that translates an object in 2D — translate","text":"Creates transformation matrix translates object 2D","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/translate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates a transformation matrix that translates an object in 2D — translate","text":"","code":"translate(translate.x, translate.y)"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/translate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates a transformation matrix that translates an object in 2D — translate","text":"translate.x, translate.y translation x, y coordinates","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/verbose_message.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function for suppressing function progress messages — verbose_message","title":"Helper function for suppressing function progress messages — verbose_message","text":"Helper function suppressing function progress messages","code":""},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/verbose_message.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function for suppressing function progress messages — verbose_message","text":"","code":"verbose_message(message_text, verbose)"},{"path":"https://genomicsmachinelearning.github.io/SpaMTP/reference/verbose_message.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function for suppressing function progress messages — verbose_message","text":"message_text Character string containing message shown verbose Boolean indicating whether show message. TRUE message show, else messsage suppressed (default = TRUE).","code":""}]
